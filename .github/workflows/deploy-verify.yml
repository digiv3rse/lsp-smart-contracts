# This workflow deploys and verify the lsp-smart-contracts and verify them.

name: Deploy + Verify Contracts

env:
  CONTRACT_VERIFICATION_PK: ${{ secrets.CONTRACT_VERIFICATION_PK }}
  DEPLOYER_ADDRESS: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"

on:
  workflow_dispatch:
  push:
    branches:
      - "ci/verify-contracts"

jobs:
  deploy-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js '16.15.0'
        uses: actions/setup-node@v2
        with:
          node-version: "16.15.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # This will also generate the Typechain types used by the Chai tests
      - name: Build contract artifacts
        run: npm run build --if-present

      - name: cache dependencies + build
        uses: actions/cache@v2
        with:
          path: |
            artifacts
            node_modules 
            types
          key: ${{ github.run_id }}

      # Save the output of the deployment in a text file.
      # For the UP, we need to specify the contract as UniversalProfile and LSP0ERC725Account have the same runtime code.
      - name: Deploy + Verify UniversalProfile + LSP6KeyManager on L16
        if: always()
        run: |
          npx hardhat deploy --network luksoL16 --tags LSP6KeyManager --reset >> UP_KM_deployment.txt
          UP_ADDRESS=$(grep -o -E '0x(\w|\s){40}' UP_KM_deployment.txt | head -n 2 | tail -n 1)
          npx hardhat verify $UP_ADDRESS $DEPLOYER_ADDRESS --network luksoL16 --contract contracts/UniversalProfile.sol:UniversalProfile
          KM_ADDRESS=$(grep -o -E '0x(\w|\s){40}' UP_KM_deployment.txt | tail -n 1)
          npx hardhat verify $KM_ADDRESS $UP_ADDRESS --network luksoL16

      - name: Deploy + Verify LSP1UniversalReceiverDelegateUP on L16
        if: always()
        run: |
          npx hardhat deploy --network luksoL16 --tags LSP1UniversalReceiverDelegateUP --reset >> URD_deployment.txt
          URD_ADDRESS=$(grep -o -E '0x(\w|\s){40}' URD_deployment.txt | tail -n 1)
          npx hardhat verify $URD_ADDRESS --network luksoL16

      - name: Deploy + Verify LSP7Mintable on L16
        if: always()
        run: |
          npx hardhat deploy --network luksoL16 --tags LSP7Mintable --reset >> LSP7_deployment.txt
          LSP7_Address=$(grep -o -E '0x(\w|\s){40}' LSP7_deployment.txt | tail -n 1)
          echo "module.exports = [ 'LSP7 Mintable', 'LSP7M', '$DEPLOYER_ADDRESS', false ];" >> lsp7arguments.js
          npx hardhat verify $LSP7_Address --constructor-args lsp7arguments.js --network luksoL16

      - name: Deploy + Verify LSP8Mintable on L16
        if: always()
        run: |
          npx hardhat deploy --network luksoL16 --tags LSP8Mintable --reset >> LSP8_deployment.txt
          LSP8_ADDRESS=$(grep -o -E '0x(\w|\s){40}' LSP8_deployment.txt | tail -n 1)
          echo "module.exports = [ 'LSP8 Mintable', 'LSP8M', '$DEPLOYER_ADDRESS' ];" >> lsp8arguments.js
          npx hardhat verify $LSP8_ADDRESS --constructor-args lsp8arguments.js --network luksoL16

      - name: Deploy + Verify LSP9Vault on L16
        if: always()
        run: |
          npx hardhat deploy --network luksoL16 --tags LSP9Vault --reset >> LSP9_deployment.txt
          LSP9_ADDRESS=$(grep -o -E '0x(\w|\s){40}' LSP9_deployment.txt | tail -n 1)
          npx hardhat verify $LSP9_ADDRESS $DEPLOYER_ADDRESS --network luksoL16

  deploy-verify-base:
    if: always()
    strategy:
      matrix:
        base_contract:
          [
            "UniversalProfileInit",
            "LSP6KeyManagerInit",
            "LSP7MintableInit",
            "LSP8MintableInit",
            "LSP9VaultInit",
          ]

    runs-on: ubuntu-latest
    needs: [deploy-verify]
    steps:
      - uses: actions/checkout@v3

      - name: restore cache
        uses: actions/cache@v2
        id: "build-cache"
        with:
          path: |
            artifacts
            node_modules 
            types
          key: ${{ github.run_id }}

      - name: Use Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          cache: "npm"

      - name: Install dependencies
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Deploy + Verify ${{ matrix.base_contract }} on L16
        if: always()
        run: |
          npx hardhat deploy --network luksoL16 --tags ${{ matrix.base_contract }} --reset >> base_deployment.txt
          BASE_CONTRACT_ADDRESS=$(grep -o -E '0x(\w|\s){40}' base_deployment.txt.txt | tail -n 1)
          npx hardhat verify $BASE_CONTRACT_ADDRESS --network luksoL16
