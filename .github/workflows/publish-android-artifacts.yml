# Upload Github artifacts

name: Upload Android Github artifacts CD

# Controls when the workflow will run
on:
  push:
    branches:
      - "main"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job
  android-build-artifacts:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Check if version changed
        uses: EndBug/version-check@v1
        id: check

      - name: Use Node.js '14.16.0'
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v2
        with:
          node-version: "14.16.0"
          cache: "npm"

      # - run: git submodule update --init --recursive
      - if: steps.check.outputs.changed == 'true'
        run: npm ci

      - if: steps.check.outputs.changed == 'true'
        run: cd ./submodules/ERC725/implementations && npm install

      - name: Step 1 - Generate artifacts using shell
        if: steps.check.outputs.changed == 'true'
        run: bash make-jar.sh

      - name: Set up our JDK environment
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.11

      - name: Grant rights
        if: steps.check.outputs.changed == 'true'
        run: chmod +x java/build.gradle

      - name: Build jar
        if: steps.check.outputs.changed == 'true'
        working-directory: ./java
        run: gradle build

      - name: Publish jar
        if: steps.check.outputs.changed == 'true'
        working-directory: ./java
        run: gradle publish
        env:
          # https://github.com/actions/setup-node/issues/49
          # Have to use my personal access token until the issue is resolved
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          GITHUB_ACTOR: ${{ secrets.PERSONAL_ACTOR }}
