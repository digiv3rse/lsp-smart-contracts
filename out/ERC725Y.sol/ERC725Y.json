{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50604051610bf3380380610bf383398101604081905261002f91610117565b6001600160a01b0381166100985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840160405180910390fd5b6100ab816100b160201b61037d1760201c565b50610147565b6000546001600160a01b0382811691161461011457600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505b50565b60006020828403121561012957600080fd5b81516001600160a01b038116811461014057600080fd5b9392505050565b610a9d806101566000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a61461010a5780637f23690c146101125780638da5cb5b14610125578063f2fde38b1461014057600080fd5b806301ffc9a71461008d57806314a6e293146100b55780634e3e6e9c146100ca57806354f6127f146100ea575b600080fd5b6100a061009b366004610542565b610153565b60405190151581526020015b60405180910390f35b6100c86100c33660046106b9565b61018a565b005b6100dd6100d836600461078e565b61021b565b6040516100ac9190610811565b6100fd6100f8366004610873565b6102cf565b6040516100ac919061088c565b6100c86102da565b6100c861012036600461089f565b6102ee565b6000546040516001600160a01b0390911681526020016100ac565b6100c861014e3660046108e6565b610304565b60006001600160e01b03198216631c537ddf60e21b148061018457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6101926103e2565b80518251146101c657815181516040516321d1e13360e11b8152600481019290925260248201526044015b60405180910390fd5b60005b82518110156102165761020e8382815181106101e7576101e761090f565b60200260200101518383815181106102015761020161090f565b602002602001015161044b565b6001016101c9565b505050565b6060815167ffffffffffffffff81111561023757610237610573565b60405190808252806020026020018201604052801561026a57816020015b60608152602001906001900390816102555790505b50905060005b82518110156102c95761029b83828151811061028e5761028e61090f565b60200260200101516104a0565b8282815181106102ad576102ad61090f565b60200260200101819052506102c28160010190565b9050610270565b50919050565b6060610184826104a0565b6102e26103e2565b6102ec600061037d565b565b6102f66103e2565b610300828261044b565b5050565b61030c6103e2565b6001600160a01b0381166103715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101bd565b61037a8161037d565b50565b6000546001600160a01b0382811691161461037a57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336103f56000546001600160a01b031690565b6001600160a01b0316146102ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101bd565b600082815260016020526040902061046382826109a7565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610494919061088c565b60405180910390a25050565b60008181526001602052604090208054606091906104bd90610925565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990610925565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b50505050509050919050565b60006020828403121561055457600080fd5b81356001600160e01b03198116811461056c57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105b2576105b2610573565b604052919050565b600067ffffffffffffffff8211156105d4576105d4610573565b5060051b60200190565b600082601f8301126105ef57600080fd5b813560206106046105ff836105ba565b610589565b82815260059290921b8401810191818101908684111561062357600080fd5b8286015b8481101561063e5780358352918301918301610627565b509695505050505050565b600082601f83011261065a57600080fd5b813567ffffffffffffffff81111561067457610674610573565b610687601f8201601f1916602001610589565b81815284602083860101111561069c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156106cc57600080fd5b823567ffffffffffffffff808211156106e457600080fd5b6106f0868387016105de565b935060209150818501358181111561070757600080fd5b8501601f8101871361071857600080fd5b80356107266105ff826105ba565b81815260059190911b8201840190848101908983111561074557600080fd5b8584015b8381101561077d578035868111156107615760008081fd5b61076f8c8983890101610649565b845250918601918601610749565b508096505050505050509250929050565b6000602082840312156107a057600080fd5b813567ffffffffffffffff8111156107b757600080fd5b6107c3848285016105de565b949350505050565b6000815180845260005b818110156107f1576020818501810151868301820152016107d5565b506000602082860101526020601f19601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561086657603f198886030184526108548583516107cb565b94509285019290850190600101610838565b5092979650505050505050565b60006020828403121561088557600080fd5b5035919050565b60208152600061056c60208301846107cb565b600080604083850312156108b257600080fd5b82359150602083013567ffffffffffffffff8111156108d057600080fd5b6108dc85828601610649565b9150509250929050565b6000602082840312156108f857600080fd5b81356001600160a01b038116811461056c57600080fd5b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061093957607f821691505b6020821081036102c957634e487b7160e01b600052602260045260246000fd5b601f82111561021657600081815260208120601f850160051c810160208610156109805750805b601f850160051c820191505b8181101561099f5782815560010161098c565b505050505050565b815167ffffffffffffffff8111156109c1576109c1610573565b6109d5816109cf8454610925565b84610959565b602080601f831160018114610a0a57600084156109f25750858301515b600019600386901b1c1916600185901b17855561099f565b600085815260208120601f198616915b82811015610a3957888601518255948401946001909101908401610a1a565b5085821015610a575787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220eb0fba5fe416daca833f6787c0208bfa0078b0ec49dac33387a7aa11e6be44a964736f6c63430008110033",
    "sourceMap": "615:313:173:-:0;;;764:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;812:22:173;;804:73;;;;-1:-1:-1;;;804:73:173;;511:2:202;804:73:173;;;493:21:202;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:202;;;633:36;686:19;;804:73:173;;;;;;;;887:32;910:8;887:22;;;;;:32;;:::i;:::-;764:162;615:313;;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;2012:165;1948:235;:::o;14:290:202:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:202;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:202:o;309:402::-;615:313:173;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a61461010a5780637f23690c146101125780638da5cb5b14610125578063f2fde38b1461014057600080fd5b806301ffc9a71461008d57806314a6e293146100b55780634e3e6e9c146100ca57806354f6127f146100ea575b600080fd5b6100a061009b366004610542565b610153565b60405190151581526020015b60405180910390f35b6100c86100c33660046106b9565b61018a565b005b6100dd6100d836600461078e565b61021b565b6040516100ac9190610811565b6100fd6100f8366004610873565b6102cf565b6040516100ac919061088c565b6100c86102da565b6100c861012036600461089f565b6102ee565b6000546040516001600160a01b0390911681526020016100ac565b6100c861014e3660046108e6565b610304565b60006001600160e01b03198216631c537ddf60e21b148061018457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6101926103e2565b80518251146101c657815181516040516321d1e13360e11b8152600481019290925260248201526044015b60405180910390fd5b60005b82518110156102165761020e8382815181106101e7576101e761090f565b60200260200101518383815181106102015761020161090f565b602002602001015161044b565b6001016101c9565b505050565b6060815167ffffffffffffffff81111561023757610237610573565b60405190808252806020026020018201604052801561026a57816020015b60608152602001906001900390816102555790505b50905060005b82518110156102c95761029b83828151811061028e5761028e61090f565b60200260200101516104a0565b8282815181106102ad576102ad61090f565b60200260200101819052506102c28160010190565b9050610270565b50919050565b6060610184826104a0565b6102e26103e2565b6102ec600061037d565b565b6102f66103e2565b610300828261044b565b5050565b61030c6103e2565b6001600160a01b0381166103715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101bd565b61037a8161037d565b50565b6000546001600160a01b0382811691161461037a57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336103f56000546001600160a01b031690565b6001600160a01b0316146102ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101bd565b600082815260016020526040902061046382826109a7565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610494919061088c565b60405180910390a25050565b60008181526001602052604090208054606091906104bd90610925565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990610925565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b50505050509050919050565b60006020828403121561055457600080fd5b81356001600160e01b03198116811461056c57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105b2576105b2610573565b604052919050565b600067ffffffffffffffff8211156105d4576105d4610573565b5060051b60200190565b600082601f8301126105ef57600080fd5b813560206106046105ff836105ba565b610589565b82815260059290921b8401810191818101908684111561062357600080fd5b8286015b8481101561063e5780358352918301918301610627565b509695505050505050565b600082601f83011261065a57600080fd5b813567ffffffffffffffff81111561067457610674610573565b610687601f8201601f1916602001610589565b81815284602083860101111561069c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156106cc57600080fd5b823567ffffffffffffffff808211156106e457600080fd5b6106f0868387016105de565b935060209150818501358181111561070757600080fd5b8501601f8101871361071857600080fd5b80356107266105ff826105ba565b81815260059190911b8201840190848101908983111561074557600080fd5b8584015b8381101561077d578035868111156107615760008081fd5b61076f8c8983890101610649565b845250918601918601610749565b508096505050505050509250929050565b6000602082840312156107a057600080fd5b813567ffffffffffffffff8111156107b757600080fd5b6107c3848285016105de565b949350505050565b6000815180845260005b818110156107f1576020818501810151868301820152016107d5565b506000602082860101526020601f19601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561086657603f198886030184526108548583516107cb565b94509285019290850190600101610838565b5092979650505050505050565b60006020828403121561088557600080fd5b5035919050565b60208152600061056c60208301846107cb565b600080604083850312156108b257600080fd5b82359150602083013567ffffffffffffffff8111156108d057600080fd5b6108dc85828601610649565b9150509250929050565b6000602082840312156108f857600080fd5b81356001600160a01b038116811461056c57600080fd5b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061093957607f821691505b6020821081036102c957634e487b7160e01b600052602260045260246000fd5b601f82111561021657600081815260208120601f850160051c810160208610156109805750805b601f850160051c820191505b8181101561099f5782815560010161098c565b505050505050565b815167ffffffffffffffff8111156109c1576109c1610573565b6109d5816109cf8454610925565b84610959565b602080601f831160018114610a0a57600084156109f25750858301515b600019600386901b1c1916600185901b17855561099f565b600085815260208120601f198616915b82811015610a3957888601518255948401946001909101908401610a1a565b5085821015610a575787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220eb0fba5fe416daca833f6787c0208bfa0078b0ec49dac33387a7aa11e6be44a964736f6c63430008110033",
    "sourceMap": "615:313:173:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2907:251:174;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;2907:251:174;;;;;;;;1839:433;;;;;;:::i;:::-;;:::i;:::-;;1241:370;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1058:133::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1178:92:177:-;;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;601:85;;-1:-1:-1;;;;;673:6:177;;;6192:51:202;;6180:2;6165:18;601:85:177;6046:203:202;1419:189:177;;;;;;:::i;:::-;;:::i;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;3069:82;2907:251;-1:-1:-1;;2907:251:174:o;1839:433::-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;6719:25:202::0;;;;6760:18;;;6753:34;6692:18;;2036:72:174::1;;;;;;;;1973:146;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;1241:370::-;1346:25;1412:8;:15;1400:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;1058:133::-;1121:22;1167:17;1176:7;1167:8;:17::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;:::-;1661:128:::0;;:::o;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;7132:2:202;1499:73:177::1;::::0;::::1;7114:21:202::0;7171:2;7151:18;;;7144:30;7210:34;7190:18;;;7183:62;-1:-1:-1;;;7261:18:202;;;7254:36;7307:19;;1499:73:177::1;6930:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;1948:235::-;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;1948:235;:::o;1681:128::-;1755:10;1744:7;647;673:6;-1:-1:-1;;;;;673:6:177;;601:85;1744:7;-1:-1:-1;;;;;1744:21:177;;1736:66;;;;-1:-1:-1;;;1736:66:177;;7539:2:202;1736:66:177;;;7521:21:202;;;7558:18;;;7551:30;7617:34;7597:18;;;7590:62;7669:18;;1736:66:177;7337:356:202;2413:166:174;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;2278:129::-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:202:o;497:127::-;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:275;700:2;694:9;765:2;746:13;;-1:-1:-1;;742:27:202;730:40;;800:18;785:34;;821:22;;;782:62;779:88;;;847:18;;:::i;:::-;883:2;876:22;629:275;;-1:-1:-1;629:275:202:o;909:183::-;969:4;1002:18;994:6;991:30;988:56;;;1024:18;;:::i;:::-;-1:-1:-1;1069:1:202;1065:14;1081:4;1061:25;;909:183::o;1097:662::-;1151:5;1204:3;1197:4;1189:6;1185:17;1181:27;1171:55;;1222:1;1219;1212:12;1171:55;1258:6;1245:20;1284:4;1308:60;1324:43;1364:2;1324:43;:::i;:::-;1308:60;:::i;:::-;1402:15;;;1488:1;1484:10;;;;1472:23;;1468:32;;;1433:12;;;;1512:15;;;1509:35;;;1540:1;1537;1530:12;1509:35;1576:2;1568:6;1564:15;1588:142;1604:6;1599:3;1596:15;1588:142;;;1670:17;;1658:30;;1708:12;;;;1621;;1588:142;;;-1:-1:-1;1748:5:202;1097:662;-1:-1:-1;;;;;;1097:662:202:o;1764:530::-;1806:5;1859:3;1852:4;1844:6;1840:17;1836:27;1826:55;;1877:1;1874;1867:12;1826:55;1913:6;1900:20;1939:18;1935:2;1932:26;1929:52;;;1961:18;;:::i;:::-;2005:55;2048:2;2029:13;;-1:-1:-1;;2025:27:202;2054:4;2021:38;2005:55;:::i;:::-;2085:2;2076:7;2069:19;2131:3;2124:4;2119:2;2111:6;2107:15;2103:26;2100:35;2097:55;;;2148:1;2145;2138:12;2097:55;2213:2;2206:4;2198:6;2194:17;2187:4;2178:7;2174:18;2161:55;2261:1;2236:16;;;2254:4;2232:27;2225:38;;;;2240:7;1764:530;-1:-1:-1;;;1764:530:202:o;2299:1357::-;2426:6;2434;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;2543:9;2530:23;2572:18;2613:2;2605:6;2602:14;2599:34;;;2629:1;2626;2619:12;2599:34;2652:61;2705:7;2696:6;2685:9;2681:22;2652:61;:::i;:::-;2642:71;;2732:2;2722:12;;2787:2;2776:9;2772:18;2759:32;2816:2;2806:8;2803:16;2800:36;;;2832:1;2829;2822:12;2800:36;2855:24;;2910:4;2902:13;;2898:27;-1:-1:-1;2888:55:202;;2939:1;2936;2929:12;2888:55;2975:2;2962:16;2998:60;3014:43;3054:2;3014:43;:::i;2998:60::-;3092:15;;;3174:1;3170:10;;;;3162:19;;3158:28;;;3123:12;;;;3198:19;;;3195:39;;;3230:1;3227;3220:12;3195:39;3262:2;3258;3254:11;3274:352;3290:6;3285:3;3282:15;3274:352;;;3376:3;3363:17;3412:2;3399:11;3396:19;3393:109;;;3456:1;3485:2;3481;3474:14;3393:109;3527:56;3575:7;3570:2;3556:11;3552:2;3548:20;3544:29;3527:56;:::i;:::-;3515:69;;-1:-1:-1;3604:12:202;;;;3307;;3274:352;;;3278:3;3645:5;3635:15;;;;;;;;2299:1357;;;;;:::o;3661:348::-;3745:6;3798:2;3786:9;3777:7;3773:23;3769:32;3766:52;;;3814:1;3811;3804:12;3766:52;3854:9;3841:23;3887:18;3879:6;3876:30;3873:50;;;3919:1;3916;3909:12;3873:50;3942:61;3995:7;3986:6;3975:9;3971:22;3942:61;:::i;:::-;3932:71;3661:348;-1:-1:-1;;;;3661:348:202:o;4014:422::-;4055:3;4093:5;4087:12;4120:6;4115:3;4108:19;4145:1;4155:162;4169:6;4166:1;4163:13;4155:162;;;4231:4;4287:13;;;4283:22;;4277:29;4259:11;;;4255:20;;4248:59;4184:12;4155:162;;;4159:3;4362:1;4355:4;4346:6;4341:3;4337:16;4333:27;4326:38;4425:4;4418:2;4414:7;4409:2;4401:6;4397:15;4393:29;4388:3;4384:39;4380:50;4373:57;;;4014:422;;;;:::o;4441:800::-;4601:4;4630:2;4670;4659:9;4655:18;4700:2;4689:9;4682:21;4723:6;4758;4752:13;4789:6;4781;4774:22;4827:2;4816:9;4812:18;4805:25;;4889:2;4879:6;4876:1;4872:14;4861:9;4857:30;4853:39;4839:53;;4927:2;4919:6;4915:15;4948:1;4958:254;4972:6;4969:1;4966:13;4958:254;;;5065:2;5061:7;5049:9;5041:6;5037:22;5033:36;5028:3;5021:49;5093:39;5125:6;5116;5110:13;5093:39;:::i;:::-;5083:49;-1:-1:-1;5190:12:202;;;;5155:15;;;;4994:1;4987:9;4958:254;;;-1:-1:-1;5229:6:202;;4441:800;-1:-1:-1;;;;;;;4441:800:202:o;5246:180::-;5305:6;5358:2;5346:9;5337:7;5333:23;5329:32;5326:52;;;5374:1;5371;5364:12;5326:52;-1:-1:-1;5397:23:202;;5246:180;-1:-1:-1;5246:180:202:o;5431:217::-;5578:2;5567:9;5560:21;5541:4;5598:44;5638:2;5627:9;5623:18;5615:6;5598:44;:::i;5653:388::-;5730:6;5738;5791:2;5779:9;5770:7;5766:23;5762:32;5759:52;;;5807:1;5804;5797:12;5759:52;5843:9;5830:23;5820:33;;5904:2;5893:9;5889:18;5876:32;5931:18;5923:6;5920:30;5917:50;;;5963:1;5960;5953:12;5917:50;5986:49;6027:7;6018:6;6007:9;6003:22;5986:49;:::i;:::-;5976:59;;;5653:388;;;;;:::o;6254:286::-;6313:6;6366:2;6354:9;6345:7;6341:23;6337:32;6334:52;;;6382:1;6379;6372:12;6334:52;6408:23;;-1:-1:-1;;;;;6460:31:202;;6450:42;;6440:70;;6506:1;6503;6496:12;6798:127;6859:10;6854:3;6850:20;6847:1;6840:31;6890:4;6887:1;6880:15;6914:4;6911:1;6904:15;7698:380;7777:1;7773:12;;;;7820;;;7841:61;;7895:4;7887:6;7883:17;7873:27;;7841:61;7948:2;7940:6;7937:14;7917:18;7914:38;7911:161;;7994:10;7989:3;7985:20;7982:1;7975:31;8029:4;8026:1;8019:15;8057:4;8054:1;8047:15;8208:544;8309:2;8304:3;8301:11;8298:448;;;8345:1;8370:5;8366:2;8359:17;8415:4;8411:2;8401:19;8485:2;8473:10;8469:19;8466:1;8462:27;8456:4;8452:38;8521:4;8509:10;8506:20;8503:47;;;-1:-1:-1;8544:4:202;8503:47;8599:2;8594:3;8590:12;8587:1;8583:20;8577:4;8573:31;8563:41;;8654:82;8672:2;8665:5;8662:13;8654:82;;;8717:17;;;8698:1;8687:13;8654:82;;;8658:3;;;8208:544;;;:::o;8928:1348::-;9052:3;9046:10;9079:18;9071:6;9068:30;9065:56;;;9101:18;;:::i;:::-;9130:96;9219:6;9179:38;9211:4;9205:11;9179:38;:::i;:::-;9173:4;9130:96;:::i;:::-;9281:4;;9345:2;9334:14;;9362:1;9357:662;;;;10063:1;10080:6;10077:89;;;-1:-1:-1;10132:19:202;;;10126:26;10077:89;-1:-1:-1;;8885:1:202;8881:11;;;8877:24;8873:29;8863:40;8909:1;8905:11;;;8860:57;10179:81;;9327:943;;9357:662;8155:1;8148:14;;;8192:4;8179:18;;-1:-1:-1;;9393:20:202;;;9510:236;9524:7;9521:1;9518:14;9510:236;;;9613:19;;;9607:26;9592:42;;9705:27;;;;9673:1;9661:14;;;;9540:19;;9510:236;;;9514:3;9774:6;9765:7;9762:19;9759:201;;;9835:19;;;9829:26;-1:-1:-1;;9918:1:202;9914:14;;;9930:3;9910:24;9906:37;9902:42;9887:58;9872:74;;9759:201;-1:-1:-1;;;;;10006:1:202;9990:14;;;9986:22;9973:36;;-1:-1:-1;8928:1348:202:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>\",\"details\":\"Contract module which provides the ability to set arbitrary data key/value pairs that can be changed over time It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage\",\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"newOwner\":\"the owner of the contract\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ERC725Y General data key/value store\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets the owner of the contract\"},\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":\"ERC725Y\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "newOwner": "the owner of the contract"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Sets the owner of the contract"
          },
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": "ERC725Y"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol",
    "id": 43286,
    "exportedSymbols": {
      "ERC165": [
        46531
      ],
      "ERC725Y": [
        43285
      ],
      "ERC725YCore": [
        43508
      ],
      "OwnableUnset": [
        43687
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:890:173",
    "nodes": [
      {
        "id": 43252,
        "nodeType": "PragmaDirective",
        "src": "39:23:173",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 43254,
        "nodeType": "ImportDirective",
        "src": "75:78:173",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43286,
        "sourceUnit": 46532,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43253,
              "name": "ERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46531,
              "src": "83:6:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43256,
        "nodeType": "ImportDirective",
        "src": "154:55:173",
        "nodes": [],
        "absolutePath": "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol",
        "file": "./custom/OwnableUnset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43286,
        "sourceUnit": 43688,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43255,
              "name": "OwnableUnset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43687,
              "src": "162:12:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43258,
        "nodeType": "ImportDirective",
        "src": "210:46:173",
        "nodes": [],
        "absolutePath": "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol",
        "file": "./ERC725YCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43286,
        "sourceUnit": 43509,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43257,
              "name": "ERC725YCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43508,
              "src": "218:11:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43285,
        "nodeType": "ContractDefinition",
        "src": "615:313:173",
        "nodes": [
          {
            "id": 43284,
            "nodeType": "FunctionDefinition",
            "src": "764:162:173",
            "nodes": [],
            "body": {
              "id": 43283,
              "nodeType": "Block",
              "src": "794:132:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43268,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43264,
                          "src": "812:8:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 43271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "832:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 43270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "824:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43269,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "824:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "824:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "812:22:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 43274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:40:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 43267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "804:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:73:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43276,
                  "nodeType": "ExpressionStatement",
                  "src": "804:73:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43280,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43264,
                        "src": "910:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 43277,
                        "name": "OwnableUnset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43687,
                        "src": "887:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUnset_$43687_$",
                          "typeString": "type(contract OwnableUnset)"
                        }
                      },
                      "id": 43279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "900:9:173",
                      "memberName": "_setOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43686,
                      "src": "887:22:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 43281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:32:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43282,
                  "nodeType": "ExpressionStatement",
                  "src": "887:32:173"
                }
              ]
            },
            "documentation": {
              "id": 43262,
              "nodeType": "StructuredDocumentation",
              "src": "653:106:173",
              "text": " @notice Sets the owner of the contract\n @param newOwner the owner of the contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 43265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43264,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "784:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 43284,
                  "src": "776:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:18:173"
            },
            "returnParameters": {
              "id": 43266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:173"
            },
            "scope": 43285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43260,
              "name": "ERC725YCore",
              "nameLocations": [
                "635:11:173"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43508,
              "src": "635:11:173"
            },
            "id": 43261,
            "nodeType": "InheritanceSpecifier",
            "src": "635:11:173"
          }
        ],
        "canonicalName": "ERC725Y",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 43259,
          "nodeType": "StructuredDocumentation",
          "src": "258:356:173",
          "text": " @title ERC725Y General data key/value store\n @author Fabian Vogelsteller <fabian@lukso.network>\n @dev Contract module which provides the ability to set arbitrary data key/value pairs that can be changed over time\n It is intended to standardise certain data key/value pairs to allow automated read and writes\n from/to the contract storage"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43285,
          43508,
          43840,
          46531,
          46594,
          43687
        ],
        "name": "ERC725Y",
        "nameLocation": "624:7:173",
        "scope": 43286,
        "usedErrors": [
          43726
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 173
}