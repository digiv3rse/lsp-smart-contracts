{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506125d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80636352211e11610104578063a22cb465116100a2578063c87b56dd11610071578063c87b56dd14610412578063cf5182ba14610425578063e985e9c514610438578063f2fde38b1461047457600080fd5b8063a22cb465146103b9578063a3b261f2146103cc578063af255b61146103ec578063b88d4fde146103ff57600080fd5b80637e87632c116100de5780637e87632c146103745780637f23690c146103875780638da5cb5b1461039a57806395d89b41146103b157600080fd5b80636352211e1461034657806370a0823114610359578063715018a61461036c57600080fd5b8063217b22701161017c57806349a6078d1161014b57806349a6078d146102e05780634e3e6e9c14610300578063511b69521461032057806354f6127f1461033357600080fd5b8063217b22701461029457806323b872dd146102a75780632a3654a4146102ba57806342842e0e146102cd57600080fd5b8063095ea7b3116101b8578063095ea7b3146102475780630b0c6d821461025c57806314a6e2931461026f57806318160ddd1461028257600080fd5b806301ffc9a7146101df57806306fdde0314610207578063081812fc1461021c575b600080fd5b6101f26101ed366004611b0f565b610487565b60405190151581526020015b60405180910390f35b61020f6104cd565b6040516101fe9190611b89565b61022f61022a366004611b9c565b6104fa565b6040516001600160a01b0390911681526020016101fe565b61025a610255366004611bd1565b610551565b005b61025a61026a366004611bd1565b6105a8565b61025a61027d366004611dc6565b610655565b6002545b6040519081526020016101fe565b61022f6102a2366004611b9c565b6106e1565b61025a6102b5366004611e29565b61071a565b6101f26102c8366004611bd1565b61073a565b61025a6102db366004611e29565b610756565b6102f36102ee366004611b9c565b610776565b6040516101fe9190611e65565b61031361030e366004611eb2565b610798565b6040516101fe9190611ee6565b61025a61032e366004611f58565b61084b565b61020f610341366004611b9c565b61089a565b61022f610354366004611b9c565b6108a5565b610286610367366004611fd0565b6108b0565b61025a6108d1565b61025a6103823660046120af565b6108e5565b61025a610395366004612173565b6109d4565b6000546201000090046001600160a01b031661022f565b61020f6109ea565b61025a6103c73660046121af565b610a17565b6103df6103da366004611fd0565b610a22565b6040516101fe91906121e2565b61025a6103fa36600461221a565b610a46565b61025a61040d366004612281565b610a5a565b61020f610420366004611b9c565b610a68565b61025a610433366004611bd1565b610ab6565b6101f26104463660046122d0565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61025a610482366004611fd0565b610ac0565b60006001600160e01b031982166380ac58cd60e01b14806104b857506001600160e01b03198216635b5e139f60e01b145b806104c757506104c782610b39565b92915050565b606060006104c77fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1610b5e565b60008161050681610c00565b60008181526005602052604081209061051e82610c38565b90508060000361053357506000949350505050565b610548610541600183612310565b8390610c42565b95945050505050565b61055b8282610ab6565b806001600160a01b03831661056f826106e1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006105b3826106e1565b9050336001600160a01b03821681146105fe57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661062557604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036106445750505050565b61064f848385610c4e565b50505050565b61065d610cdf565b805182511461068c57815181516040516321d1e13360e11b8152600481019290925260248201526044016105f5565b60005b82518110156106dc576106d48382815181106106ad576106ad612323565b60200260200101518383815181106106c7576106c7612323565b6020026020010151610d40565b60010161068f565b505050565b6000818152600360205260408120546001600160a01b0316806104c757604051635747cd1b60e11b8152600481018490526024016105f5565b6106dc83838360001b600160405180602001604052806000815250610d4a565b600061074582610c00565b61074f8383610e06565b9392505050565b6106dc83838360001b600060405180602001604052806000815250610d4a565b606061078182610c00565b60008281526005602052604090206104c790610e4f565b606081516001600160401b038111156107b3576107b3611bfb565b6040519080825280602002602001820160405280156107e657816020015b60608152602001906001900390816107d15790505b50905060005b82518110156108455761081783828151811061080a5761080a612323565b6020026020010151610b5e565b82828151811061082957610829612323565b602002602001018190525061083e8160010190565b90506107ec565b50919050565b336108568185610e06565b61088557604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016105f5565b6108928686868686610d4a565b505050505050565b60606104c782610b5e565b60006104c7826106e1565b6001600160a01b03811660009081526004602052604081206104c790610c38565b6108d9610cdf565b6108e36000610e5c565b565b84518451811415806108f8575083518114155b80610904575082518114155b80610910575081518114155b1561092e576040516393a8311960e01b815260040160405180910390fd5b60005b818110156109cb576109c387828151811061094e5761094e612323565b602002602001015187838151811061096857610968612323565b602002602001015187848151811061098257610982612323565b602002602001015187858151811061099c5761099c612323565b60200260200101518786815181106109b6576109b6612323565b602002602001015161084b565b600101610931565b50505050505050565b6109dc610cdf565b6109e68282610d40565b5050565b606060006104c77f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756610b5e565b6109e6338383610ed2565b6001600160a01b03811660009081526004602052604090206060906104c790610fb0565b610a4e610cdf565b61064f84848484610fbb565b61064f848484600085610d4a565b60606000610a957f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e610b5e565b905060006024905060006105488383848651610ab19190612310565b611005565b61055b8282611112565b610ac8610cdf565b6001600160a01b038116610b2d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f5565b610b3681610e5c565b50565b60006001600160e01b0319821663622e7a0160e01b14806104c757506104c78261123b565b6000818152600160205260409020805460609190610b7b90612339565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba790612339565b8015610bf45780601f10610bc957610100808354040283529160200191610bf4565b820191906000526020600020905b815481529060010190602001808311610bd757829003601f168201915b50505050509050919050565b6000818152600360205260409020546001600160a01b0316610b3657604051635747cd1b60e11b8152600481018290526024016105f5565b60006104c7825490565b600061074f8383611270565b6000818152600560205260408120610c66908561129a565b905080610c98576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016105f5565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b03620100009091041633146108e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f5565b6109e682826112af565b6001600160a01b03851660009081526007602090815260408083203380855292529091205460ff16158015610d865750610d848185610e06565b155b15610db657604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016105f5565b610dc386868686866113a3565b60405184906001600160a01b0380881691908916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050505050565b600080610e12836106e1565b9050806001600160a01b0316846001600160a01b03161480610e4757506000838152600560205260409020610e47908561152d565b949350505050565b6060600061074f8361154f565b6000546001600160a01b03828116620100009092041614610b3657600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b816001600160a01b0316836001600160a01b031603610f435760405162461bcd60e51b815260206004820152602760248201527f4c535038436f6d70617469626c654552433732313a20617070726f766520746f6044820152661031b0b63632b960c91b60648201526084016105f5565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606104c78261154f565b610fc7848484846115aa565b60405183906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b60608161101381601f61236d565b10156110525760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016105f5565b61105c828461236d565b845110156110a05760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016105f5565b6060821580156110bf5760405191506000825260208201604052611109565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156110f85780518352602092830192016110e0565b5050858452601f01601f1916604052505b50949350505050565b600061111d826106e1565b9050336001600160a01b038216811461116357604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016105f5565b6001600160a01b03841661118a57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036111a95750505050565b60008381526005602052604081206111c190866116c4565b9050806111f3576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016105f5565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b60006001600160e01b03198216631c537ddf60e21b14806104c757506301ffc9a760e01b6001600160e01b03198316146104c7565b600082600001828154811061128757611287612323565b9060005260206000200154905092915050565b600061074f836001600160a01b0384166116d9565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f82016112ef576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa820161132f57604051630eceab6760e31b815260040160405180910390fd5b600082815260016020526040902061134782826123c6565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b26101008351111561138857611383836000610100611005565b61138a565b825b6040516113979190611b89565b60405180910390a25050565b836001600160a01b0316856001600160a01b0316036113d557604051635d67d6c160e01b815260040160405180910390fd5b60006113e0846106e1565b9050856001600160a01b0316816001600160a01b03161461142e57604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016105f5565b6001600160a01b038516611455576040516324ecef4d60e01b815260040160405180910390fd5b3361146087866117cc565b6001600160a01b03871660009081526004602052604090206114829086611813565b506001600160a01b03861660009081526004602052604090206114a5908661181f565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061150c9086908a908a90612485565b60405180910390a46115208787878661182b565b6109cb87878787876118ff565b6001600160a01b0381166000908152600183016020526040812054151561074f565b606081600001805480602002602001604051908101604052809291908181526020018280548015610bf457602002820191906000526020600020905b81548152602001906001019080831161158b5750505050509050919050565b6001600160a01b0384166115d1576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561160a576040516334c7b51160e01b8152600481018490526024016105f5565b3360016002600082825461161e919061236d565b90915550506001600160a01b0385166000908152600460205260409020611645908561181f565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906116a790869089908990612485565b60405180910390a46116bd6000868686866118ff565b5050505050565b600061074f836001600160a01b038416611a37565b600081815260018301602052604081205480156117c25760006116fd600183612310565b855490915060009061171190600190612310565b905081811461177657600086600001828154811061173157611731612323565b906000526020600020015490508087600001848154811061175457611754612323565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611787576117876124b1565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104c7565b60009150506104c7565b6000818152600560205260408120906117e482610c38565b905060005b818110156116bd5760006117fd8482610c42565b905061180a818787610c4e565b506001016117e9565b600061074f83836116d9565b600061074f8383611a37565b61183c84631aed5a8560e21b611a86565b1561064f5760008484848460405160200161185a94939291906124c7565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906118b8907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401612514565b6000604051808303816000875af11580156118d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610892919081019061252d565b61191084631aed5a8560e21b611a86565b156119da5760008585858460405160200161192e94939291906124c7565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a149061198c907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612514565b6000604051808303816000875af11580156119ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119d3919081019061252d565b50506116bd565b816116bd576001600160a01b0384163b15611a1357604051634349776d60e01b81526001600160a01b03851660048201526024016105f5565b604051630317313760e01b81526001600160a01b03851660048201526024016105f5565b6000818152600183016020526040812054611a7e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104c7565b5060006104c7565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611af8575060208210155b8015611b045750600081115b979650505050505050565b600060208284031215611b2157600080fd5b81356001600160e01b03198116811461074f57600080fd5b60005b83811015611b54578181015183820152602001611b3c565b50506000910152565b60008151808452611b75816020860160208601611b39565b601f01601f19169290920160200192915050565b60208152600061074f6020830184611b5d565b600060208284031215611bae57600080fd5b5035919050565b80356001600160a01b0381168114611bcc57600080fd5b919050565b60008060408385031215611be457600080fd5b611bed83611bb5565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611c3957611c39611bfb565b604052919050565b60006001600160401b03821115611c5a57611c5a611bfb565b5060051b60200190565b600082601f830112611c7557600080fd5b81356020611c8a611c8583611c41565b611c11565b82815260059290921b84018101918181019086841115611ca957600080fd5b8286015b84811015611cc45780358352918301918301611cad565b509695505050505050565b60006001600160401b03821115611ce857611ce8611bfb565b50601f01601f191660200190565b600082601f830112611d0757600080fd5b8135611d15611c8582611ccf565b818152846020838601011115611d2a57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611d5857600080fd5b81356020611d68611c8583611c41565b82815260059290921b84018101918181019086841115611d8757600080fd5b8286015b84811015611cc45780356001600160401b03811115611daa5760008081fd5b611db88986838b0101611cf6565b845250918301918301611d8b565b60008060408385031215611dd957600080fd5b82356001600160401b0380821115611df057600080fd5b611dfc86838701611c64565b93506020850135915080821115611e1257600080fd5b50611e1f85828601611d47565b9150509250929050565b600080600060608486031215611e3e57600080fd5b611e4784611bb5565b9250611e5560208501611bb5565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611ea65783516001600160a01b031683529284019291840191600101611e81565b50909695505050505050565b600060208284031215611ec457600080fd5b81356001600160401b03811115611eda57600080fd5b610e4784828501611c64565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611f3b57603f19888603018452611f29858351611b5d565b94509285019290850190600101611f0d565b5092979650505050505050565b80358015158114611bcc57600080fd5b600080600080600060a08688031215611f7057600080fd5b611f7986611bb5565b9450611f8760208701611bb5565b935060408601359250611f9c60608701611f48565b915060808601356001600160401b03811115611fb757600080fd5b611fc388828901611cf6565b9150509295509295909350565b600060208284031215611fe257600080fd5b61074f82611bb5565b600082601f830112611ffc57600080fd5b8135602061200c611c8583611c41565b82815260059290921b8401810191818101908684111561202b57600080fd5b8286015b84811015611cc45761204081611bb5565b835291830191830161202f565b600082601f83011261205e57600080fd5b8135602061206e611c8583611c41565b82815260059290921b8401810191818101908684111561208d57600080fd5b8286015b84811015611cc4576120a281611f48565b8352918301918301612091565b600080600080600060a086880312156120c757600080fd5b85356001600160401b03808211156120de57600080fd5b6120ea89838a01611feb565b9650602088013591508082111561210057600080fd5b61210c89838a01611feb565b9550604088013591508082111561212257600080fd5b61212e89838a01611c64565b9450606088013591508082111561214457600080fd5b61215089838a0161204d565b9350608088013591508082111561216657600080fd5b50611fc388828901611d47565b6000806040838503121561218657600080fd5b8235915060208301356001600160401b038111156121a357600080fd5b611e1f85828601611cf6565b600080604083850312156121c257600080fd5b6121cb83611bb5565b91506121d960208401611f48565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611ea6578351835292840192918401916001016121fe565b6000806000806080858703121561223057600080fd5b61223985611bb5565b93506020850135925061224e60408601611f48565b915060608501356001600160401b0381111561226957600080fd5b61227587828801611cf6565b91505092959194509250565b6000806000806080858703121561229757600080fd5b6122a085611bb5565b93506122ae60208601611bb5565b92506040850135915060608501356001600160401b0381111561226957600080fd5b600080604083850312156122e357600080fd5b6122ec83611bb5565b91506121d960208401611bb5565b634e487b7160e01b600052601160045260246000fd5b818103818111156104c7576104c76122fa565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061234d57607f821691505b60208210810361084557634e487b7160e01b600052602260045260246000fd5b808201808211156104c7576104c76122fa565b601f8211156106dc57600081815260208120601f850160051c810160208610156123a75750805b601f850160051c820191505b81811015610892578281556001016123b3565b81516001600160401b038111156123df576123df611bfb565b6123f3816123ed8454612339565b84612380565b602080601f83116001811461242857600084156124105750858301515b600019600386901b1c1916600185901b178555610892565b600085815260208120601f198616915b8281101561245757888601518255948401946001909101908401612438565b50858210156124755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152821515602082015260606040820181905260009061054890830184611b5d565b634e487b7160e01b600052603160045260246000fd5b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251612504816048850160208701611b39565b9190910160480195945050505050565b828152604060208201526000610e476040830184611b5d565b60006020828403121561253f57600080fd5b81516001600160401b0381111561255557600080fd5b8201601f8101841361256657600080fd5b8051612574611c8582611ccf565b81815285602083850101111561258957600080fd5b610548826020830160208601611b3956fea2646970667358221220056d4f4ed1cbd7864ba53da023d42b750b0eef12b9751bec5fcc9d072fc297b464736f6c63430008110033",
    "sourceMap": "171:590:79:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80636352211e11610104578063a22cb465116100a2578063c87b56dd11610071578063c87b56dd14610412578063cf5182ba14610425578063e985e9c514610438578063f2fde38b1461047457600080fd5b8063a22cb465146103b9578063a3b261f2146103cc578063af255b61146103ec578063b88d4fde146103ff57600080fd5b80637e87632c116100de5780637e87632c146103745780637f23690c146103875780638da5cb5b1461039a57806395d89b41146103b157600080fd5b80636352211e1461034657806370a0823114610359578063715018a61461036c57600080fd5b8063217b22701161017c57806349a6078d1161014b57806349a6078d146102e05780634e3e6e9c14610300578063511b69521461032057806354f6127f1461033357600080fd5b8063217b22701461029457806323b872dd146102a75780632a3654a4146102ba57806342842e0e146102cd57600080fd5b8063095ea7b3116101b8578063095ea7b3146102475780630b0c6d821461025c57806314a6e2931461026f57806318160ddd1461028257600080fd5b806301ffc9a7146101df57806306fdde0314610207578063081812fc1461021c575b600080fd5b6101f26101ed366004611b0f565b610487565b60405190151581526020015b60405180910390f35b61020f6104cd565b6040516101fe9190611b89565b61022f61022a366004611b9c565b6104fa565b6040516001600160a01b0390911681526020016101fe565b61025a610255366004611bd1565b610551565b005b61025a61026a366004611bd1565b6105a8565b61025a61027d366004611dc6565b610655565b6002545b6040519081526020016101fe565b61022f6102a2366004611b9c565b6106e1565b61025a6102b5366004611e29565b61071a565b6101f26102c8366004611bd1565b61073a565b61025a6102db366004611e29565b610756565b6102f36102ee366004611b9c565b610776565b6040516101fe9190611e65565b61031361030e366004611eb2565b610798565b6040516101fe9190611ee6565b61025a61032e366004611f58565b61084b565b61020f610341366004611b9c565b61089a565b61022f610354366004611b9c565b6108a5565b610286610367366004611fd0565b6108b0565b61025a6108d1565b61025a6103823660046120af565b6108e5565b61025a610395366004612173565b6109d4565b6000546201000090046001600160a01b031661022f565b61020f6109ea565b61025a6103c73660046121af565b610a17565b6103df6103da366004611fd0565b610a22565b6040516101fe91906121e2565b61025a6103fa36600461221a565b610a46565b61025a61040d366004612281565b610a5a565b61020f610420366004611b9c565b610a68565b61025a610433366004611bd1565b610ab6565b6101f26104463660046122d0565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61025a610482366004611fd0565b610ac0565b60006001600160e01b031982166380ac58cd60e01b14806104b857506001600160e01b03198216635b5e139f60e01b145b806104c757506104c782610b39565b92915050565b606060006104c77fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1610b5e565b60008161050681610c00565b60008181526005602052604081209061051e82610c38565b90508060000361053357506000949350505050565b610548610541600183612310565b8390610c42565b95945050505050565b61055b8282610ab6565b806001600160a01b03831661056f826106e1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006105b3826106e1565b9050336001600160a01b03821681146105fe57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661062557604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036106445750505050565b61064f848385610c4e565b50505050565b61065d610cdf565b805182511461068c57815181516040516321d1e13360e11b8152600481019290925260248201526044016105f5565b60005b82518110156106dc576106d48382815181106106ad576106ad612323565b60200260200101518383815181106106c7576106c7612323565b6020026020010151610d40565b60010161068f565b505050565b6000818152600360205260408120546001600160a01b0316806104c757604051635747cd1b60e11b8152600481018490526024016105f5565b6106dc83838360001b600160405180602001604052806000815250610d4a565b600061074582610c00565b61074f8383610e06565b9392505050565b6106dc83838360001b600060405180602001604052806000815250610d4a565b606061078182610c00565b60008281526005602052604090206104c790610e4f565b606081516001600160401b038111156107b3576107b3611bfb565b6040519080825280602002602001820160405280156107e657816020015b60608152602001906001900390816107d15790505b50905060005b82518110156108455761081783828151811061080a5761080a612323565b6020026020010151610b5e565b82828151811061082957610829612323565b602002602001018190525061083e8160010190565b90506107ec565b50919050565b336108568185610e06565b61088557604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016105f5565b6108928686868686610d4a565b505050505050565b60606104c782610b5e565b60006104c7826106e1565b6001600160a01b03811660009081526004602052604081206104c790610c38565b6108d9610cdf565b6108e36000610e5c565b565b84518451811415806108f8575083518114155b80610904575082518114155b80610910575081518114155b1561092e576040516393a8311960e01b815260040160405180910390fd5b60005b818110156109cb576109c387828151811061094e5761094e612323565b602002602001015187838151811061096857610968612323565b602002602001015187848151811061098257610982612323565b602002602001015187858151811061099c5761099c612323565b60200260200101518786815181106109b6576109b6612323565b602002602001015161084b565b600101610931565b50505050505050565b6109dc610cdf565b6109e68282610d40565b5050565b606060006104c77f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756610b5e565b6109e6338383610ed2565b6001600160a01b03811660009081526004602052604090206060906104c790610fb0565b610a4e610cdf565b61064f84848484610fbb565b61064f848484600085610d4a565b60606000610a957f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e610b5e565b905060006024905060006105488383848651610ab19190612310565b611005565b61055b8282611112565b610ac8610cdf565b6001600160a01b038116610b2d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f5565b610b3681610e5c565b50565b60006001600160e01b0319821663622e7a0160e01b14806104c757506104c78261123b565b6000818152600160205260409020805460609190610b7b90612339565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba790612339565b8015610bf45780601f10610bc957610100808354040283529160200191610bf4565b820191906000526020600020905b815481529060010190602001808311610bd757829003601f168201915b50505050509050919050565b6000818152600360205260409020546001600160a01b0316610b3657604051635747cd1b60e11b8152600481018290526024016105f5565b60006104c7825490565b600061074f8383611270565b6000818152600560205260408120610c66908561129a565b905080610c98576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016105f5565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b03620100009091041633146108e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f5565b6109e682826112af565b6001600160a01b03851660009081526007602090815260408083203380855292529091205460ff16158015610d865750610d848185610e06565b155b15610db657604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016105f5565b610dc386868686866113a3565b60405184906001600160a01b0380881691908916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050505050565b600080610e12836106e1565b9050806001600160a01b0316846001600160a01b03161480610e4757506000838152600560205260409020610e47908561152d565b949350505050565b6060600061074f8361154f565b6000546001600160a01b03828116620100009092041614610b3657600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b816001600160a01b0316836001600160a01b031603610f435760405162461bcd60e51b815260206004820152602760248201527f4c535038436f6d70617469626c654552433732313a20617070726f766520746f6044820152661031b0b63632b960c91b60648201526084016105f5565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606104c78261154f565b610fc7848484846115aa565b60405183906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b60608161101381601f61236d565b10156110525760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016105f5565b61105c828461236d565b845110156110a05760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016105f5565b6060821580156110bf5760405191506000825260208201604052611109565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156110f85780518352602092830192016110e0565b5050858452601f01601f1916604052505b50949350505050565b600061111d826106e1565b9050336001600160a01b038216811461116357604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016105f5565b6001600160a01b03841661118a57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036111a95750505050565b60008381526005602052604081206111c190866116c4565b9050806111f3576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016105f5565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b60006001600160e01b03198216631c537ddf60e21b14806104c757506301ffc9a760e01b6001600160e01b03198316146104c7565b600082600001828154811061128757611287612323565b9060005260206000200154905092915050565b600061074f836001600160a01b0384166116d9565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f82016112ef576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa820161132f57604051630eceab6760e31b815260040160405180910390fd5b600082815260016020526040902061134782826123c6565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b26101008351111561138857611383836000610100611005565b61138a565b825b6040516113979190611b89565b60405180910390a25050565b836001600160a01b0316856001600160a01b0316036113d557604051635d67d6c160e01b815260040160405180910390fd5b60006113e0846106e1565b9050856001600160a01b0316816001600160a01b03161461142e57604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016105f5565b6001600160a01b038516611455576040516324ecef4d60e01b815260040160405180910390fd5b3361146087866117cc565b6001600160a01b03871660009081526004602052604090206114829086611813565b506001600160a01b03861660009081526004602052604090206114a5908661181f565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061150c9086908a908a90612485565b60405180910390a46115208787878661182b565b6109cb87878787876118ff565b6001600160a01b0381166000908152600183016020526040812054151561074f565b606081600001805480602002602001604051908101604052809291908181526020018280548015610bf457602002820191906000526020600020905b81548152602001906001019080831161158b5750505050509050919050565b6001600160a01b0384166115d1576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561160a576040516334c7b51160e01b8152600481018490526024016105f5565b3360016002600082825461161e919061236d565b90915550506001600160a01b0385166000908152600460205260409020611645908561181f565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906116a790869089908990612485565b60405180910390a46116bd6000868686866118ff565b5050505050565b600061074f836001600160a01b038416611a37565b600081815260018301602052604081205480156117c25760006116fd600183612310565b855490915060009061171190600190612310565b905081811461177657600086600001828154811061173157611731612323565b906000526020600020015490508087600001848154811061175457611754612323565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611787576117876124b1565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104c7565b60009150506104c7565b6000818152600560205260408120906117e482610c38565b905060005b818110156116bd5760006117fd8482610c42565b905061180a818787610c4e565b506001016117e9565b600061074f83836116d9565b600061074f8383611a37565b61183c84631aed5a8560e21b611a86565b1561064f5760008484848460405160200161185a94939291906124c7565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906118b8907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401612514565b6000604051808303816000875af11580156118d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610892919081019061252d565b61191084631aed5a8560e21b611a86565b156119da5760008585858460405160200161192e94939291906124c7565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a149061198c907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612514565b6000604051808303816000875af11580156119ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119d3919081019061252d565b50506116bd565b816116bd576001600160a01b0384163b15611a1357604051634349776d60e01b81526001600160a01b03851660048201526024016105f5565b604051630317313760e01b81526001600160a01b03851660048201526024016105f5565b6000818152600183016020526040812054611a7e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104c7565b5060006104c7565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611af8575060208210155b8015611b045750600081115b979650505050505050565b600060208284031215611b2157600080fd5b81356001600160e01b03198116811461074f57600080fd5b60005b83811015611b54578181015183820152602001611b3c565b50506000910152565b60008151808452611b75816020860160208601611b39565b601f01601f19169290920160200192915050565b60208152600061074f6020830184611b5d565b600060208284031215611bae57600080fd5b5035919050565b80356001600160a01b0381168114611bcc57600080fd5b919050565b60008060408385031215611be457600080fd5b611bed83611bb5565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611c3957611c39611bfb565b604052919050565b60006001600160401b03821115611c5a57611c5a611bfb565b5060051b60200190565b600082601f830112611c7557600080fd5b81356020611c8a611c8583611c41565b611c11565b82815260059290921b84018101918181019086841115611ca957600080fd5b8286015b84811015611cc45780358352918301918301611cad565b509695505050505050565b60006001600160401b03821115611ce857611ce8611bfb565b50601f01601f191660200190565b600082601f830112611d0757600080fd5b8135611d15611c8582611ccf565b818152846020838601011115611d2a57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611d5857600080fd5b81356020611d68611c8583611c41565b82815260059290921b84018101918181019086841115611d8757600080fd5b8286015b84811015611cc45780356001600160401b03811115611daa5760008081fd5b611db88986838b0101611cf6565b845250918301918301611d8b565b60008060408385031215611dd957600080fd5b82356001600160401b0380821115611df057600080fd5b611dfc86838701611c64565b93506020850135915080821115611e1257600080fd5b50611e1f85828601611d47565b9150509250929050565b600080600060608486031215611e3e57600080fd5b611e4784611bb5565b9250611e5560208501611bb5565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611ea65783516001600160a01b031683529284019291840191600101611e81565b50909695505050505050565b600060208284031215611ec457600080fd5b81356001600160401b03811115611eda57600080fd5b610e4784828501611c64565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611f3b57603f19888603018452611f29858351611b5d565b94509285019290850190600101611f0d565b5092979650505050505050565b80358015158114611bcc57600080fd5b600080600080600060a08688031215611f7057600080fd5b611f7986611bb5565b9450611f8760208701611bb5565b935060408601359250611f9c60608701611f48565b915060808601356001600160401b03811115611fb757600080fd5b611fc388828901611cf6565b9150509295509295909350565b600060208284031215611fe257600080fd5b61074f82611bb5565b600082601f830112611ffc57600080fd5b8135602061200c611c8583611c41565b82815260059290921b8401810191818101908684111561202b57600080fd5b8286015b84811015611cc45761204081611bb5565b835291830191830161202f565b600082601f83011261205e57600080fd5b8135602061206e611c8583611c41565b82815260059290921b8401810191818101908684111561208d57600080fd5b8286015b84811015611cc4576120a281611f48565b8352918301918301612091565b600080600080600060a086880312156120c757600080fd5b85356001600160401b03808211156120de57600080fd5b6120ea89838a01611feb565b9650602088013591508082111561210057600080fd5b61210c89838a01611feb565b9550604088013591508082111561212257600080fd5b61212e89838a01611c64565b9450606088013591508082111561214457600080fd5b61215089838a0161204d565b9350608088013591508082111561216657600080fd5b50611fc388828901611d47565b6000806040838503121561218657600080fd5b8235915060208301356001600160401b038111156121a357600080fd5b611e1f85828601611cf6565b600080604083850312156121c257600080fd5b6121cb83611bb5565b91506121d960208401611f48565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611ea6578351835292840192918401916001016121fe565b6000806000806080858703121561223057600080fd5b61223985611bb5565b93506020850135925061224e60408601611f48565b915060608501356001600160401b0381111561226957600080fd5b61227587828801611cf6565b91505092959194509250565b6000806000806080858703121561229757600080fd5b6122a085611bb5565b93506122ae60208601611bb5565b92506040850135915060608501356001600160401b0381111561226957600080fd5b600080604083850312156122e357600080fd5b6122ec83611bb5565b91506121d960208401611bb5565b634e487b7160e01b600052601160045260246000fd5b818103818111156104c7576104c76122fa565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061234d57607f821691505b60208210810361084557634e487b7160e01b600052602260045260246000fd5b808201808211156104c7576104c76122fa565b601f8211156106dc57600081815260208120601f850160051c810160208610156123a75750805b601f850160051c820191505b81811015610892578281556001016123b3565b81516001600160401b038111156123df576123df611bfb565b6123f3816123ed8454612339565b84612380565b602080601f83116001811461242857600084156124105750858301515b600019600386901b1c1916600185901b178555610892565b600085815260208120601f198616915b8281101561245757888601518255948401946001909101908401612438565b50858210156124755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152821515602082015260606040820181905260009061054890830184611b5d565b634e487b7160e01b600052603160045260246000fd5b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251612504816048850160208701611b39565b9190910160480195945050505050565b828152604060208201526000610e476040830184611b5d565b60006020828403121561253f57600080fd5b81516001600160401b0381111561255557600080fd5b8201601f8101841361256657600080fd5b8051612574611c8582611ccf565b81815285602083850101111561258957600080fd5b610548826020830160208601611b3956fea2646970667358221220056d4f4ed1cbd7864ba53da023d42b750b0eef12b9751bec5fcc9d072fc297b464736f6c63430008110033",
    "sourceMap": "171:590:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:379:73;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1882:379:73;;;;;;;;616:165:28;;;:::i;:::-;;;;;;;:::i;2961:1058:73:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1602:32:202;;;1584:51;;1572:2;1557:18;2961:1058:73;1438:203:202;4343::73;;;;;;:::i;:::-;;:::i;:::-;;3461:587:66;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;5911:25:202;;;5899:2;5884:18;1690:92:66;5765:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;4884:181:73:-;;;;;;:::i;:::-;;:::i;4119:188:66:-;;;;;;:::i;:::-;;:::i;5291:186:73:-;;;;;;:::i;:::-;;:::i;4378:174:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;1058:133:174:-;;;;;;:::i;:::-;;:::i;2772:126:73:-;;;;;;:::i;:::-;;:::i;1885::66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;;;;-1:-1:-1;;;;;673:6:177;601:85;;926:169:28;;;:::i;4552:142:73:-;;;;;;:::i;:::-;;:::i;2412:136:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;582:177:79:-;;;;;;:::i;:::-;;:::i;5661:215:73:-;;;;;;:::i;:::-;;:::i;2323:386::-;;;;;;:::i;:::-;;:::i;5904:312::-;;;;;;:::i;:::-;;:::i;4081:199::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4233:30:73;;;4206:4;4233:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;4081:199;1419:189:177;;;;;;:::i;:::-;;:::i;1882:379:73:-;2071:4;-1:-1:-1;;;;;;2110:34:73;;-1:-1:-1;;;2110:34:73;;:92;;-1:-1:-1;;;;;;;2160:42:73;;-1:-1:-1;;;2160:42:73;2110:92;:144;;;;2218:36;2242:11;2218:23;:36::i;:::-;2091:163;1882:379;-1:-1:-1;;1882:379:73:o;616:165:28:-;670:13;695:17;715:30;476:66:29;715:8:28;:30::i;2961:1058:73:-;3028:7;3082;3100:32;3082:7;3100:14;:32::i;:::-;3143:52;3198:28;;;:10;:28;;;;;;3265;3198;3265:26;:28::i;:::-;3236:57;;3308:18;3330:1;3308:23;3304:709;;-1:-1:-1;3362:1:73;;2961:1058;-1:-1:-1;;;;2961:1058:73:o;3304:709::-;3956:46;3979:22;4000:1;3979:18;:22;:::i;:::-;3956:19;;:22;:46::i;:::-;3949:53;2961:1058;-1:-1:-1;;;;;2961:1058:73:o;4343:203::-;4420:45;4438:8;4456:7;4420:17;:45::i;:::-;4531:7;-1:-1:-1;;;;;4480:59:73;;4489:30;4531:7;4489:12;:30::i;:::-;-1:-1:-1;;;;;4480:59:73;;;;;;;;;;;4343:203;;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;15253:15:202;;;3682:46:66;;;15235:34:202;15285:18;;;15278:34;;;15348:15;;15328:18;;;15321:43;15170:18;;3682:46:66;;;;;;;;3635:104;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;:::-;3535:513;;3461:587;;:::o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;15549:25:202::0;;;;15590:18;;;15583:34;15522:18;;2036:72:174::1;15375:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;5911:25:202;;;5884:18;;2265:31:66;5765:177:202;4884:181:73;5011:47;5021:4;5027:2;5039:7;5031:16;;5049:4;5011:47;;;;;;;;;;;;:9;:47::i;4119:188:66:-;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;5291:186:73:-;5422:48;5432:4;5438:2;5450:7;5442:16;;5460:5;5422:48;;;;;;;;;;;;:9;:48::i;4378:174:66:-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;16116:25:202;;;-1:-1:-1;;;;;16177:32:202;;16157:18;;;16150:60;16089:18;;5357:39:66;15942:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;2772:126:73:-;2835:7;2861:30;2882:7;2861:12;:30::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;:::-;1661:128:::0;;:::o;926:169:28:-;982:13;1007:17;1027:32;619:66:29;1027:8:28;:32::i;4552:142:73:-;4637:50;4656:10;4668:8;4678;4637:18;:50::i;2412:136:66:-;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;582:177:79:-;805:13:177;:11;:13::i;:::-;721:31:79::1;727:2;731:7;740:5;747:4;721:5;:31::i;5661:215:73:-:0;5819:50;5829:4;5835:2;5847:7;5839:16;5864:4;5819:9;:50::i;2323:386::-;2407:13;2432:17;2452:28;1030:66:29;2452:8:73;:28::i;:::-;2432:48;;2565:14;2582:2;2565:19;;2595:21;2619:50;2634:4;2640:6;2662;2648:4;:11;:20;;;;:::i;:::-;2619:14;:50::i;5904:312::-;6093:42;6117:8;6127:7;6093:23;:42::i;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;16423:2:202;1499:73:177::1;::::0;::::1;16405:21:202::0;16462:2;16442:18;;;16435:30;16501:34;16481:18;;;16474:62;-1:-1:-1;;;16552:18:202;;;16545:36;16598:19;;1499:73:177::1;16221:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;1140:253:67:-;1287:4;-1:-1:-1;;;;;;1314:32:67;;-1:-1:-1;;;1314:32:67;;:72;;;1350:36;1374:11;1350:23;:36::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;5911:25:202;;;5884:18;;8149:31:66;5765:177:202;8829:115:199;8892:7;8918:19;8926:3;4444:18;;4362:107;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;6284:333:66:-;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;17205:32:202;;6507:42:66;;;17187:51:202;17254:18;;;17247:34;;;17160:18;;6507:42:66;17013:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;;;;;1755:10;1744:21;1736:66;;;;-1:-1:-1;;;1736:66:177;;17494:2:202;1736:66:177;;;17476:21:202;;;17513:18;;;17506:30;17572:34;17552:18;;;17545:62;17624:18;;1736:66:177;17292:356:202;7691:199:73;7857:26;7872:3;7877:5;7857:14;:26::i;6222:482::-;-1:-1:-1;;;;;4233:30:73;;4206:4;4233:30;;;:18;:30;;;;;;;;6416:10;4233:40;;;;;;;;;;;6441:33;:75;;;;;6479:37;6498:8;6508:7;6479:18;:37::i;:::-;6478:38;6441:75;6437:152;;;6539:39;;-1:-1:-1;;;6539:39:73;;;;;16116:25:202;;;-1:-1:-1;;;;;16177:32:202;;16157:18;;;16150:60;16089:18;;6539:39:73;15942:274:202;6437:152:73;6599:47;6615:4;6621:2;6625:7;6634:5;6641:4;6599:15;:47::i;:::-;6661:36;;6688:7;;-1:-1:-1;;;;;6661:36:73;;;;;;;;;;6680:16;;6661:36;6387:317;6222:482;;;;;:::o;4710:273:66:-;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;1948:235:177:-;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;;;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;2070:6;2090:17;;;-1:-1:-1;;;;;;2090:17:177;;;;;2126:40;;2070:6;;;;;;;2090:17;;2070:6;;2126:40;;;2037:140;1948:235;:::o;7340:345:73:-;7502:8;-1:-1:-1;;;;;7487:23:73;:11;-1:-1:-1;;;;;7487:23:73;;7479:75;;;;-1:-1:-1;;;7479:75:73;;17855:2:202;7479:75:73;;;17837:21:202;17894:2;17874:18;;;17867:30;17933:34;17913:18;;;17906:62;-1:-1:-1;;;17984:18:202;;;17977:37;18031:19;;7479:75:73;17653:403:202;7479:75:73;-1:-1:-1;;;;;7564:31:73;;;;;;;:18;:31;;;;;;;;:41;;;;;;;;;;;;;:52;;-1:-1:-1;;7564:52:73;;;;;;;;;;7631:47;;445:41:202;;;7631:47:73;;418:18:202;7631:47:73;;;;;;;7340:345;;;:::o;7664:124:199:-;7727:16;7762:19;7770:3;7762:7;:19::i;6710:250:73:-;6859:37;6871:2;6875:7;6884:5;6891:4;6859:11;:37::i;:::-;6911:42;;6944:7;;-1:-1:-1;;;;;6911:42:73;;;6936:16;;6911:42;;6936:16;;6911:42;6710:250;;;;:::o;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;18393:2:202;9631:50:200;;;18375:21:202;18432:2;18412:18;;;18405:30;-1:-1:-1;;;18451:18:202;;;18444:44;18505:18;;9631:50:200;18191:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;18736:2:202;9691:63:200;;;18718:21:202;18775:2;18755:18;;;18748:30;-1:-1:-1;;;18794:18:202;;;18787:47;18851:18;;9691:63:200;18534:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;2654:736:66:-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;15253:15:202;;;2878:46:66;;;15235:34:202;15285:18;;;15278:34;;;15348:15;;15328:18;;;15321:43;15170:18;;2878:46:66;14995:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;17205:32:202;;3270:48:66;;;17187:51:202;17254:18;;;17247:34;;;17160:18;;3270:48:66;17013:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;4811:118:199;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;1464:517:31:-;1563:31;;;1559:416;;1617:26;;-1:-1:-1;;;1617:26:31;;;;;;;;;;;1559:416;1664:33;;;1660:315;;1720:28;;-1:-1:-1;;;1720:28:31;;;;;;;;;;;1660:315;1779:15;;;;:6;:15;;;;;:27;1797:9;1779:15;:27;:::i;:::-;;1854:7;1825:139;1899:3;1879:9;:16;:23;;:71;;1917:33;1932:9;1943:1;1946:3;1917:14;:33::i;:::-;1879:71;;;1905:9;1879:71;1825:139;;;;;;:::i;:::-;;;;;;;;1464:517;;:::o;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;15253:15:202;;;10476:44:66;;;15235:34:202;15285:18;;;15278:34;;;15348:15;;15328:18;;;15321:43;15170:18;;10476:44:66;14995:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;8425:700:66:-;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;5911:25:202;;;5884:18;;8701:33:66;5765:177:202;8658:87:66;8774:10;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;:::-;8555:570;8425:700;;;;:::o;8028:150:199:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;6693:933:66;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;5818:123::-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;12480:681::-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;1602:32:202;;12997:55:66;;;1584:51:202;1557:18;;12997:55:66;1438:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;1602:32:202;;13098::66;;;1584:51:202;1557:18;;13098:32:66;1438:203:202;2113:404:199;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;4680:811:1;4846:105;;;-1:-1:-1;;;;;;23301:33:202;;4846:105:1;;;;23283:52:202;;;;4846:105:1;;;;;;;;;;23256:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:202;721:16;;714:27;497:250::o;752:271::-;794:3;832:5;826:12;859:6;854:3;847:19;875:76;944:6;937:4;932:3;928:14;921:4;914:5;910:16;875:76;:::i;:::-;1005:2;984:15;-1:-1:-1;;980:29:202;971:39;;;;1012:4;967:50;;752:271;-1:-1:-1;;752:271:202:o;1028:220::-;1177:2;1166:9;1159:21;1140:4;1197:45;1238:2;1227:9;1223:18;1215:6;1197:45;:::i;1253:180::-;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;-1:-1:-1;1404:23:202;;1253:180;-1:-1:-1;1253:180:202:o;1646:173::-;1714:20;;-1:-1:-1;;;;;1763:31:202;;1753:42;;1743:70;;1809:1;1806;1799:12;1743:70;1646:173;;;:::o;1824:254::-;1892:6;1900;1953:2;1941:9;1932:7;1928:23;1924:32;1921:52;;;1969:1;1966;1959:12;1921:52;1992:29;2011:9;1992:29;:::i;:::-;1982:39;2068:2;2053:18;;;;2040:32;;-1:-1:-1;;;1824:254:202:o;2342:127::-;2403:10;2398:3;2394:20;2391:1;2384:31;2434:4;2431:1;2424:15;2458:4;2455:1;2448:15;2474:275;2545:2;2539:9;2610:2;2591:13;;-1:-1:-1;;2587:27:202;2575:40;;-1:-1:-1;;;;;2630:34:202;;2666:22;;;2627:62;2624:88;;;2692:18;;:::i;:::-;2728:2;2721:22;2474:275;;-1:-1:-1;2474:275:202:o;2754:183::-;2814:4;-1:-1:-1;;;;;2839:6:202;2836:30;2833:56;;;2869:18;;:::i;:::-;-1:-1:-1;2914:1:202;2910:14;2926:4;2906:25;;2754:183::o;2942:662::-;2996:5;3049:3;3042:4;3034:6;3030:17;3026:27;3016:55;;3067:1;3064;3057:12;3016:55;3103:6;3090:20;3129:4;3153:60;3169:43;3209:2;3169:43;:::i;:::-;3153:60;:::i;:::-;3247:15;;;3333:1;3329:10;;;;3317:23;;3313:32;;;3278:12;;;;3357:15;;;3354:35;;;3385:1;3382;3375:12;3354:35;3421:2;3413:6;3409:15;3433:142;3449:6;3444:3;3441:15;3433:142;;;3515:17;;3503:30;;3553:12;;;;3466;;3433:142;;;-1:-1:-1;3593:5:202;2942:662;-1:-1:-1;;;;;;2942:662:202:o;3609:186::-;3657:4;-1:-1:-1;;;;;3682:6:202;3679:30;3676:56;;;3712:18;;:::i;:::-;-1:-1:-1;3778:2:202;3757:15;-1:-1:-1;;3753:29:202;3784:4;3749:40;;3609:186::o;3800:462::-;3842:5;3895:3;3888:4;3880:6;3876:17;3872:27;3862:55;;3913:1;3910;3903:12;3862:55;3949:6;3936:20;3980:48;3996:31;4024:2;3996:31;:::i;3980:48::-;4053:2;4044:7;4037:19;4099:3;4092:4;4087:2;4079:6;4075:15;4071:26;4068:35;4065:55;;;4116:1;4113;4106:12;4065:55;4181:2;4174:4;4166:6;4162:17;4155:4;4146:7;4142:18;4129:55;4229:1;4204:16;;;4222:4;4200:27;4193:38;;;;4208:7;3800:462;-1:-1:-1;;;3800:462:202:o;4267:886::-;4319:5;4372:3;4365:4;4357:6;4353:17;4349:27;4339:55;;4390:1;4387;4380:12;4339:55;4426:6;4413:20;4452:4;4476:60;4492:43;4532:2;4492:43;:::i;4476:60::-;4570:15;;;4656:1;4652:10;;;;4640:23;;4636:32;;;4601:12;;;;4680:15;;;4677:35;;;4708:1;4705;4698:12;4677:35;4744:2;4736:6;4732:15;4756:368;4772:6;4767:3;4764:15;4756:368;;;4858:3;4845:17;-1:-1:-1;;;;;4881:11:202;4878:35;4875:125;;;4954:1;4983:2;4979;4972:14;4875:125;5025:56;5077:3;5072:2;5058:11;5050:6;5046:24;5042:33;5025:56;:::i;:::-;5013:69;;-1:-1:-1;5102:12:202;;;;4789;;4756:368;;5158:602;5285:6;5293;5346:2;5334:9;5325:7;5321:23;5317:32;5314:52;;;5362:1;5359;5352:12;5314:52;5402:9;5389:23;-1:-1:-1;;;;;5472:2:202;5464:6;5461:14;5458:34;;;5488:1;5485;5478:12;5458:34;5511:61;5564:7;5555:6;5544:9;5540:22;5511:61;:::i;:::-;5501:71;;5625:2;5614:9;5610:18;5597:32;5581:48;;5654:2;5644:8;5641:16;5638:36;;;5670:1;5667;5660:12;5638:36;;5693:61;5746:7;5735:8;5724:9;5720:24;5693:61;:::i;:::-;5683:71;;;5158:602;;;;;:::o;6132:328::-;6209:6;6217;6225;6278:2;6266:9;6257:7;6253:23;6249:32;6246:52;;;6294:1;6291;6284:12;6246:52;6317:29;6336:9;6317:29;:::i;:::-;6307:39;;6365:38;6399:2;6388:9;6384:18;6365:38;:::i;:::-;6355:48;;6450:2;6439:9;6435:18;6422:32;6412:42;;6132:328;;;;;:::o;6465:658::-;6636:2;6688:21;;;6758:13;;6661:18;;;6780:22;;;6607:4;;6636:2;6859:15;;;;6833:2;6818:18;;;6607:4;6902:195;6916:6;6913:1;6910:13;6902:195;;;6981:13;;-1:-1:-1;;;;;6977:39:202;6965:52;;7072:15;;;;7037:12;;;;7013:1;6931:9;6902:195;;;-1:-1:-1;7114:3:202;;6465:658;-1:-1:-1;;;;;;6465:658:202:o;7128:348::-;7212:6;7265:2;7253:9;7244:7;7240:23;7236:32;7233:52;;;7281:1;7278;7271:12;7233:52;7321:9;7308:23;-1:-1:-1;;;;;7346:6:202;7343:30;7340:50;;;7386:1;7383;7376:12;7340:50;7409:61;7462:7;7453:6;7442:9;7438:22;7409:61;:::i;7481:801::-;7641:4;7670:2;7710;7699:9;7695:18;7740:2;7729:9;7722:21;7763:6;7798;7792:13;7829:6;7821;7814:22;7867:2;7856:9;7852:18;7845:25;;7929:2;7919:6;7916:1;7912:14;7901:9;7897:30;7893:39;7879:53;;7967:2;7959:6;7955:15;7988:1;7998:255;8012:6;8009:1;8006:13;7998:255;;;8105:2;8101:7;8089:9;8081:6;8077:22;8073:36;8068:3;8061:49;8133:40;8166:6;8157;8151:13;8133:40;:::i;:::-;8123:50;-1:-1:-1;8231:12:202;;;;8196:15;;;;8034:1;8027:9;7998:255;;;-1:-1:-1;8270:6:202;;7481:801;-1:-1:-1;;;;;;;7481:801:202:o;8287:160::-;8352:20;;8408:13;;8401:21;8391:32;;8381:60;;8437:1;8434;8427:12;8452:606;8553:6;8561;8569;8577;8585;8638:3;8626:9;8617:7;8613:23;8609:33;8606:53;;;8655:1;8652;8645:12;8606:53;8678:29;8697:9;8678:29;:::i;:::-;8668:39;;8726:38;8760:2;8749:9;8745:18;8726:38;:::i;:::-;8716:48;;8811:2;8800:9;8796:18;8783:32;8773:42;;8834:35;8865:2;8854:9;8850:18;8834:35;:::i;:::-;8824:45;;8920:3;8909:9;8905:19;8892:33;-1:-1:-1;;;;;8940:6:202;8937:30;8934:50;;;8980:1;8977;8970:12;8934:50;9003:49;9044:7;9035:6;9024:9;9020:22;9003:49;:::i;:::-;8993:59;;;8452:606;;;;;;;;:::o;9286:186::-;9345:6;9398:2;9386:9;9377:7;9373:23;9369:32;9366:52;;;9414:1;9411;9404:12;9366:52;9437:29;9456:9;9437:29;:::i;9477:668::-;9531:5;9584:3;9577:4;9569:6;9565:17;9561:27;9551:55;;9602:1;9599;9592:12;9551:55;9638:6;9625:20;9664:4;9688:60;9704:43;9744:2;9704:43;:::i;9688:60::-;9782:15;;;9868:1;9864:10;;;;9852:23;;9848:32;;;9813:12;;;;9892:15;;;9889:35;;;9920:1;9917;9910:12;9889:35;9956:2;9948:6;9944:15;9968:148;9984:6;9979:3;9976:15;9968:148;;;10050:23;10069:3;10050:23;:::i;:::-;10038:36;;10094:12;;;;10001;;9968:148;;10150:662;10201:5;10254:3;10247:4;10239:6;10235:17;10231:27;10221:55;;10272:1;10269;10262:12;10221:55;10308:6;10295:20;10334:4;10358:60;10374:43;10414:2;10374:43;:::i;10358:60::-;10452:15;;;10538:1;10534:10;;;;10522:23;;10518:32;;;10483:12;;;;10562:15;;;10559:35;;;10590:1;10587;10580:12;10559:35;10626:2;10618:6;10614:15;10638:145;10654:6;10649:3;10646:15;10638:145;;;10720:20;10736:3;10720:20;:::i;:::-;10708:33;;10761:12;;;;10671;;10638:145;;10817:1276;11043:6;11051;11059;11067;11075;11128:3;11116:9;11107:7;11103:23;11099:33;11096:53;;;11145:1;11142;11135:12;11096:53;11185:9;11172:23;-1:-1:-1;;;;;11255:2:202;11247:6;11244:14;11241:34;;;11271:1;11268;11261:12;11241:34;11294:61;11347:7;11338:6;11327:9;11323:22;11294:61;:::i;:::-;11284:71;;11408:2;11397:9;11393:18;11380:32;11364:48;;11437:2;11427:8;11424:16;11421:36;;;11453:1;11450;11443:12;11421:36;11476:63;11531:7;11520:8;11509:9;11505:24;11476:63;:::i;:::-;11466:73;;11592:2;11581:9;11577:18;11564:32;11548:48;;11621:2;11611:8;11608:16;11605:36;;;11637:1;11634;11627:12;11605:36;11660:63;11715:7;11704:8;11693:9;11689:24;11660:63;:::i;:::-;11650:73;;11776:2;11765:9;11761:18;11748:32;11732:48;;11805:2;11795:8;11792:16;11789:36;;;11821:1;11818;11811:12;11789:36;11844:60;11896:7;11885:8;11874:9;11870:24;11844:60;:::i;:::-;11834:70;;11957:3;11946:9;11942:19;11929:33;11913:49;;11987:2;11977:8;11974:16;11971:36;;;12003:1;12000;11993:12;11971:36;;12026:61;12079:7;12068:8;12057:9;12053:24;12026:61;:::i;12098:388::-;12175:6;12183;12236:2;12224:9;12215:7;12211:23;12207:32;12204:52;;;12252:1;12249;12242:12;12204:52;12288:9;12275:23;12265:33;;12349:2;12338:9;12334:18;12321:32;-1:-1:-1;;;;;12368:6:202;12365:30;12362:50;;;12408:1;12405;12398:12;12362:50;12431:49;12472:7;12463:6;12452:9;12448:22;12431:49;:::i;12491:254::-;12556:6;12564;12617:2;12605:9;12596:7;12592:23;12588:32;12585:52;;;12633:1;12630;12623:12;12585:52;12656:29;12675:9;12656:29;:::i;:::-;12646:39;;12704:35;12735:2;12724:9;12720:18;12704:35;:::i;:::-;12694:45;;12491:254;;;;;:::o;12750:632::-;12921:2;12973:21;;;13043:13;;12946:18;;;13065:22;;;12892:4;;12921:2;13144:15;;;;13118:2;13103:18;;;12892:4;13187:169;13201:6;13198:1;13195:13;13187:169;;;13262:13;;13250:26;;13331:15;;;;13296:12;;;;13223:1;13216:9;13187:169;;13387:531;13479:6;13487;13495;13503;13556:3;13544:9;13535:7;13531:23;13527:33;13524:53;;;13573:1;13570;13563:12;13524:53;13596:29;13615:9;13596:29;:::i;:::-;13586:39;;13672:2;13661:9;13657:18;13644:32;13634:42;;13695:35;13726:2;13715:9;13711:18;13695:35;:::i;:::-;13685:45;;13781:2;13770:9;13766:18;13753:32;-1:-1:-1;;;;;13800:6:202;13797:30;13794:50;;;13840:1;13837;13830:12;13794:50;13863:49;13904:7;13895:6;13884:9;13880:22;13863:49;:::i;:::-;13853:59;;;13387:531;;;;;;;:::o;13923:537::-;14018:6;14026;14034;14042;14095:3;14083:9;14074:7;14070:23;14066:33;14063:53;;;14112:1;14109;14102:12;14063:53;14135:29;14154:9;14135:29;:::i;:::-;14125:39;;14183:38;14217:2;14206:9;14202:18;14183:38;:::i;:::-;14173:48;;14268:2;14257:9;14253:18;14240:32;14230:42;;14323:2;14312:9;14308:18;14295:32;-1:-1:-1;;;;;14342:6:202;14339:30;14336:50;;;14382:1;14379;14372:12;14465:260;14533:6;14541;14594:2;14582:9;14573:7;14569:23;14565:32;14562:52;;;14610:1;14607;14600:12;14562:52;14633:29;14652:9;14633:29;:::i;:::-;14623:39;;14681:38;14715:2;14704:9;14700:18;14681:38;:::i;14730:127::-;14791:10;14786:3;14782:20;14779:1;14772:31;14822:4;14819:1;14812:15;14846:4;14843:1;14836:15;14862:128;14929:9;;;14950:11;;;14947:37;;;14964:18;;:::i;15628:127::-;15689:10;15684:3;15680:20;15677:1;15670:31;15720:4;15717:1;15710:15;15744:4;15741:1;15734:15;16628:380;16707:1;16703:12;;;;16750;;;16771:61;;16825:4;16817:6;16813:17;16803:27;;16771:61;16878:2;16870:6;16867:14;16847:18;16844:38;16841:161;;16924:10;16919:3;16915:20;16912:1;16905:31;16959:4;16956:1;16949:15;16987:4;16984:1;16977:15;18061:125;18126:9;;;18147:10;;;18144:36;;;18160:18;;:::i;19005:544::-;19106:2;19101:3;19098:11;19095:448;;;19142:1;19167:5;19163:2;19156:17;19212:4;19208:2;19198:19;19282:2;19270:10;19266:19;19263:1;19259:27;19253:4;19249:38;19318:4;19306:10;19303:20;19300:47;;;-1:-1:-1;19341:4:202;19300:47;19396:2;19391:3;19387:12;19384:1;19380:20;19374:4;19370:31;19360:41;;19451:82;19469:2;19462:5;19459:13;19451:82;;;19514:17;;;19495:1;19484:13;19451:82;;19725:1348;19849:3;19843:10;-1:-1:-1;;;;;19868:6:202;19865:30;19862:56;;;19898:18;;:::i;:::-;19927:96;20016:6;19976:38;20008:4;20002:11;19976:38;:::i;:::-;19970:4;19927:96;:::i;:::-;20078:4;;20142:2;20131:14;;20159:1;20154:662;;;;20860:1;20877:6;20874:89;;;-1:-1:-1;20929:19:202;;;20923:26;20874:89;-1:-1:-1;;19682:1:202;19678:11;;;19674:24;19670:29;19660:40;19706:1;19702:11;;;19657:57;20976:81;;20124:943;;20154:662;18952:1;18945:14;;;18989:4;18976:18;;-1:-1:-1;;20190:20:202;;;20307:236;20321:7;20318:1;20315:14;20307:236;;;20410:19;;;20404:26;20389:42;;20502:27;;;;20470:1;20458:14;;;;20337:19;;20307:236;;;20311:3;20571:6;20562:7;20559:19;20556:201;;;20632:19;;;20626:26;-1:-1:-1;;20715:1:202;20711:14;;;20727:3;20707:24;20703:37;20699:42;20684:58;20669:74;;20556:201;-1:-1:-1;;;;;20803:1:202;20787:14;;;20783:22;20770:36;;-1:-1:-1;19725:1348:202:o;21078:396::-;-1:-1:-1;;;;;21275:32:202;;21257:51;;21351:14;;21344:22;21339:2;21324:18;;21317:50;21403:2;21398;21383:18;;21376:30;;;-1:-1:-1;;21423:45:202;;21449:18;;21441:6;21423:45;:::i;21479:127::-;21540:10;21535:3;21531:20;21528:1;21521:31;21571:4;21568:1;21561:15;21595:4;21592:1;21585:15;21611:577;21824:3;21856:26;21852:31;21925:2;21916:6;21912:2;21908:15;21904:24;21899:3;21892:37;21980:2;21971:6;21967:2;21963:15;21959:24;21954:2;21949:3;21945:12;21938:46;;22014:6;22009:2;22004:3;22000:12;21993:28;22050:6;22044:13;22066:75;22134:6;22129:2;22124:3;22120:12;22113:4;22105:6;22101:17;22066:75;:::i;:::-;22161:16;;;;22179:2;22157:25;;21611:577;-1:-1:-1;;;;;21611:577:202:o;22193:289::-;22368:6;22357:9;22350:25;22411:2;22406;22395:9;22391:18;22384:30;22331:4;22431:45;22472:2;22461:9;22457:18;22449:6;22431:45;:::i;22487:647::-;22566:6;22619:2;22607:9;22598:7;22594:23;22590:32;22587:52;;;22635:1;22632;22625:12;22587:52;22668:9;22662:16;-1:-1:-1;;;;;22693:6:202;22690:30;22687:50;;;22733:1;22730;22723:12;22687:50;22756:22;;22809:4;22801:13;;22797:27;-1:-1:-1;22787:55:202;;22838:1;22835;22828:12;22787:55;22867:2;22861:9;22892:48;22908:31;22936:2;22908:31;:::i;22892:48::-;22963:2;22956:5;22949:17;23003:7;22998:2;22993;22989;22985:11;22981:20;22978:33;22975:53;;;23024:1;23021;23014:12;22975:53;23037:67;23101:2;23096;23089:5;23085:14;23080:2;23076;23072:11;23037:67;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,bytes32,bool,bytes)": "af255b61",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Compatible with ERC721 approve.\",\"params\":{\"operator\":\"The address to approve for `tokenId`\",\"tokenId\":\"The tokenId to approve\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"getApproved(uint256)\":{\"details\":\"Compatible with ERC721 getApproved.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address of the operator for `tokenId`\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"name()\":{\"details\":\"Returns the name of the token.\",\"returns\":{\"_0\":\"The name of the token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Compatible with ERC721 ownerOf.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The owner of the tokenId\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Compatible with ERC721 safeTransferFrom. Using force=false so that no EOA and only contracts supporting LSP1 interface may receive the tokenId.\",\"params\":{\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Compatible with ERC721 safeTransferFrom.\",\"params\":{\"data\":\"The data to be sent with the transfer\",\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\",\"returns\":{\"_0\":\"The symbol of the token\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Compatible with ERC721 transferFrom. Using force=true so that EOA and any contract may receive the tokenId.\",\"params\":{\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"To provide compatibility with indexing ERC721 events.\"},\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"},\"Transfer(address,address,uint256)\":{\"notice\":\"To provide compatibility with indexing ERC721 events.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInitAbstract.sol\":\"LSP8CompatibleERC721MintableInitAbstract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/ILSP4Compatibility.sol\":{\"keccak256\":\"0xb75cd25d17cca0c09be8a2f5122ac47f8ec2846006faf357e81bb730bcd929a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://097258f718d8ce024699b2866c20c4627ee139dd419eb1ab8155ee28dd1511b6\",\"dweb:/ipfs/QmbFXPazAHPpEutFrYfVadCXW2tCbQAXmW7MB5eQuFW5Xa\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Compatibility.sol\":{\"keccak256\":\"0xfa8b7b6c2b8823582be57f824a91af769c04669dee6c24876b936b23e57a0fe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1df074acad92ab54dcaedf31c5841803599ace132cf3ab0106eb6f815d2ce921\",\"dweb:/ipfs/QmRNTB7WK8YfHUBLui4sppnKJV11sGRCTzfHMT3gCH1SPh\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol\":{\"keccak256\":\"0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2\",\"dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol\":{\"keccak256\":\"0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338\",\"dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/ILSP8CompatibleERC721.sol\":{\"keccak256\":\"0x5d4dfd7c62220f7dc4240c115f5f71301001d3791add5f0468d845ff0de163aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137cbe272708a38e196611e28452cfa61e75005b5050800475ea51397a3e5680\",\"dweb:/ipfs/QmWtmpnFyfVfw3W2X841GKoy2gQcM1DPHHRLymc8112UG7\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol\":{\"keccak256\":\"0x3850bd08bd66a5f79d905827991f5bed9f34325a2435b74e53c726d079e57e6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b43b615ff66cfa94f97c3a46d6cebe7769143c5fdd4db1727a69ff5259ff8a6\",\"dweb:/ipfs/QmYidLQ77X7T1q4BaQgsw9gVd5mRiSqzxgysQqkfMaSB7u\"]},\"contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInitAbstract.sol\":{\"keccak256\":\"0x9f53d7538b68546957b1ee475298c9d9bb8fa9260ab7fe15f9c12c66de444154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715ba8e3384f9140a28b7e5bc6815d01fc28ea8b0417e3a2ba5c8b8d4c7e931f\",\"dweb:/ipfs/QmXBdtsFWEzNHS6aTQMmnUthfSUiVnxkT6qr7jajWrGzfY\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol\":{\"keccak256\":\"0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551\",\"dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Compatible with ERC721 approve.",
            "params": {
              "operator": "The address to approve for `tokenId`",
              "tokenId": "The tokenId to approve"
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "getApproved(uint256)": {
            "details": "Compatible with ERC721 getApproved.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address of the operator for `tokenId`"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "name()": {
            "details": "Returns the name of the token.",
            "returns": {
              "_0": "The name of the token"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "Compatible with ERC721 ownerOf.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The owner of the tokenId"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Compatible with ERC721 safeTransferFrom. Using force=false so that no EOA and only contracts supporting LSP1 interface may receive the tokenId.",
            "params": {
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Compatible with ERC721 safeTransferFrom.",
            "params": {
              "data": "The data to be sent with the transfer",
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name.",
            "returns": {
              "_0": "The symbol of the token"
            }
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Compatible with ERC721 transferFrom. Using force=true so that EOA and any contract may receive the tokenId.",
            "params": {
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInitAbstract.sol": "LSP8CompatibleERC721MintableInitAbstract"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/ILSP4Compatibility.sol": {
        "keccak256": "0xb75cd25d17cca0c09be8a2f5122ac47f8ec2846006faf357e81bb730bcd929a9",
        "urls": [
          "bzz-raw://097258f718d8ce024699b2866c20c4627ee139dd419eb1ab8155ee28dd1511b6",
          "dweb:/ipfs/QmbFXPazAHPpEutFrYfVadCXW2tCbQAXmW7MB5eQuFW5Xa"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Compatibility.sol": {
        "keccak256": "0xfa8b7b6c2b8823582be57f824a91af769c04669dee6c24876b936b23e57a0fe8",
        "urls": [
          "bzz-raw://1df074acad92ab54dcaedf31c5841803599ace132cf3ab0106eb6f815d2ce921",
          "dweb:/ipfs/QmRNTB7WK8YfHUBLui4sppnKJV11sGRCTzfHMT3gCH1SPh"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol": {
        "keccak256": "0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792",
        "urls": [
          "bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2",
          "dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol": {
        "keccak256": "0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968",
        "urls": [
          "bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338",
          "dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/ILSP8CompatibleERC721.sol": {
        "keccak256": "0x5d4dfd7c62220f7dc4240c115f5f71301001d3791add5f0468d845ff0de163aa",
        "urls": [
          "bzz-raw://137cbe272708a38e196611e28452cfa61e75005b5050800475ea51397a3e5680",
          "dweb:/ipfs/QmWtmpnFyfVfw3W2X841GKoy2gQcM1DPHHRLymc8112UG7"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol": {
        "keccak256": "0x3850bd08bd66a5f79d905827991f5bed9f34325a2435b74e53c726d079e57e6e",
        "urls": [
          "bzz-raw://6b43b615ff66cfa94f97c3a46d6cebe7769143c5fdd4db1727a69ff5259ff8a6",
          "dweb:/ipfs/QmYidLQ77X7T1q4BaQgsw9gVd5mRiSqzxgysQqkfMaSB7u"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInitAbstract.sol": {
        "keccak256": "0x9f53d7538b68546957b1ee475298c9d9bb8fa9260ab7fe15f9c12c66de444154",
        "urls": [
          "bzz-raw://715ba8e3384f9140a28b7e5bc6815d01fc28ea8b0417e3a2ba5c8b8d4c7e931f",
          "dweb:/ipfs/QmXBdtsFWEzNHS6aTQMmnUthfSUiVnxkT6qr7jajWrGzfY"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol": {
        "keccak256": "0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45",
        "urls": [
          "bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551",
          "dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInitAbstract.sol",
    "id": 12876,
    "exportedSymbols": {
      "LSP8CompatibleERC721InitAbstract": [
        12470
      ],
      "LSP8CompatibleERC721MintableInitAbstract": [
        12875
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:730:79",
    "nodes": [
      {
        "id": 12827,
        "nodeType": "PragmaDirective",
        "src": "32:24:79",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 12829,
        "nodeType": "ImportDirective",
        "src": "69:100:79",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol",
        "file": "../extensions/LSP8CompatibleERC721InitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12876,
        "sourceUnit": 12471,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12828,
              "name": "LSP8CompatibleERC721InitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12470,
              "src": "77:32:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12875,
        "nodeType": "ContractDefinition",
        "src": "171:590:79",
        "nodes": [
          {
            "id": 12853,
            "nodeType": "FunctionDefinition",
            "src": "331:245:79",
            "nodes": [],
            "body": {
              "id": 12852,
              "nodeType": "Block",
              "src": "488:88:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12847,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12834,
                        "src": "543:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 12848,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12836,
                        "src": "550:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 12849,
                        "name": "newOwner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12838,
                        "src": "559:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12844,
                        "name": "LSP8CompatibleERC721InitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12470,
                        "src": "498:32:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP8CompatibleERC721InitAbstract_$12470_$",
                          "typeString": "type(contract LSP8CompatibleERC721InitAbstract)"
                        }
                      },
                      "id": 12846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "531:11:79",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12009,
                      "src": "498:44:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address)"
                      }
                    },
                    "id": 12850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:71:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12851,
                  "nodeType": "ExpressionStatement",
                  "src": "498:71:79"
                }
              ]
            },
            "baseFunctions": [
              12009
            ],
            "documentation": {
              "id": 12832,
              "nodeType": "StructuredDocumentation",
              "src": "263:63:79",
              "text": " @inheritdoc LSP8CompatibleERC721InitAbstract"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12842,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12841,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "471:16:79"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43954,
                  "src": "471:16:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "471:16:79"
              }
            ],
            "name": "_initialize",
            "nameLocation": "340:11:79",
            "overrides": {
              "id": 12840,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "462:8:79"
            },
            "parameters": {
              "id": 12839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12834,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "375:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 12853,
                  "src": "361:19:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12833,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12836,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "404:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 12853,
                  "src": "390:21:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12835,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12838,
                  "mutability": "mutable",
                  "name": "newOwner_",
                  "nameLocation": "429:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 12853,
                  "src": "421:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "351:93:79"
            },
            "returnParameters": {
              "id": 12843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:0:79"
            },
            "scope": 12875,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 12874,
            "nodeType": "FunctionDefinition",
            "src": "582:177:79",
            "nodes": [],
            "body": {
              "id": 12873,
              "nodeType": "Block",
              "src": "711:48:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12867,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12855,
                        "src": "727:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12868,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12857,
                        "src": "731:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 12869,
                        "name": "force",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12859,
                        "src": "740:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 12870,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12861,
                        "src": "747:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 12866,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12385
                      ],
                      "referencedDeclaration": 12385,
                      "src": "721:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 12871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "721:31:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12872,
                  "nodeType": "ExpressionStatement",
                  "src": "721:31:79"
                }
              ]
            },
            "functionSelector": "af255b61",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12864,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12863,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "701:9:79"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43609,
                  "src": "701:9:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "701:9:79"
              }
            ],
            "name": "mint",
            "nameLocation": "591:4:79",
            "parameters": {
              "id": 12862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12855,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "613:2:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 12874,
                  "src": "605:10:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12857,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "633:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 12874,
                  "src": "625:15:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12856,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12859,
                  "mutability": "mutable",
                  "name": "force",
                  "nameLocation": "655:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 12874,
                  "src": "650:10:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12858,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12861,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "683:4:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 12874,
                  "src": "670:17:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12860,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "595:98:79"
            },
            "returnParameters": {
              "id": 12865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:79"
            },
            "scope": 12875,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12830,
              "name": "LSP8CompatibleERC721InitAbstract",
              "nameLocations": [
                "224:32:79"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12470,
              "src": "224:32:79"
            },
            "id": 12831,
            "nodeType": "InheritanceSpecifier",
            "src": "224:32:79"
          }
        ],
        "canonicalName": "LSP8CompatibleERC721MintableInitAbstract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12875,
          12470,
          4059,
          11104,
          11044,
          11225,
          9968,
          4296,
          43546,
          43508,
          4008,
          43840,
          46531,
          46594,
          43687,
          43991
        ],
        "name": "LSP8CompatibleERC721MintableInitAbstract",
        "nameLocation": "180:40:79",
        "scope": 12876,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 79
}