{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CappedSupplyCannotMintOverCap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CappedSupplyRequired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupplyCap",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenSupplyCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061243d806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806352058d8a116100b85780637f23690c1161007c5780637f23690c146102b65780638da5cb5b146102c9578063a3b261f2146102e0578063cf5182ba14610300578063f2fde38b14610313578063f542033f1461032657600080fd5b806352058d8a1461026057806354f6127f1461026857806370a0823114610288578063715018a61461029b5780637e87632c146102a357600080fd5b8063217b22701161010a578063217b2270146101bc5780632a3654a4146101e75780632cfd3005146101fa57806349a6078d1461020d5780634e3e6e9c1461022d578063511b69521461024d57600080fd5b806301ffc9a71461014757806308a1eee11461016f5780630b0c6d821461018457806314a6e2931461019757806318160ddd146101aa575b600080fd5b61015a6101553660046119fc565b610339565b60405190151581526020015b60405180910390f35b61018261017d366004611a26565b610364565b005b610182610192366004611a5b565b610396565b6101826101a5366004611c50565b610443565b6002545b604051908152602001610166565b6101cf6101ca366004611a26565b6104cf565b6040516001600160a01b039091168152602001610166565b61015a6101f5366004611a5b565b610508565b610182610208366004611a5b565b610524565b61022061021b366004611a26565b610562565b6040516101669190611cb3565b61024061023b366004611d00565b610584565b6040516101669190611d84565b61018261025b366004611df6565b610637565b6007546101ae565b61027b610276366004611a26565b610686565b6040516101669190611e6e565b6101ae610296366004611e81565b610691565b6101826106b2565b6101826102b1366004611f60565b6106c6565b6101826102c4366004612024565b6107b5565b6000546201000090046001600160a01b03166101cf565b6102f36102ee366004611e81565b6107c7565b6040516101669190612060565b61018261030e366004611a5b565b6107eb565b610182610321366004611e81565b610914565b610182610334366004612098565b61098a565b60006001600160e01b0319821663622e7a0160e01b148061035e575061035e82610aab565b92915050565b610393816040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610ae0565b50565b60006103a1826104cf565b9050336001600160a01b03821681146103ec57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661041357604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036104325750505050565b61043d848385610ba6565b50505050565b61044b610c37565b805182511461047a57815181516040516321d1e13360e11b8152600481019290925260248201526044016103e3565b60005b82518110156104ca576104c283828151811061049b5761049b612113565b60200260200101518383815181106104b5576104b5612113565b6020026020010151610c98565b60010161047d565b505050565b6000818152600360205260408120546001600160a01b03168061035e57604051635747cd1b60e11b8152600481018490526024016103e3565b600061051382610d8c565b61051d8383610dc4565b9392505050565b61055e82826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610e0d565b5050565b606061056d82610d8c565b600082815260056020526040902061035e90610e49565b606081516001600160401b0381111561059f5761059f611a85565b6040519080825280602002602001820160405280156105d257816020015b60608152602001906001900390816105bd5790505b50905060005b8251811015610631576106038382815181106105f6576105f6612113565b6020026020010151610e56565b82828151811061061557610615612113565b602002602001018190525061062a8160010190565b90506105d8565b50919050565b336106428185610dc4565b61067157604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016103e3565b61067e8686868686610ef8565b505050505050565b606061035e82610e56565b6001600160a01b038116600090815260046020526040812061035e90611082565b6106ba610c37565b6106c4600061108c565b565b84518451811415806106d9575083518114155b806106e5575082518114155b806106f1575081518114155b1561070f576040516393a8311960e01b815260040160405180910390fd5b60005b818110156107ac576107a487828151811061072f5761072f612113565b602002602001015187838151811061074957610749612113565b602002602001015187848151811061076357610763612113565b602002602001015187858151811061077d5761077d612113565b602002602001015187868151811061079757610797612113565b6020026020010151610637565b600101610712565b50505050505050565b6107bd610c37565b61055e8282610c98565b6001600160a01b038116600090815260046020526040902060609061035e90611102565b60006107f6826104cf565b9050336001600160a01b038216811461083c57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103e3565b6001600160a01b03841661086357604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036108825750505050565b600083815260056020526040812061089a908661110d565b9050806108cc576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016103e3565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b61091c610c37565b6001600160a01b0381166109815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e3565b6103938161108c565b600054610100900460ff16158080156109aa5750600054600160ff909116105b806109c45750303b1580156109c4575060005460ff166001145b610a275760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103e3565b6000805460ff191660011790558015610a4a576000805461ff0019166101001790555b610a55858585611122565b610a5e82611154565b8015610aa4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b60006001600160e01b03198216631c537ddf60e21b148061035e57506301ffc9a760e01b6001600160e01b031983161461035e565b6000610aeb836104cf565b905033600160026000828254610b01919061213f565b90915550610b11905082856111a1565b6001600160a01b0382166000908152600460205260409020610b3390856111e8565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610b9190869085908a90612152565b60405180910390a461043d82600086866111f4565b6000818152600560205260408120610bbe90856112c8565b905080610bf0576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016103e3565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b03620100009091041633146106c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e3565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610cd8576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610d1857604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610d308282612201565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610d7157610d6c8360006101006112dd565b610d73565b825b604051610d809190611e6e565b60405180910390a25050565b6000818152600360205260409020546001600160a01b031661039357604051635747cd1b60e11b8152600481018290526024016103e3565b600080610dd0836104cf565b9050806001600160a01b0316846001600160a01b03161480610e0557506000838152600560205260409020610e0590856113ea565b949350505050565b600754600254610e1e9060016122c0565b1115610e3d5760405163e8ba229160e01b815260040160405180910390fd5b61043d8484848461140c565b6060600061051d8361151f565b6000818152600160205260409020805460609190610e7390612187565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9f90612187565b8015610eec5780601f10610ec157610100808354040283529160200191610eec565b820191906000526020600020905b815481529060010190602001808311610ecf57829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610f2a57604051635d67d6c160e01b815260040160405180910390fd5b6000610f35846104cf565b9050856001600160a01b0316816001600160a01b031614610f8357604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016103e3565b6001600160a01b038516610faa576040516324ecef4d60e01b815260040160405180910390fd5b33610fb587866111a1565b6001600160a01b0387166000908152600460205260409020610fd790866111e8565b506001600160a01b0386166000908152600460205260409020610ffa908661157a565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906110619086908a908a90612152565b60405180910390a4611075878787866111f4565b6107ac8787878787611586565b600061035e825490565b6000546001600160a01b0382811662010000909204161461039357600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b606061035e8261151f565b600061051d836001600160a01b0384166116be565b600054610100900460ff166111495760405162461bcd60e51b81526004016103e3906122d3565b6104ca83838361170d565b600054610100900460ff1661117b5760405162461bcd60e51b81526004016103e3906122d3565b8060000361119c5760405163038d9fc360e41b815260040160405180910390fd5b600755565b6000818152600560205260408120906111b982611082565b905060005b81811015610aa45760006111d284826117da565b90506111df818787610ba6565b506001016111be565b600061051d83836117e6565b61120584631aed5a8560e21b6118d9565b1561043d57600084848484604051602001611223949392919061231e565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611281907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0090859060040161236b565b6000604051808303816000875af11580156112a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067e9190810190612384565b600061051d836001600160a01b0384166117e6565b6060816112eb81601f6122c0565b101561132a5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103e3565b61133482846122c0565b845110156113785760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103e3565b60608215801561139757604051915060008252602082016040526113e1565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156113d05780518352602092830192016113b8565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b0381166000908152600183016020526040812054151561051d565b6001600160a01b038416611433576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561146c576040516334c7b51160e01b8152600481018490526024016103e3565b3360016002600082825461148091906122c0565b90915550506001600160a01b03851660009081526004602052604090206114a7908561157a565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061150990869089908990612152565b60405180910390a4610aa4600086868686611586565b606081600001805480602002602001604051908101604052809291908181526020018280548015610eec57602002820191906000526020600020905b81548152602001906001019080831161155b5750505050509050919050565b600061051d83836116be565b61159784631aed5a8560e21b6118d9565b15611661576000858585846040516020016115b5949392919061231e565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611613907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d90859060040161236b565b6000604051808303816000875af1158015611632573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261165a9190810190612384565b5050610aa4565b81610aa4576001600160a01b0384163b1561169a57604051634349776d60e01b81526001600160a01b03851660048201526024016103e3565b604051630317313760e01b81526001600160a01b03851660048201526024016103e3565b60008181526001830160205260408120546117055750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561035e565b50600061035e565b600054610100900460ff166117345760405162461bcd60e51b81526004016103e3906122d3565b61173d81611962565b6117867feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611989565b6117b07fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611989565b6104ca7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611989565b600061051d83836119d2565b600081815260018301602052604081205480156118cf57600061180a60018361213f565b855490915060009061181e9060019061213f565b905081811461188357600086600001828154811061183e5761183e612113565b906000526020600020015490508087600001848154811061186157611861612113565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611894576118946123f1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061035e565b600091505061035e565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d9150600051905082801561194b575060208210155b80156119575750600081115b979650505050505050565b600054610100900460ff1661091c5760405162461bcd60e51b81526004016103e3906122d3565b60008281526001602052604090206119a18282612201565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610d809190611e6e565b60008260000182815481106119e9576119e9612113565b9060005260206000200154905092915050565b600060208284031215611a0e57600080fd5b81356001600160e01b03198116811461051d57600080fd5b600060208284031215611a3857600080fd5b5035919050565b80356001600160a01b0381168114611a5657600080fd5b919050565b60008060408385031215611a6e57600080fd5b611a7783611a3f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ac357611ac3611a85565b604052919050565b60006001600160401b03821115611ae457611ae4611a85565b5060051b60200190565b600082601f830112611aff57600080fd5b81356020611b14611b0f83611acb565b611a9b565b82815260059290921b84018101918181019086841115611b3357600080fd5b8286015b84811015611b4e5780358352918301918301611b37565b509695505050505050565b60006001600160401b03821115611b7257611b72611a85565b50601f01601f191660200190565b600082601f830112611b9157600080fd5b8135611b9f611b0f82611b59565b818152846020838601011115611bb457600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611be257600080fd5b81356020611bf2611b0f83611acb565b82815260059290921b84018101918181019086841115611c1157600080fd5b8286015b84811015611b4e5780356001600160401b03811115611c345760008081fd5b611c428986838b0101611b80565b845250918301918301611c15565b60008060408385031215611c6357600080fd5b82356001600160401b0380821115611c7a57600080fd5b611c8686838701611aee565b93506020850135915080821115611c9c57600080fd5b50611ca985828601611bd1565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611cf45783516001600160a01b031683529284019291840191600101611ccf565b50909695505050505050565b600060208284031215611d1257600080fd5b81356001600160401b03811115611d2857600080fd5b610e0584828501611aee565b60005b83811015611d4f578181015183820152602001611d37565b50506000910152565b60008151808452611d70816020860160208601611d34565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611dd957603f19888603018452611dc7858351611d58565b94509285019290850190600101611dab565b5092979650505050505050565b80358015158114611a5657600080fd5b600080600080600060a08688031215611e0e57600080fd5b611e1786611a3f565b9450611e2560208701611a3f565b935060408601359250611e3a60608701611de6565b915060808601356001600160401b03811115611e5557600080fd5b611e6188828901611b80565b9150509295509295909350565b60208152600061051d6020830184611d58565b600060208284031215611e9357600080fd5b61051d82611a3f565b600082601f830112611ead57600080fd5b81356020611ebd611b0f83611acb565b82815260059290921b84018101918181019086841115611edc57600080fd5b8286015b84811015611b4e57611ef181611a3f565b8352918301918301611ee0565b600082601f830112611f0f57600080fd5b81356020611f1f611b0f83611acb565b82815260059290921b84018101918181019086841115611f3e57600080fd5b8286015b84811015611b4e57611f5381611de6565b8352918301918301611f42565b600080600080600060a08688031215611f7857600080fd5b85356001600160401b0380821115611f8f57600080fd5b611f9b89838a01611e9c565b96506020880135915080821115611fb157600080fd5b611fbd89838a01611e9c565b95506040880135915080821115611fd357600080fd5b611fdf89838a01611aee565b94506060880135915080821115611ff557600080fd5b61200189838a01611efe565b9350608088013591508082111561201757600080fd5b50611e6188828901611bd1565b6000806040838503121561203757600080fd5b8235915060208301356001600160401b0381111561205457600080fd5b611ca985828601611b80565b6020808252825182820181905260009190848201906040850190845b81811015611cf45783518352928401929184019160010161207c565b600080600080608085870312156120ae57600080fd5b84356001600160401b03808211156120c557600080fd5b6120d188838901611b80565b955060208701359150808211156120e757600080fd5b506120f487828801611b80565b93505061210360408601611a3f565b9396929550929360600135925050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561035e5761035e612129565b6001600160a01b0384168152821515602082015260606040820181905260009061217e90830184611d58565b95945050505050565b600181811c9082168061219b57607f821691505b60208210810361063157634e487b7160e01b600052602260045260246000fd5b601f8211156104ca57600081815260208120601f850160051c810160208610156121e25750805b601f850160051c820191505b8181101561067e578281556001016121ee565b81516001600160401b0381111561221a5761221a611a85565b61222e816122288454612187565b846121bb565b602080601f831160018114612263576000841561224b5750858301515b600019600386901b1c1916600185901b17855561067e565b600085815260208120601f198616915b8281101561229257888601518255948401946001909101908401612273565b50858210156122b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561035e5761035e612129565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006bffffffffffffffffffffffff19808760601b168352808660601b16601484015250836028830152825161235b816048850160208701611d34565b9190910160480195945050505050565b828152604060208201526000610e056040830184611d58565b60006020828403121561239657600080fd5b81516001600160401b038111156123ac57600080fd5b8201601f810184136123bd57600080fd5b80516123cb611b0f82611b59565b8181528560208385010111156123e057600080fd5b61217e826020830160208601611d34565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ad2d19b7bd06d9cd1af490fdd6331e46f0feee073d8c032215766c99982bb61f64736f6c63430008110033",
    "sourceMap": "345:618:134:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806352058d8a116100b85780637f23690c1161007c5780637f23690c146102b65780638da5cb5b146102c9578063a3b261f2146102e0578063cf5182ba14610300578063f2fde38b14610313578063f542033f1461032657600080fd5b806352058d8a1461026057806354f6127f1461026857806370a0823114610288578063715018a61461029b5780637e87632c146102a357600080fd5b8063217b22701161010a578063217b2270146101bc5780632a3654a4146101e75780632cfd3005146101fa57806349a6078d1461020d5780634e3e6e9c1461022d578063511b69521461024d57600080fd5b806301ffc9a71461014757806308a1eee11461016f5780630b0c6d821461018457806314a6e2931461019757806318160ddd146101aa575b600080fd5b61015a6101553660046119fc565b610339565b60405190151581526020015b60405180910390f35b61018261017d366004611a26565b610364565b005b610182610192366004611a5b565b610396565b6101826101a5366004611c50565b610443565b6002545b604051908152602001610166565b6101cf6101ca366004611a26565b6104cf565b6040516001600160a01b039091168152602001610166565b61015a6101f5366004611a5b565b610508565b610182610208366004611a5b565b610524565b61022061021b366004611a26565b610562565b6040516101669190611cb3565b61024061023b366004611d00565b610584565b6040516101669190611d84565b61018261025b366004611df6565b610637565b6007546101ae565b61027b610276366004611a26565b610686565b6040516101669190611e6e565b6101ae610296366004611e81565b610691565b6101826106b2565b6101826102b1366004611f60565b6106c6565b6101826102c4366004612024565b6107b5565b6000546201000090046001600160a01b03166101cf565b6102f36102ee366004611e81565b6107c7565b6040516101669190612060565b61018261030e366004611a5b565b6107eb565b610182610321366004611e81565b610914565b610182610334366004612098565b61098a565b60006001600160e01b0319821663622e7a0160e01b148061035e575061035e82610aab565b92915050565b610393816040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610ae0565b50565b60006103a1826104cf565b9050336001600160a01b03821681146103ec57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661041357604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036104325750505050565b61043d848385610ba6565b50505050565b61044b610c37565b805182511461047a57815181516040516321d1e13360e11b8152600481019290925260248201526044016103e3565b60005b82518110156104ca576104c283828151811061049b5761049b612113565b60200260200101518383815181106104b5576104b5612113565b6020026020010151610c98565b60010161047d565b505050565b6000818152600360205260408120546001600160a01b03168061035e57604051635747cd1b60e11b8152600481018490526024016103e3565b600061051382610d8c565b61051d8383610dc4565b9392505050565b61055e82826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610e0d565b5050565b606061056d82610d8c565b600082815260056020526040902061035e90610e49565b606081516001600160401b0381111561059f5761059f611a85565b6040519080825280602002602001820160405280156105d257816020015b60608152602001906001900390816105bd5790505b50905060005b8251811015610631576106038382815181106105f6576105f6612113565b6020026020010151610e56565b82828151811061061557610615612113565b602002602001018190525061062a8160010190565b90506105d8565b50919050565b336106428185610dc4565b61067157604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016103e3565b61067e8686868686610ef8565b505050505050565b606061035e82610e56565b6001600160a01b038116600090815260046020526040812061035e90611082565b6106ba610c37565b6106c4600061108c565b565b84518451811415806106d9575083518114155b806106e5575082518114155b806106f1575081518114155b1561070f576040516393a8311960e01b815260040160405180910390fd5b60005b818110156107ac576107a487828151811061072f5761072f612113565b602002602001015187838151811061074957610749612113565b602002602001015187848151811061076357610763612113565b602002602001015187858151811061077d5761077d612113565b602002602001015187868151811061079757610797612113565b6020026020010151610637565b600101610712565b50505050505050565b6107bd610c37565b61055e8282610c98565b6001600160a01b038116600090815260046020526040902060609061035e90611102565b60006107f6826104cf565b9050336001600160a01b038216811461083c57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103e3565b6001600160a01b03841661086357604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036108825750505050565b600083815260056020526040812061089a908661110d565b9050806108cc576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016103e3565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b61091c610c37565b6001600160a01b0381166109815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e3565b6103938161108c565b600054610100900460ff16158080156109aa5750600054600160ff909116105b806109c45750303b1580156109c4575060005460ff166001145b610a275760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103e3565b6000805460ff191660011790558015610a4a576000805461ff0019166101001790555b610a55858585611122565b610a5e82611154565b8015610aa4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b60006001600160e01b03198216631c537ddf60e21b148061035e57506301ffc9a760e01b6001600160e01b031983161461035e565b6000610aeb836104cf565b905033600160026000828254610b01919061213f565b90915550610b11905082856111a1565b6001600160a01b0382166000908152600460205260409020610b3390856111e8565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610b9190869085908a90612152565b60405180910390a461043d82600086866111f4565b6000818152600560205260408120610bbe90856112c8565b905080610bf0576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016103e3565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b03620100009091041633146106c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e3565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610cd8576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610d1857604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610d308282612201565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610d7157610d6c8360006101006112dd565b610d73565b825b604051610d809190611e6e565b60405180910390a25050565b6000818152600360205260409020546001600160a01b031661039357604051635747cd1b60e11b8152600481018290526024016103e3565b600080610dd0836104cf565b9050806001600160a01b0316846001600160a01b03161480610e0557506000838152600560205260409020610e0590856113ea565b949350505050565b600754600254610e1e9060016122c0565b1115610e3d5760405163e8ba229160e01b815260040160405180910390fd5b61043d8484848461140c565b6060600061051d8361151f565b6000818152600160205260409020805460609190610e7390612187565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9f90612187565b8015610eec5780601f10610ec157610100808354040283529160200191610eec565b820191906000526020600020905b815481529060010190602001808311610ecf57829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610f2a57604051635d67d6c160e01b815260040160405180910390fd5b6000610f35846104cf565b9050856001600160a01b0316816001600160a01b031614610f8357604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016103e3565b6001600160a01b038516610faa576040516324ecef4d60e01b815260040160405180910390fd5b33610fb587866111a1565b6001600160a01b0387166000908152600460205260409020610fd790866111e8565b506001600160a01b0386166000908152600460205260409020610ffa908661157a565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906110619086908a908a90612152565b60405180910390a4611075878787866111f4565b6107ac8787878787611586565b600061035e825490565b6000546001600160a01b0382811662010000909204161461039357600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b606061035e8261151f565b600061051d836001600160a01b0384166116be565b600054610100900460ff166111495760405162461bcd60e51b81526004016103e3906122d3565b6104ca83838361170d565b600054610100900460ff1661117b5760405162461bcd60e51b81526004016103e3906122d3565b8060000361119c5760405163038d9fc360e41b815260040160405180910390fd5b600755565b6000818152600560205260408120906111b982611082565b905060005b81811015610aa45760006111d284826117da565b90506111df818787610ba6565b506001016111be565b600061051d83836117e6565b61120584631aed5a8560e21b6118d9565b1561043d57600084848484604051602001611223949392919061231e565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611281907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0090859060040161236b565b6000604051808303816000875af11580156112a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067e9190810190612384565b600061051d836001600160a01b0384166117e6565b6060816112eb81601f6122c0565b101561132a5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103e3565b61133482846122c0565b845110156113785760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103e3565b60608215801561139757604051915060008252602082016040526113e1565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156113d05780518352602092830192016113b8565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b0381166000908152600183016020526040812054151561051d565b6001600160a01b038416611433576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561146c576040516334c7b51160e01b8152600481018490526024016103e3565b3360016002600082825461148091906122c0565b90915550506001600160a01b03851660009081526004602052604090206114a7908561157a565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061150990869089908990612152565b60405180910390a4610aa4600086868686611586565b606081600001805480602002602001604051908101604052809291908181526020018280548015610eec57602002820191906000526020600020905b81548152602001906001019080831161155b5750505050509050919050565b600061051d83836116be565b61159784631aed5a8560e21b6118d9565b15611661576000858585846040516020016115b5949392919061231e565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611613907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d90859060040161236b565b6000604051808303816000875af1158015611632573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261165a9190810190612384565b5050610aa4565b81610aa4576001600160a01b0384163b1561169a57604051634349776d60e01b81526001600160a01b03851660048201526024016103e3565b604051630317313760e01b81526001600160a01b03851660048201526024016103e3565b60008181526001830160205260408120546117055750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561035e565b50600061035e565b600054610100900460ff166117345760405162461bcd60e51b81526004016103e3906122d3565b61173d81611962565b6117867feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611989565b6117b07fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611989565b6104ca7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611989565b600061051d83836119d2565b600081815260018301602052604081205480156118cf57600061180a60018361213f565b855490915060009061181e9060019061213f565b905081811461188357600086600001828154811061183e5761183e612113565b906000526020600020015490508087600001848154811061186157611861612113565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611894576118946123f1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061035e565b600091505061035e565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d9150600051905082801561194b575060208210155b80156119575750600081115b979650505050505050565b600054610100900460ff1661091c5760405162461bcd60e51b81526004016103e3906122d3565b60008281526001602052604090206119a18282612201565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610d809190611e6e565b60008260000182815481106119e9576119e9612113565b9060005260206000200154905092915050565b600060208284031215611a0e57600080fd5b81356001600160e01b03198116811461051d57600080fd5b600060208284031215611a3857600080fd5b5035919050565b80356001600160a01b0381168114611a5657600080fd5b919050565b60008060408385031215611a6e57600080fd5b611a7783611a3f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ac357611ac3611a85565b604052919050565b60006001600160401b03821115611ae457611ae4611a85565b5060051b60200190565b600082601f830112611aff57600080fd5b81356020611b14611b0f83611acb565b611a9b565b82815260059290921b84018101918181019086841115611b3357600080fd5b8286015b84811015611b4e5780358352918301918301611b37565b509695505050505050565b60006001600160401b03821115611b7257611b72611a85565b50601f01601f191660200190565b600082601f830112611b9157600080fd5b8135611b9f611b0f82611b59565b818152846020838601011115611bb457600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611be257600080fd5b81356020611bf2611b0f83611acb565b82815260059290921b84018101918181019086841115611c1157600080fd5b8286015b84811015611b4e5780356001600160401b03811115611c345760008081fd5b611c428986838b0101611b80565b845250918301918301611c15565b60008060408385031215611c6357600080fd5b82356001600160401b0380821115611c7a57600080fd5b611c8686838701611aee565b93506020850135915080821115611c9c57600080fd5b50611ca985828601611bd1565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611cf45783516001600160a01b031683529284019291840191600101611ccf565b50909695505050505050565b600060208284031215611d1257600080fd5b81356001600160401b03811115611d2857600080fd5b610e0584828501611aee565b60005b83811015611d4f578181015183820152602001611d37565b50506000910152565b60008151808452611d70816020860160208601611d34565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611dd957603f19888603018452611dc7858351611d58565b94509285019290850190600101611dab565b5092979650505050505050565b80358015158114611a5657600080fd5b600080600080600060a08688031215611e0e57600080fd5b611e1786611a3f565b9450611e2560208701611a3f565b935060408601359250611e3a60608701611de6565b915060808601356001600160401b03811115611e5557600080fd5b611e6188828901611b80565b9150509295509295909350565b60208152600061051d6020830184611d58565b600060208284031215611e9357600080fd5b61051d82611a3f565b600082601f830112611ead57600080fd5b81356020611ebd611b0f83611acb565b82815260059290921b84018101918181019086841115611edc57600080fd5b8286015b84811015611b4e57611ef181611a3f565b8352918301918301611ee0565b600082601f830112611f0f57600080fd5b81356020611f1f611b0f83611acb565b82815260059290921b84018101918181019086841115611f3e57600080fd5b8286015b84811015611b4e57611f5381611de6565b8352918301918301611f42565b600080600080600060a08688031215611f7857600080fd5b85356001600160401b0380821115611f8f57600080fd5b611f9b89838a01611e9c565b96506020880135915080821115611fb157600080fd5b611fbd89838a01611e9c565b95506040880135915080821115611fd357600080fd5b611fdf89838a01611aee565b94506060880135915080821115611ff557600080fd5b61200189838a01611efe565b9350608088013591508082111561201757600080fd5b50611e6188828901611bd1565b6000806040838503121561203757600080fd5b8235915060208301356001600160401b0381111561205457600080fd5b611ca985828601611b80565b6020808252825182820181905260009190848201906040850190845b81811015611cf45783518352928401929184019160010161207c565b600080600080608085870312156120ae57600080fd5b84356001600160401b03808211156120c557600080fd5b6120d188838901611b80565b955060208701359150808211156120e757600080fd5b506120f487828801611b80565b93505061210360408601611a3f565b9396929550929360600135925050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561035e5761035e612129565b6001600160a01b0384168152821515602082015260606040820181905260009061217e90830184611d58565b95945050505050565b600181811c9082168061219b57607f821691505b60208210810361063157634e487b7160e01b600052602260045260246000fd5b601f8211156104ca57600081815260208120601f850160051c810160208610156121e25750805b601f850160051c820191505b8181101561067e578281556001016121ee565b81516001600160401b0381111561221a5761221a611a85565b61222e816122288454612187565b846121bb565b602080601f831160018114612263576000841561224b5750858301515b600019600386901b1c1916600185901b17855561067e565b600085815260208120601f198616915b8281101561229257888601518255948401946001909101908401612273565b50858210156122b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561035e5761035e612129565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006bffffffffffffffffffffffff19808760601b168352808660601b16601484015250836028830152825161235b816048850160208701611d34565b9190910160480195945050505050565b828152604060208201526000610e056040830184611d58565b60006020828403121561239657600080fd5b81516001600160401b038111156123ac57600080fd5b8201601f810184136123bd57600080fd5b80516123cb611b0f82611b59565b8181528560208385010111156123e057600080fd5b61217e826020830160208601611d34565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ad2d19b7bd06d9cd1af490fdd6331e46f0feee073d8c032215766c99982bb61f64736f6c63430008110033",
    "sourceMap": "345:618:134:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:253:67;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1140:253:67;;;;;;;;875:86:134;;;;;;:::i;:::-;;:::i;:::-;;3461:587:66;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;4688:25:202;;;4676:2;4661:18;1690:92:66;4542:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4888:32:202;;;4870:51;;4858:2;4843:18;2082:259:66;4724:203:202;4119:188:66;;;;;;:::i;:::-;;:::i;753:116:134:-;;;;;;:::i;:::-;;:::i;4378:174:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;955:103:71:-;1036:15;;955:103;;1058:133:174;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1885:126:66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;;;;-1:-1:-1;;;;;673:6:177;601:85;;2412:136:66;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2654:736::-;;;;;;:::i;:::-;;:::i;1419:189:177:-;;;;;;:::i;:::-;;:::i;419:328:134:-;;;;;;:::i;:::-;;:::i;1140:253:67:-;1287:4;-1:-1:-1;;;;;;1314:32:67;;-1:-1:-1;;;1314:32:67;;:72;;;1350:36;1374:11;1350:23;:36::i;:::-;1307:79;1140:253;-1:-1:-1;;1140:253:67:o;875:86:134:-;923:31;929:7;923:31;;;;;;;;;;;;;-1:-1:-1;;;923:31:134;;;:5;:31::i;:::-;875:86;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;13070:15:202;;;3682:46:66;;;13052:34:202;13102:18;;;13095:34;;;13165:15;;13145:18;;;13138:43;12987:18;;3682:46:66;;;;;;;;3635:104;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;:::-;3535:513;;3461:587;;:::o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;13366:25:202::0;;;;13407:18;;;13400:34;13339:18;;2036:72:174::1;13192:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;4688:25:202;;;4661:18;;2265:31:66;4542:177:202;4119:188:66;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;753:116:134:-;813:49;819:2;823:7;832:4;813:49;;;;;;;;;;;;;-1:-1:-1;;;813:49:134;;;:5;:49::i;:::-;753:116;;:::o;4378:174:66:-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;13933:25:202;;;-1:-1:-1;;;;;13994:32:202;;13974:18;;;13967:60;13906:18;;5357:39:66;13759:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;2412:136:66:-:0;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;2654:736::-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;13070:15:202;;;2878:46:66;;;13052:34:202;13102:18;;;13095:34;;;13165:15;;13145:18;;;13138:43;12987:18;;2878:46:66;12812:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;14230:32:202;;3270:48:66;;;14212:51:202;14279:18;;;14272:34;;;14185:18;;3270:48:66;14038:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;14519:2:202;1499:73:177::1;::::0;::::1;14501:21:202::0;14558:2;14538:18;;;14531:30;14597:34;14577:18;;;14570:62;-1:-1:-1;;;14648:18:202;;;14641:36;14694:19;;1499:73:177::1;14317:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;419:328:134:-:0;3111:19:181;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:181;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:181;1476:19:182;:23;;;3219:66:181;;-1:-1:-1;3268:12:181;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:181;;14926:2:202;3157:201:181;;;14908:21:202;14965:2;14945:18;;;14938:30;15004:34;14984:18;;;14977:62;-1:-1:-1;;;15055:18:202;;;15048:44;15109:19;;3157:201:181;14724:410:202;3157:201:181;3368:12;:16;;-1:-1:-1;;3368:16:181;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:181;;;;;3394:65;598:76:134::1;651:4;657:6;665:8;598:52;:76::i;:::-;684:56;725:14;684:40;:56::i;:::-;3483:14:181::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:181;;;3553:14;;-1:-1:-1;15291:36:202;;3553:14:181;;15279:2:202;15264:18;3553:14:181;;;;;;;3479:99;3101:483;419:328:134;;;;:::o;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;9316:575:66;9394:18;9415:21;9428:7;9415:12;:21::i;:::-;9394:42;-1:-1:-1;9465:10:66;9599:1;9580:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;9611:36:66;;-1:-1:-1;9627:10:66;9639:7;9611:15;:36::i;:::-;-1:-1:-1;;;;;9658:24:66;;;;;;:12;:24;;;;;:40;;9690:7;9658:31;:40::i;:::-;-1:-1:-1;9715:21:66;;;;:12;:21;;;;;;9708:28;;-1:-1:-1;;;;;;9708:28:66;;;9752:64;9728:7;;9715:21;-1:-1:-1;;;;;9752:64:66;;;;;;;9761:8;;9715:21;;9811:4;;9752:64;:::i;:::-;;;;;;;;9827:57;9846:10;9866:1;9870:7;9879:4;9827:18;:57::i;6284:333::-;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;14230:32:202;;6507:42:66;;;14212:51:202;14279:18;;;14272:34;;;14185:18;;6507:42:66;14038:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;;;;;1755:10;1744:21;1736:66;;;;-1:-1:-1;;;1736:66:177;;16205:2:202;1736:66:177;;;16187:21:202;;;16224:18;;;16217:30;16283:34;16263:18;;;16256:62;16335:18;;1736:66:177;16003:356:202;1464:517:31;1563:31;;;1559:416;;1617:26;;-1:-1:-1;;;1617:26:31;;;;;;;;;;;1559:416;1664:33;;;1660:315;;1720:28;;-1:-1:-1;;;1720:28:31;;;;;;;;;;;1660:315;1779:15;;;;:6;:15;;;;;:27;1797:9;1779:15;:27;:::i;:::-;;1854:7;1825:139;1899:3;1879:9;:16;:23;;:71;;1917:33;1932:9;1943:1;1946:3;1917:14;:33::i;:::-;1879:71;;;1905:9;1879:71;1825:139;;;;;;:::i;:::-;;;;;;;;1464:517;;:::o;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;4688:25:202;;;4661:18;;8149:31:66;4542:177:202;4710:273:66;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;1392:312:71:-;1036:15;;1760::66;;1545:17:71;;1561:1;1545:17;:::i;:::-;:36;1541:109;;;1604:35;;-1:-1:-1;;;1604:35:71;;;;;;;;;;;1541:109;1660:37;1672:2;1676:7;1685:5;1692:4;1660:11;:37::i;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;13070:15:202;;;10476:44:66;;;13052:34:202;13102:18;;;13095:34;;;13165:15;;13145:18;;;13138:43;12987:18;;10476:44:66;12812:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;6538:115:199:-;6601:7;6627:19;6635:3;4444:18;;4362:107;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;;;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;2070:6;2090:17;;;-1:-1:-1;;;;;;2090:17:177;;;;;2126:40;;2070:6;;;;;;;2090:17;;2070:6;;2126:40;;;2037:140;1948:235;:::o;7664:124:199:-;7727:16;7762:19;7770:3;7762:7;:19::i;8028:150::-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;824:249:67:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;991:75:67::1;1040:5;1047:7;1056:9;991:48;:75::i;586:224:71:-:0;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;680:15:71::1;699:1;680:20:::0;676:84:::1;;723:26;;-1:-1:-1::0;;;723:26:71::1;;;;;;;;;;;676:84;770:15;:33:::0;586:224::o;6693:933:66:-;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;8346:156:199:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;21218:2:202;9631:50:200;;;21200:21:202;21257:2;21237:18;;;21230:30;-1:-1:-1;;;21276:18:202;;;21269:44;21330:18;;9631:50:200;21016:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;21561:2:202;9691:63:200;;;21543:21:202;21600:2;21580:18;;;21573:30;-1:-1:-1;;;21619:18:202;;;21612:47;21676:18;;9691:63:200;21359:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;8425:700:66;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;4688:25:202;;;4661:18;;8701:33:66;4542:177:202;8658:87:66;8774:10;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;5469:109:199:-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;5818:123::-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;12480:681:66:-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;4888:32:202;;12997:55:66;;;4870:51:202;4843:18;;12997:55:66;4724:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;4888:32:202;;13098::66;;;4870:51:202;4843:18;;13098:32:66;4724:203:202;2113:404:199;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;694:472:31;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;852:42:31::1;884:9;852:31;:42::i;:::-;956:78;231:66:29;971:29:31;;1002:31;;;;;;;;;;;;;-1:-1:-1::0;;;1002:31:31::1;;::::0;956:14:::1;:78::i;:::-;1045:50;476:66:29;1088:5:31::0;1045:14:::1;:50::i;:::-;1105:54;619:66:29;1150:7:31::0;1105:14:::1;:54::i;9286:156:199:-:0;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;4680:811:1;4846:105;;;-1:-1:-1;;;;;;21999:33:202;;4846:105:1;;;;21981:52:202;;;;4846:105:1;;;;;;;;;;21954:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;743:233:175:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;4811:118:199:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:202;;497:180;-1:-1:-1;497:180:202:o;682:173::-;750:20;;-1:-1:-1;;;;;799:31:202;;789:42;;779:70;;845:1;842;835:12;779:70;682:173;;;:::o;860:254::-;928:6;936;989:2;977:9;968:7;964:23;960:32;957:52;;;1005:1;1002;995:12;957:52;1028:29;1047:9;1028:29;:::i;:::-;1018:39;1104:2;1089:18;;;;1076:32;;-1:-1:-1;;;860:254:202:o;1119:127::-;1180:10;1175:3;1171:20;1168:1;1161:31;1211:4;1208:1;1201:15;1235:4;1232:1;1225:15;1251:275;1322:2;1316:9;1387:2;1368:13;;-1:-1:-1;;1364:27:202;1352:40;;-1:-1:-1;;;;;1407:34:202;;1443:22;;;1404:62;1401:88;;;1469:18;;:::i;:::-;1505:2;1498:22;1251:275;;-1:-1:-1;1251:275:202:o;1531:183::-;1591:4;-1:-1:-1;;;;;1616:6:202;1613:30;1610:56;;;1646:18;;:::i;:::-;-1:-1:-1;1691:1:202;1687:14;1703:4;1683:25;;1531:183::o;1719:662::-;1773:5;1826:3;1819:4;1811:6;1807:17;1803:27;1793:55;;1844:1;1841;1834:12;1793:55;1880:6;1867:20;1906:4;1930:60;1946:43;1986:2;1946:43;:::i;:::-;1930:60;:::i;:::-;2024:15;;;2110:1;2106:10;;;;2094:23;;2090:32;;;2055:12;;;;2134:15;;;2131:35;;;2162:1;2159;2152:12;2131:35;2198:2;2190:6;2186:15;2210:142;2226:6;2221:3;2218:15;2210:142;;;2292:17;;2280:30;;2330:12;;;;2243;;2210:142;;;-1:-1:-1;2370:5:202;1719:662;-1:-1:-1;;;;;;1719:662:202:o;2386:186::-;2434:4;-1:-1:-1;;;;;2459:6:202;2456:30;2453:56;;;2489:18;;:::i;:::-;-1:-1:-1;2555:2:202;2534:15;-1:-1:-1;;2530:29:202;2561:4;2526:40;;2386:186::o;2577:462::-;2619:5;2672:3;2665:4;2657:6;2653:17;2649:27;2639:55;;2690:1;2687;2680:12;2639:55;2726:6;2713:20;2757:48;2773:31;2801:2;2773:31;:::i;2757:48::-;2830:2;2821:7;2814:19;2876:3;2869:4;2864:2;2856:6;2852:15;2848:26;2845:35;2842:55;;;2893:1;2890;2883:12;2842:55;2958:2;2951:4;2943:6;2939:17;2932:4;2923:7;2919:18;2906:55;3006:1;2981:16;;;2999:4;2977:27;2970:38;;;;2985:7;2577:462;-1:-1:-1;;;2577:462:202:o;3044:886::-;3096:5;3149:3;3142:4;3134:6;3130:17;3126:27;3116:55;;3167:1;3164;3157:12;3116:55;3203:6;3190:20;3229:4;3253:60;3269:43;3309:2;3269:43;:::i;3253:60::-;3347:15;;;3433:1;3429:10;;;;3417:23;;3413:32;;;3378:12;;;;3457:15;;;3454:35;;;3485:1;3482;3475:12;3454:35;3521:2;3513:6;3509:15;3533:368;3549:6;3544:3;3541:15;3533:368;;;3635:3;3622:17;-1:-1:-1;;;;;3658:11:202;3655:35;3652:125;;;3731:1;3760:2;3756;3749:14;3652:125;3802:56;3854:3;3849:2;3835:11;3827:6;3823:24;3819:33;3802:56;:::i;:::-;3790:69;;-1:-1:-1;3879:12:202;;;;3566;;3533:368;;3935:602;4062:6;4070;4123:2;4111:9;4102:7;4098:23;4094:32;4091:52;;;4139:1;4136;4129:12;4091:52;4179:9;4166:23;-1:-1:-1;;;;;4249:2:202;4241:6;4238:14;4235:34;;;4265:1;4262;4255:12;4235:34;4288:61;4341:7;4332:6;4321:9;4317:22;4288:61;:::i;:::-;4278:71;;4402:2;4391:9;4387:18;4374:32;4358:48;;4431:2;4421:8;4418:16;4415:36;;;4447:1;4444;4437:12;4415:36;;4470:61;4523:7;4512:8;4501:9;4497:24;4470:61;:::i;:::-;4460:71;;;3935:602;;;;;:::o;4932:658::-;5103:2;5155:21;;;5225:13;;5128:18;;;5247:22;;;5074:4;;5103:2;5326:15;;;;5300:2;5285:18;;;5074:4;5369:195;5383:6;5380:1;5377:13;5369:195;;;5448:13;;-1:-1:-1;;;;;5444:39:202;5432:52;;5539:15;;;;5504:12;;;;5480:1;5398:9;5369:195;;;-1:-1:-1;5581:3:202;;4932:658;-1:-1:-1;;;;;;4932:658:202:o;5595:348::-;5679:6;5732:2;5720:9;5711:7;5707:23;5703:32;5700:52;;;5748:1;5745;5738:12;5700:52;5788:9;5775:23;-1:-1:-1;;;;;5813:6:202;5810:30;5807:50;;;5853:1;5850;5843:12;5807:50;5876:61;5929:7;5920:6;5909:9;5905:22;5876:61;:::i;5948:250::-;6033:1;6043:113;6057:6;6054:1;6051:13;6043:113;;;6133:11;;;6127:18;6114:11;;;6107:39;6079:2;6072:10;6043:113;;;-1:-1:-1;;6190:1:202;6172:16;;6165:27;5948:250::o;6203:270::-;6244:3;6282:5;6276:12;6309:6;6304:3;6297:19;6325:76;6394:6;6387:4;6382:3;6378:14;6371:4;6364:5;6360:16;6325:76;:::i;:::-;6455:2;6434:15;-1:-1:-1;;6430:29:202;6421:39;;;;6462:4;6417:50;;6203:270;-1:-1:-1;;6203:270:202:o;6478:800::-;6638:4;6667:2;6707;6696:9;6692:18;6737:2;6726:9;6719:21;6760:6;6795;6789:13;6826:6;6818;6811:22;6864:2;6853:9;6849:18;6842:25;;6926:2;6916:6;6913:1;6909:14;6898:9;6894:30;6890:39;6876:53;;6964:2;6956:6;6952:15;6985:1;6995:254;7009:6;7006:1;7003:13;6995:254;;;7102:2;7098:7;7086:9;7078:6;7074:22;7070:36;7065:3;7058:49;7130:39;7162:6;7153;7147:13;7130:39;:::i;:::-;7120:49;-1:-1:-1;7227:12:202;;;;7192:15;;;;7031:1;7024:9;6995:254;;;-1:-1:-1;7266:6:202;;6478:800;-1:-1:-1;;;;;;;6478:800:202:o;7283:160::-;7348:20;;7404:13;;7397:21;7387:32;;7377:60;;7433:1;7430;7423:12;7448:606;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7830:35;7861:2;7850:9;7846:18;7830:35;:::i;:::-;7820:45;;7916:3;7905:9;7901:19;7888:33;-1:-1:-1;;;;;7936:6:202;7933:30;7930:50;;;7976:1;7973;7966:12;7930:50;7999:49;8040:7;8031:6;8020:9;8016:22;7999:49;:::i;:::-;7989:59;;;7448:606;;;;;;;;:::o;8059:217::-;8206:2;8195:9;8188:21;8169:4;8226:44;8266:2;8255:9;8251:18;8243:6;8226:44;:::i;8281:186::-;8340:6;8393:2;8381:9;8372:7;8368:23;8364:32;8361:52;;;8409:1;8406;8399:12;8361:52;8432:29;8451:9;8432:29;:::i;8472:668::-;8526:5;8579:3;8572:4;8564:6;8560:17;8556:27;8546:55;;8597:1;8594;8587:12;8546:55;8633:6;8620:20;8659:4;8683:60;8699:43;8739:2;8699:43;:::i;8683:60::-;8777:15;;;8863:1;8859:10;;;;8847:23;;8843:32;;;8808:12;;;;8887:15;;;8884:35;;;8915:1;8912;8905:12;8884:35;8951:2;8943:6;8939:15;8963:148;8979:6;8974:3;8971:15;8963:148;;;9045:23;9064:3;9045:23;:::i;:::-;9033:36;;9089:12;;;;8996;;8963:148;;9145:662;9196:5;9249:3;9242:4;9234:6;9230:17;9226:27;9216:55;;9267:1;9264;9257:12;9216:55;9303:6;9290:20;9329:4;9353:60;9369:43;9409:2;9369:43;:::i;9353:60::-;9447:15;;;9533:1;9529:10;;;;9517:23;;9513:32;;;9478:12;;;;9557:15;;;9554:35;;;9585:1;9582;9575:12;9554:35;9621:2;9613:6;9609:15;9633:145;9649:6;9644:3;9641:15;9633:145;;;9715:20;9731:3;9715:20;:::i;:::-;9703:33;;9756:12;;;;9666;;9633:145;;9812:1276;10038:6;10046;10054;10062;10070;10123:3;10111:9;10102:7;10098:23;10094:33;10091:53;;;10140:1;10137;10130:12;10091:53;10180:9;10167:23;-1:-1:-1;;;;;10250:2:202;10242:6;10239:14;10236:34;;;10266:1;10263;10256:12;10236:34;10289:61;10342:7;10333:6;10322:9;10318:22;10289:61;:::i;:::-;10279:71;;10403:2;10392:9;10388:18;10375:32;10359:48;;10432:2;10422:8;10419:16;10416:36;;;10448:1;10445;10438:12;10416:36;10471:63;10526:7;10515:8;10504:9;10500:24;10471:63;:::i;:::-;10461:73;;10587:2;10576:9;10572:18;10559:32;10543:48;;10616:2;10606:8;10603:16;10600:36;;;10632:1;10629;10622:12;10600:36;10655:63;10710:7;10699:8;10688:9;10684:24;10655:63;:::i;:::-;10645:73;;10771:2;10760:9;10756:18;10743:32;10727:48;;10800:2;10790:8;10787:16;10784:36;;;10816:1;10813;10806:12;10784:36;10839:60;10891:7;10880:8;10869:9;10865:24;10839:60;:::i;:::-;10829:70;;10952:3;10941:9;10937:19;10924:33;10908:49;;10982:2;10972:8;10969:16;10966:36;;;10998:1;10995;10988:12;10966:36;;11021:61;11074:7;11063:8;11052:9;11048:24;11021:61;:::i;11093:388::-;11170:6;11178;11231:2;11219:9;11210:7;11206:23;11202:32;11199:52;;;11247:1;11244;11237:12;11199:52;11283:9;11270:23;11260:33;;11344:2;11333:9;11329:18;11316:32;-1:-1:-1;;;;;11363:6:202;11360:30;11357:50;;;11403:1;11400;11393:12;11357:50;11426:49;11467:7;11458:6;11447:9;11443:22;11426:49;:::i;11486:632::-;11657:2;11709:21;;;11779:13;;11682:18;;;11801:22;;;11628:4;;11657:2;11880:15;;;;11854:2;11839:18;;;11628:4;11923:169;11937:6;11934:1;11931:13;11923:169;;;11998:13;;11986:26;;12067:15;;;;12032:12;;;;11959:1;11952:9;11923:169;;12123:684;12229:6;12237;12245;12253;12306:3;12294:9;12285:7;12281:23;12277:33;12274:53;;;12323:1;12320;12313:12;12274:53;12363:9;12350:23;-1:-1:-1;;;;;12433:2:202;12425:6;12422:14;12419:34;;;12449:1;12446;12439:12;12419:34;12472:49;12513:7;12504:6;12493:9;12489:22;12472:49;:::i;:::-;12462:59;;12574:2;12563:9;12559:18;12546:32;12530:48;;12603:2;12593:8;12590:16;12587:36;;;12619:1;12616;12609:12;12587:36;;12642:51;12685:7;12674:8;12663:9;12659:24;12642:51;:::i;:::-;12632:61;;;12712:38;12746:2;12735:9;12731:18;12712:38;:::i;:::-;12123:684;;;;-1:-1:-1;12702:48:202;;12797:2;12782:18;12769:32;;-1:-1:-1;;12123:684:202:o;13445:127::-;13506:10;13501:3;13497:20;13494:1;13487:31;13537:4;13534:1;13527:15;13561:4;13558:1;13551:15;15338:127;15399:10;15394:3;15390:20;15387:1;15380:31;15430:4;15427:1;15420:15;15454:4;15451:1;15444:15;15470:128;15537:9;;;15558:11;;;15555:37;;;15572:18;;:::i;15603:395::-;-1:-1:-1;;;;;15800:32:202;;15782:51;;15876:14;;15869:22;15864:2;15849:18;;15842:50;15928:2;15923;15908:18;;15901:30;;;-1:-1:-1;;15948:44:202;;15973:18;;15965:6;15948:44;:::i;:::-;15940:52;15603:395;-1:-1:-1;;;;;15603:395:202:o;16364:380::-;16443:1;16439:12;;;;16486;;;16507:61;;16561:4;16553:6;16549:17;16539:27;;16507:61;16614:2;16606:6;16603:14;16583:18;16580:38;16577:161;;16660:10;16655:3;16651:20;16648:1;16641:31;16695:4;16692:1;16685:15;16723:4;16720:1;16713:15;16874:544;16975:2;16970:3;16967:11;16964:448;;;17011:1;17036:5;17032:2;17025:17;17081:4;17077:2;17067:19;17151:2;17139:10;17135:19;17132:1;17128:27;17122:4;17118:38;17187:4;17175:10;17172:20;17169:47;;;-1:-1:-1;17210:4:202;17169:47;17265:2;17260:3;17256:12;17253:1;17249:20;17243:4;17239:31;17229:41;;17320:82;17338:2;17331:5;17328:13;17320:82;;;17383:17;;;17364:1;17353:13;17320:82;;17594:1348;17718:3;17712:10;-1:-1:-1;;;;;17737:6:202;17734:30;17731:56;;;17767:18;;:::i;:::-;17796:96;17885:6;17845:38;17877:4;17871:11;17845:38;:::i;:::-;17839:4;17796:96;:::i;:::-;17947:4;;18011:2;18000:14;;18028:1;18023:662;;;;18729:1;18746:6;18743:89;;;-1:-1:-1;18798:19:202;;;18792:26;18743:89;-1:-1:-1;;17551:1:202;17547:11;;;17543:24;17539:29;17529:40;17575:1;17571:11;;;17526:57;18845:81;;17993:943;;18023:662;16821:1;16814:14;;;16858:4;16845:18;;-1:-1:-1;;18059:20:202;;;18176:236;18190:7;18187:1;18184:14;18176:236;;;18279:19;;;18273:26;18258:42;;18371:27;;;;18339:1;18327:14;;;;18206:19;;18176:236;;;18180:3;18440:6;18431:7;18428:19;18425:201;;;18501:19;;;18495:26;-1:-1:-1;;18584:1:202;18580:14;;;18596:3;18576:24;18572:37;18568:42;18553:58;18538:74;;18425:201;-1:-1:-1;;;;;18672:1:202;18656:14;;;18652:22;18639:36;;-1:-1:-1;17594:1348:202:o;18947:125::-;19012:9;;;19033:10;;;19030:36;;;19046:18;;:::i;19077:407::-;19279:2;19261:21;;;19318:2;19298:18;;;19291:30;19357:34;19352:2;19337:18;;19330:62;-1:-1:-1;;;19423:2:202;19408:18;;19401:41;19474:3;19459:19;;19077:407::o;19489:577::-;19702:3;19734:26;19730:31;19803:2;19794:6;19790:2;19786:15;19782:24;19777:3;19770:37;19858:2;19849:6;19845:2;19841:15;19837:24;19832:2;19827:3;19823:12;19816:46;;19892:6;19887:2;19882:3;19878:12;19871:28;19928:6;19922:13;19944:75;20012:6;20007:2;20002:3;19998:12;19991:4;19983:6;19979:17;19944:75;:::i;:::-;20039:16;;;;20057:2;20035:25;;19489:577;-1:-1:-1;;;;;19489:577:202:o;20071:288::-;20246:6;20235:9;20228:25;20289:2;20284;20273:9;20269:18;20262:30;20209:4;20309:44;20349:2;20338:9;20334:18;20326:6;20309:44;:::i;20364:647::-;20443:6;20496:2;20484:9;20475:7;20471:23;20467:32;20464:52;;;20512:1;20509;20502:12;20464:52;20545:9;20539:16;-1:-1:-1;;;;;20570:6:202;20567:30;20564:50;;;20610:1;20607;20600:12;20564:50;20633:22;;20686:4;20678:13;;20674:27;-1:-1:-1;20664:55:202;;20715:1;20712;20705:12;20664:55;20744:2;20738:9;20769:48;20785:31;20813:2;20785:31;:::i;20769:48::-;20840:2;20833:5;20826:17;20880:7;20875:2;20870;20866;20862:11;20858:20;20855:33;20852:53;;;20901:1;20898;20891:12;20852:53;20914:67;20978:2;20973;20966:5;20962:14;20957:2;20953;20949:11;20914:67;:::i;21705:127::-;21766:10;21761:3;21757:20;21754:1;21747:31;21797:4;21794:1;21787:15;21821:4;21818:1;21811:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "burn(bytes32)": "08a1eee1",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "initialize(string,string,address,uint256)": "f542033f",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,bytes32)": "2cfd3005",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "tokenSupplyCap()": "52058d8a",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CappedSupplyCannotMintOverCap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CappedSupplyRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupplyCap\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32)\":{\"details\":\"Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"tokenId\":\"The tokenId operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"tokenSupplyCap()\":{\"details\":\"Returns the number of tokens that can be minted.\",\"returns\":{\"_0\":\"The token max supply\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/Tokens/LSP8CappedSupplyInitTester.sol\":\"LSP8CappedSupplyInitTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol\":{\"keccak256\":\"0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2\",\"dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol\":{\"keccak256\":\"0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338\",\"dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CappedSupplyInitAbstract.sol\":{\"keccak256\":\"0x14d6717cad94fa9473110f3d938b9cee437c4ba73ef2aaf398dc9ca688124c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://900412d68b18c1beca08d6429e4117802bf3f2d9120b5fa51704281f8e2f5599\",\"dweb:/ipfs/QmfDZNp5qqPkHZwyiJV5BKtuLRPWAZ2K1VPQvDqa9s862P\"]},\"contracts/Mocks/Tokens/LSP8CappedSupplyInitTester.sol\":{\"keccak256\":\"0x8223ed268d96627769c3cd361c7f98ad2d3b25c4e0914083b4c9d71c88ccb45f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://998553f41a97afcd15becaacd61a4b66dab13608d94898fe7a80f1d76d48d0e0\",\"dweb:/ipfs/QmYfKUC1cYZEaSDF3GkmCS4HRdLXfMagULwnjHXCTL5HwQ\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol\":{\"keccak256\":\"0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551\",\"dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CappedSupplyCannotMintOverCap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CappedSupplyRequired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupplyCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenSupplyCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeOperator(address,bytes32)": {
            "details": "Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.",
            "params": {
              "operator": "The address to authorize as an operator.",
              "tokenId": "The tokenId operator has access to."
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "tokenSupplyCap()": {
            "details": "Returns the number of tokens that can be minted.",
            "returns": {
              "_0": "The token max supply"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Mocks/Tokens/LSP8CappedSupplyInitTester.sol": "LSP8CappedSupplyInitTester"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol": {
        "keccak256": "0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792",
        "urls": [
          "bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2",
          "dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol": {
        "keccak256": "0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968",
        "urls": [
          "bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338",
          "dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CappedSupplyInitAbstract.sol": {
        "keccak256": "0x14d6717cad94fa9473110f3d938b9cee437c4ba73ef2aaf398dc9ca688124c0d",
        "urls": [
          "bzz-raw://900412d68b18c1beca08d6429e4117802bf3f2d9120b5fa51704281f8e2f5599",
          "dweb:/ipfs/QmfDZNp5qqPkHZwyiJV5BKtuLRPWAZ2K1VPQvDqa9s862P"
        ],
        "license": "MIT"
      },
      "contracts/Mocks/Tokens/LSP8CappedSupplyInitTester.sol": {
        "keccak256": "0x8223ed268d96627769c3cd361c7f98ad2d3b25c4e0914083b4c9d71c88ccb45f",
        "urls": [
          "bzz-raw://998553f41a97afcd15becaacd61a4b66dab13608d94898fe7a80f1d76d48d0e0",
          "dweb:/ipfs/QmYfKUC1cYZEaSDF3GkmCS4HRdLXfMagULwnjHXCTL5HwQ"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol": {
        "keccak256": "0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45",
        "urls": [
          "bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551",
          "dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Mocks/Tokens/LSP8CappedSupplyInitTester.sol",
    "id": 16701,
    "exportedSymbols": {
      "LSP8CappedSupplyInitAbstract": [
        11421
      ],
      "LSP8CappedSupplyInitTester": [
        16700
      ],
      "LSP8IdentifiableDigitalAssetInitAbstract": [
        11104
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:931:134",
    "nodes": [
      {
        "id": 16639,
        "nodeType": "PragmaDirective",
        "src": "33:23:134",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16641,
        "nodeType": "ImportDirective",
        "src": "69:143:134",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16701,
        "sourceUnit": 11105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16640,
              "name": "LSP8IdentifiableDigitalAssetInitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11104,
              "src": "82:40:134",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16643,
        "nodeType": "ImportDirective",
        "src": "213:130:134",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CappedSupplyInitAbstract.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/extensions/LSP8CappedSupplyInitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16701,
        "sourceUnit": 11422,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16642,
              "name": "LSP8CappedSupplyInitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11421,
              "src": "226:28:134",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16700,
        "nodeType": "ContractDefinition",
        "src": "345:618:134",
        "nodes": [
          {
            "id": 16673,
            "nodeType": "FunctionDefinition",
            "src": "419:328:134",
            "nodes": [],
            "body": {
              "id": 16672,
              "nodeType": "Block",
              "src": "588:159:134",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16661,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16647,
                        "src": "651:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 16662,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16649,
                        "src": "657:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 16663,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16651,
                        "src": "665:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16658,
                        "name": "LSP8IdentifiableDigitalAssetInitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11104,
                        "src": "598:40:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP8IdentifiableDigitalAssetInitAbstract_$11104_$",
                          "typeString": "type(contract LSP8IdentifiableDigitalAssetInitAbstract)"
                        }
                      },
                      "id": 16660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "639:11:134",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11082,
                      "src": "598:52:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address)"
                      }
                    },
                    "id": 16664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:76:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16665,
                  "nodeType": "ExpressionStatement",
                  "src": "598:76:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16669,
                        "name": "tokenSupplyCap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16653,
                        "src": "725:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 16666,
                        "name": "LSP8CappedSupplyInitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11421,
                        "src": "684:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP8CappedSupplyInitAbstract_$11421_$",
                          "typeString": "type(contract LSP8CappedSupplyInitAbstract)"
                        }
                      },
                      "id": 16668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "713:11:134",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11376,
                      "src": "684:40:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 16670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "684:56:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16671,
                  "nodeType": "ExpressionStatement",
                  "src": "684:56:134"
                }
              ]
            },
            "functionSelector": "f542033f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16656,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16655,
                  "name": "initializer",
                  "nameLocations": [
                    "576:11:134"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43911,
                  "src": "576:11:134"
                },
                "nodeType": "ModifierInvocation",
                "src": "576:11:134"
              }
            ],
            "name": "initialize",
            "nameLocation": "428:10:134",
            "parameters": {
              "id": 16654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16647,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "462:4:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 16673,
                  "src": "448:18:134",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16649,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "490:6:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 16673,
                  "src": "476:20:134",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16648,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16651,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "514:8:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 16673,
                  "src": "506:16:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:134",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16653,
                  "mutability": "mutable",
                  "name": "tokenSupplyCap",
                  "nameLocation": "540:14:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 16673,
                  "src": "532:22:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "438:122:134"
            },
            "returnParameters": {
              "id": 16657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:0:134"
            },
            "scope": 16700,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 16688,
            "nodeType": "FunctionDefinition",
            "src": "753:116:134",
            "nodes": [],
            "body": {
              "id": 16687,
              "nodeType": "Block",
              "src": "803:66:134",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16681,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16675,
                        "src": "819:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16682,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16677,
                        "src": "823:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "832:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "746f6b656e207072696e74657220676f2062727272",
                        "id": 16684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "838:23:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        },
                        "value": "token printer go brrr"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        }
                      ],
                      "id": 16680,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11420
                      ],
                      "referencedDeclaration": 11420,
                      "src": "813:5:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 16685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:49:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16686,
                  "nodeType": "ExpressionStatement",
                  "src": "813:49:134"
                }
              ]
            },
            "functionSelector": "2cfd3005",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "762:4:134",
            "parameters": {
              "id": 16678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16675,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "775:2:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 16688,
                  "src": "767:10:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:7:134",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16677,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "787:7:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 16688,
                  "src": "779:15:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16676,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "766:29:134"
            },
            "returnParameters": {
              "id": 16679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:134"
            },
            "scope": 16700,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16699,
            "nodeType": "FunctionDefinition",
            "src": "875:86:134",
            "nodes": [],
            "body": {
              "id": 16698,
              "nodeType": "Block",
              "src": "913:48:134",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16694,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16690,
                        "src": "929:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6665656c20746865206275726e",
                        "id": 16695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "938:15:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        },
                        "value": "feel the burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        }
                      ],
                      "id": 16693,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10823,
                      "src": "923:5:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory)"
                      }
                    },
                    "id": 16696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:31:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16697,
                  "nodeType": "ExpressionStatement",
                  "src": "923:31:134"
                }
              ]
            },
            "functionSelector": "08a1eee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "884:4:134",
            "parameters": {
              "id": 16691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16690,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "897:7:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 16699,
                  "src": "889:15:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16689,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "888:17:134"
            },
            "returnParameters": {
              "id": 16692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:0:134"
            },
            "scope": 16700,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16644,
              "name": "LSP8CappedSupplyInitAbstract",
              "nameLocations": [
                "384:28:134"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11421,
              "src": "384:28:134"
            },
            "id": 16645,
            "nodeType": "InheritanceSpecifier",
            "src": "384:28:134"
          }
        ],
        "canonicalName": "LSP8CappedSupplyInitTester",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16700,
          11421,
          11104,
          11044,
          9968,
          4296,
          43546,
          43508,
          43840,
          46531,
          46594,
          43687,
          43991
        ],
        "name": "LSP8CappedSupplyInitTester",
        "nameLocation": "354:26:134",
        "scope": 16701,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          11352,
          11354,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 134
}