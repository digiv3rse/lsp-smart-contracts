{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "tokenURIValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200308738038062003087833981016040819052620000349162000583565b838383828282828282806001600160a01b038116620000a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620000bf81620001d260201b62000bc61760201c565b50620001167feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b8152506200023960201b62000c2b1760201c565b620001507fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b846200023960201b62000c2b1760201c565b6200018a7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b836200023960201b62000c2b1760201c565b505050505050505050620001c87f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e60001b826200028160201b60201c565b5050505062000803565b6000546001600160a01b038281169116146200023657600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505b50565b6000828152600160205260409020620002538282620006da565b50816000805160206200306783398151915282604051620002759190620007a6565b60405180910390a25050565b6200029882826200029c60201b62000c801760201c565b5050565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201620002dd576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa82016200031e57604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020620003388282620006da565b508160008051602062003067833981519152610100835111156200037757620003718360006101006200038860201b62000d681760201c565b62000379565b825b604051620002759190620007a6565b6060816200039881601f620007db565b1015620003d95760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401620000a0565b620003e58284620007db565b845110156200042b5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401620000a0565b6060821580156200044c576040519150600082526020820160405262000498565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015620004875780518352602092830192016200046d565b5050858452601f01601f1916604052505b50949350505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d4578181015183820152602001620004ba565b50506000910152565b60006001600160401b0380841115620004fa57620004fa620004a1565b604051601f8501601f19908116603f01168101908282118183101715620005255762000525620004a1565b816040528093508581528686860111156200053f57600080fd5b6200054f866020830187620004b7565b5050509392505050565b600082601f8301126200056b57600080fd5b6200057c83835160208501620004dd565b9392505050565b600080600080608085870312156200059a57600080fd5b84516001600160401b0380821115620005b257600080fd5b620005c08883890162000559565b95506020870151915080821115620005d757600080fd5b620005e58883890162000559565b604088015190955091506001600160a01b03821682146200060557600080fd5b6060870151919350808211156200061b57600080fd5b508501601f810187136200062e57600080fd5b6200063f87825160208401620004dd565b91505092959194509250565b600181811c908216806200066057607f821691505b6020821081036200068157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620006d557600081815260208120601f850160051c81016020861015620006b05750805b601f850160051c820191505b81811015620006d157828155600101620006bc565b5050505b505050565b81516001600160401b03811115620006f657620006f6620004a1565b6200070e816200070784546200064b565b8462000687565b602080601f8311600181146200074657600084156200072d5750858301515b600019600386901b1c1916600185901b178555620006d1565b600085815260208120601f198616915b82811015620007775788860151825594840194600190910190840162000756565b5085821015620007965787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620007c7816040850160208701620004b7565b601f01601f19169190910160400192915050565b80820180821115620007fd57634e487b7160e01b600052601160045260246000fd5b92915050565b61285480620008136000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f578063a22cb465116100a2578063cf5182ba11610071578063cf5182ba1461042a578063e985e9c51461043d578063f2fde38b14610479578063fe9d93031461048c57600080fd5b8063a22cb465146103d1578063a3b261f2146103e4578063b88d4fde14610404578063c87b56dd1461041757600080fd5b80637f23690c116100de5780637f23690c146103925780638da5cb5b146103a557806394d008ef146103b657806395d89b41146103c957600080fd5b80636352211e1461035157806370a0823114610364578063715018a6146103775780637e87632c1461037f57600080fd5b8063217b22701161018757806349a6078d1161015657806349a6078d146102eb5780634e3e6e9c1461030b578063511b69521461032b57806354f6127f1461033e57600080fd5b8063217b22701461029f57806323b872dd146102b25780632a3654a4146102c557806342842e0e146102d857600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630b0c6d821461026757806314a6e2931461027a57806318160ddd1461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f8366004611cf6565b61049f565b60405190151581526020015b60405180910390f35b61021a6104e5565b6040516102099190611d70565b61023a610235366004611d83565b610512565b6040516001600160a01b039091168152602001610209565b610265610260366004611db8565b610569565b005b610265610275366004611db8565b6105c0565b610265610288366004611fad565b61066d565b6002545b604051908152602001610209565b61023a6102ad366004611d83565b6106f9565b6102656102c0366004612010565b610732565b6101fd6102d3366004611db8565b610752565b6102656102e6366004612010565b61076e565b6102fe6102f9366004611d83565b61078e565b604051610209919061204c565b61031e610319366004612099565b6107b0565b60405161020991906120cd565b61026561033936600461213f565b610863565b61021a61034c366004611d83565b6108b2565b61023a61035f366004611d83565b6108bd565b6102916103723660046121b7565b6108c8565b6102656108e9565b61026561038d366004612296565b6108fd565b6102656103a036600461235a565b6109ec565b6000546001600160a01b031661023a565b6102656103c43660046123de565b610a02565b61021a610a48565b6102656103df366004612437565b610a75565b6103f76103f23660046121b7565b610a80565b604051610209919061246a565b6102656104123660046124a2565b610aa4565b61021a610425366004611d83565b610ab2565b610265610438366004611db8565b610b00565b6101fd61044b366004612509565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6102656104873660046121b7565b610b0a565b61026561049a366004612533565b610b83565b60006001600160e01b031982166380ac58cd60e01b14806104d057506001600160e01b03198216635b5e139f60e01b145b806104df57506104df82610e75565b92915050565b606060006104df7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1610e9a565b60008161051e81610f3c565b60008181526005602052604081209061053682610f74565b90508060000361054b57506000949350505050565b610560610559600183612594565b8390610f7e565b95945050505050565b6105738282610b00565b806001600160a01b038316610587826106f9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006105cb826106f9565b9050336001600160a01b038216811461061657604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661063d57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361065c5750505050565b610667848385610f8a565b50505050565b61067561101b565b80518251146106a457815181516040516321d1e13360e11b81526004810192909252602482015260440161060d565b60005b82518110156106f4576106ec8382815181106106c5576106c56125a7565b60200260200101518383815181106106df576106df6125a7565b6020026020010151611084565b6001016106a7565b505050565b6000818152600360205260408120546001600160a01b0316806104df57604051635747cd1b60e11b81526004810184905260240161060d565b6106f483838360001b60016040518060200160405280600081525061108e565b600061075d82610f3c565b610767838361114a565b9392505050565b6106f483838360001b60006040518060200160405280600081525061108e565b606061079982610f3c565b60008281526005602052604090206104df90611193565b606081516001600160401b038111156107cb576107cb611de2565b6040519080825280602002602001820160405280156107fe57816020015b60608152602001906001900390816107e95790505b50905060005b825181101561085d5761082f838281518110610822576108226125a7565b6020026020010151610e9a565b828281518110610841576108416125a7565b60200260200101819052506108568160010190565b9050610804565b50919050565b3361086e818561114a565b61089d57604051631294d2a960e01b8152600481018590526001600160a01b038216602482015260440161060d565b6108aa868686868661108e565b505050505050565b60606104df82610e9a565b60006104df826106f9565b6001600160a01b03811660009081526004602052604081206104df90610f74565b6108f161101b565b6108fb6000610bc6565b565b8451845181141580610910575083518114155b8061091c575082518114155b80610928575081518114155b15610946576040516393a8311960e01b815260040160405180910390fd5b60005b818110156109e3576109db878281518110610966576109666125a7565b6020026020010151878381518110610980576109806125a7565b602002602001015187848151811061099a5761099a6125a7565b60200260200101518785815181106109b4576109b46125a7565b60200260200101518786815181106109ce576109ce6125a7565b6020026020010151610863565b600101610949565b50505050505050565b6109f461101b565b6109fe8282611084565b5050565b610667848460001b600185858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111a092505050565b606060006104df7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756610e9a565b6109fe3383836111ea565b6001600160a01b03811660009081526004602052604090206060906104df906112c8565b61066784848460008561108e565b60606000610adf7f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e610e9a565b905060006024905060006105608383848651610afb9190612594565b610d68565b61057382826112d3565b610b1261101b565b6001600160a01b038116610b775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060d565b610b8081610bc6565b50565b6106f48360001b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506113fc92505050565b6000546001600160a01b03828116911614610b8057600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000828152600160205260409020610c438282612637565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610c749190611d70565b60405180910390a25050565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610cc0576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610d0057604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610d188282612637565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610d5957610d54836000610100610d68565b610d5b565b825b604051610c749190611d70565b606081610d7681601f6126f6565b1015610db55760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161060d565b610dbf82846126f6565b84511015610e035760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161060d565b606082158015610e225760405191506000825260208201604052610e6c565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610e5b578051835260209283019201610e43565b5050858452601f01601f1916604052505b50949350505050565b60006001600160e01b0319821663622e7a0160e01b14806104df57506104df82611450565b6000818152600160205260409020805460609190610eb7906125bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee3906125bd565b8015610f305780601f10610f0557610100808354040283529160200191610f30565b820191906000526020600020905b815481529060010190602001808311610f1357829003601f168201915b50505050509050919050565b6000818152600360205260409020546001600160a01b0316610b8057604051635747cd1b60e11b81526004810182905260240161060d565b60006104df825490565b60006107678383611485565b6000818152600560205260408120610fa290856114af565b905080610fd4576040516312a8c6a360e21b81526001600160a01b03851660048201526024810183905260440161060d565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b3361102e6000546001600160a01b031690565b6001600160a01b0316146108fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060d565b6109fe8282610c80565b6001600160a01b03851660009081526007602090815260408083203380855292529091205460ff161580156110ca57506110c8818561114a565b155b156110fa57604051631294d2a960e01b8152600481018590526001600160a01b038216602482015260440161060d565b61110786868686866114c4565b60405184906001600160a01b0380881691908916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050505050565b600080611156836106f9565b9050806001600160a01b0316846001600160a01b0316148061118b5750600083815260056020526040902061118b908561164e565b949350505050565b6060600061076783611670565b6111ac848484846116cb565b60405183906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b816001600160a01b0316836001600160a01b03160361125b5760405162461bcd60e51b815260206004820152602760248201527f4c535038436f6d70617469626c654552433732313a20617070726f766520746f6044820152661031b0b63632b960c91b606482015260840161060d565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606104df82611670565b60006112de826106f9565b9050336001600160a01b038216811461132457604051632d938f5160e11b81526001600160a01b038084166004830152602482018590528216604482015260640161060d565b6001600160a01b03841661134b57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361136a5750505050565b600083815260056020526040812061138290866117e5565b9050806113b4576040516314ec4d6d60e31b81526001600160a01b03861660048201526024810185905260440161060d565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b6000611407836106f9565b905061141383836117fa565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b60006001600160e01b03198216631c537ddf60e21b14806104df57506301ffc9a760e01b6001600160e01b03198316146104df565b600082600001828154811061149c5761149c6125a7565b9060005260206000200154905092915050565b6000610767836001600160a01b0384166118c0565b836001600160a01b0316856001600160a01b0316036114f657604051635d67d6c160e01b815260040160405180910390fd5b6000611501846106f9565b9050856001600160a01b0316816001600160a01b03161461154f57604051632d938f5160e11b81526001600160a01b038083166004830152602482018690528716604482015260640161060d565b6001600160a01b038516611576576040516324ecef4d60e01b815260040160405180910390fd5b3361158187866119b3565b6001600160a01b03871660009081526004602052604090206115a390866119fa565b506001600160a01b03861660009081526004602052604090206115c69086611a06565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061162d9086908a908a90612709565b60405180910390a461164187878786611a12565b6109e38787878787611ae6565b6001600160a01b03811660009081526001830160205260408120541515610767565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f3057602002820191906000526020600020905b8154815260200190600101908083116116ac5750505050509050919050565b6001600160a01b0384166116f2576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561172b576040516334c7b51160e01b81526004810184905260240161060d565b3360016002600082825461173f91906126f6565b90915550506001600160a01b03851660009081526004602052604090206117669085611a06565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906117c890869089908990612709565b60405180910390a46117de600086868686611ae6565b5050505050565b6000610767836001600160a01b038416611c1e565b6000611805836106f9565b90503360016002600082825461181b9190612594565b9091555061182b905082856119b3565b6001600160a01b038216600090815260046020526040902061184d90856119fa565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906118ab90869085908a90612709565b60405180910390a46106678260008686611a12565b600081815260018301602052604081205480156119a95760006118e4600183612594565b85549091506000906118f890600190612594565b905081811461195d576000866000018281548110611918576119186125a7565b906000526020600020015490508087600001848154811061193b5761193b6125a7565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061196e5761196e612735565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104df565b60009150506104df565b6000818152600560205260408120906119cb82610f74565b905060005b818110156117de5760006119e48482610f7e565b90506119f1818787610f8a565b506001016119d0565b600061076783836118c0565b60006107678383611c1e565b611a2384631aed5a8560e21b611c6d565b1561066757600084848484604051602001611a41949392919061274b565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611a9f907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401612798565b6000604051808303816000875af1158015611abe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108aa91908101906127b1565b611af784631aed5a8560e21b611c6d565b15611bc157600085858584604051602001611b15949392919061274b565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611b73907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612798565b6000604051808303816000875af1158015611b92573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bba91908101906127b1565b50506117de565b816117de576001600160a01b0384163b15611bfa57604051634349776d60e01b81526001600160a01b038516600482015260240161060d565b604051630317313760e01b81526001600160a01b038516600482015260240161060d565b6000818152600183016020526040812054611c65575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104df565b5060006104df565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611cdf575060208210155b8015611ceb5750600081115b979650505050505050565b600060208284031215611d0857600080fd5b81356001600160e01b03198116811461076757600080fd5b60005b83811015611d3b578181015183820152602001611d23565b50506000910152565b60008151808452611d5c816020860160208601611d20565b601f01601f19169290920160200192915050565b6020815260006107676020830184611d44565b600060208284031215611d9557600080fd5b5035919050565b80356001600160a01b0381168114611db357600080fd5b919050565b60008060408385031215611dcb57600080fd5b611dd483611d9c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611e2057611e20611de2565b604052919050565b60006001600160401b03821115611e4157611e41611de2565b5060051b60200190565b600082601f830112611e5c57600080fd5b81356020611e71611e6c83611e28565b611df8565b82815260059290921b84018101918181019086841115611e9057600080fd5b8286015b84811015611eab5780358352918301918301611e94565b509695505050505050565b60006001600160401b03821115611ecf57611ecf611de2565b50601f01601f191660200190565b600082601f830112611eee57600080fd5b8135611efc611e6c82611eb6565b818152846020838601011115611f1157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611f3f57600080fd5b81356020611f4f611e6c83611e28565b82815260059290921b84018101918181019086841115611f6e57600080fd5b8286015b84811015611eab5780356001600160401b03811115611f915760008081fd5b611f9f8986838b0101611edd565b845250918301918301611f72565b60008060408385031215611fc057600080fd5b82356001600160401b0380821115611fd757600080fd5b611fe386838701611e4b565b93506020850135915080821115611ff957600080fd5b5061200685828601611f2e565b9150509250929050565b60008060006060848603121561202557600080fd5b61202e84611d9c565b925061203c60208501611d9c565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561208d5783516001600160a01b031683529284019291840191600101612068565b50909695505050505050565b6000602082840312156120ab57600080fd5b81356001600160401b038111156120c157600080fd5b61118b84828501611e4b565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561212257603f19888603018452612110858351611d44565b945092850192908501906001016120f4565b5092979650505050505050565b80358015158114611db357600080fd5b600080600080600060a0868803121561215757600080fd5b61216086611d9c565b945061216e60208701611d9c565b9350604086013592506121836060870161212f565b915060808601356001600160401b0381111561219e57600080fd5b6121aa88828901611edd565b9150509295509295909350565b6000602082840312156121c957600080fd5b61076782611d9c565b600082601f8301126121e357600080fd5b813560206121f3611e6c83611e28565b82815260059290921b8401810191818101908684111561221257600080fd5b8286015b84811015611eab5761222781611d9c565b8352918301918301612216565b600082601f83011261224557600080fd5b81356020612255611e6c83611e28565b82815260059290921b8401810191818101908684111561227457600080fd5b8286015b84811015611eab576122898161212f565b8352918301918301612278565b600080600080600060a086880312156122ae57600080fd5b85356001600160401b03808211156122c557600080fd5b6122d189838a016121d2565b965060208801359150808211156122e757600080fd5b6122f389838a016121d2565b9550604088013591508082111561230957600080fd5b61231589838a01611e4b565b9450606088013591508082111561232b57600080fd5b61233789838a01612234565b9350608088013591508082111561234d57600080fd5b506121aa88828901611f2e565b6000806040838503121561236d57600080fd5b8235915060208301356001600160401b0381111561238a57600080fd5b61200685828601611edd565b60008083601f8401126123a857600080fd5b5081356001600160401b038111156123bf57600080fd5b6020830191508360208285010111156123d757600080fd5b9250929050565b600080600080606085870312156123f457600080fd5b6123fd85611d9c565b93506020850135925060408501356001600160401b0381111561241f57600080fd5b61242b87828801612396565b95989497509550505050565b6000806040838503121561244a57600080fd5b61245383611d9c565b91506124616020840161212f565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561208d57835183529284019291840191600101612486565b600080600080608085870312156124b857600080fd5b6124c185611d9c565b93506124cf60208601611d9c565b92506040850135915060608501356001600160401b038111156124f157600080fd5b6124fd87828801611edd565b91505092959194509250565b6000806040838503121561251c57600080fd5b61252583611d9c565b915061246160208401611d9c565b60008060006040848603121561254857600080fd5b8335925060208401356001600160401b0381111561256557600080fd5b61257186828701612396565b9497909650939450505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104df576104df61257e565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806125d157607f821691505b60208210810361085d57634e487b7160e01b600052602260045260246000fd5b601f8211156106f457600081815260208120601f850160051c810160208610156126185750805b601f850160051c820191505b818110156108aa57828155600101612624565b81516001600160401b0381111561265057612650611de2565b6126648161265e84546125bd565b846125f1565b602080601f83116001811461269957600084156126815750858301515b600019600386901b1c1916600185901b1785556108aa565b600085815260208120601f198616915b828110156126c8578886015182559484019460019091019084016126a9565b50858210156126e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156104df576104df61257e565b6001600160a01b0384168152821515602082015260606040820181905260009061056090830184611d44565b634e487b7160e01b600052603160045260246000fd5b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251612788816048850160208701611d20565b9190910160480195945050505050565b82815260406020820152600061118b6040830184611d44565b6000602082840312156127c357600080fd5b81516001600160401b038111156127d957600080fd5b8201601f810184136127ea57600080fd5b80516127f8611e6c82611eb6565b81815285602083850101111561280d57600080fd5b610560826020830160208601611d2056fea26469706673582212202c879019479041f595edc4e41eddd84fdf542db029b68f2bbec1ddbe07882a5b64736f6c63430008110033ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2",
    "sourceMap": "404:643:136:-:0;;;470:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;629:4;635:6;643:8;629:4;635:6;643:8;629:4;635:6;643:8;;-1:-1:-1;;;;;812:22:173;;804:73;;;;-1:-1:-1;;;804:73:173;;2525:2:202;804:73:173;;;2507:21:202;2564:2;2544:18;;;2537:30;2603:34;2583:18;;;2576:62;-1:-1:-1;;;2654:18:202;;;2647:36;2700:19;;804:73:173;;;;;;;;;887:32;910:8;887:22;;;;;:32;;:::i;:::-;764:162;1016:78:30::1;231:66:29;1031:29:30;;1062:31;;;;;;;;;;;;;-1:-1:-1::0;;;1062:31:30::1;;::::0;1016:14:::1;;;;;:78;;:::i;:::-;1105:50;476:66:29;1120:20:30;;1148:5;1105:14;;;;;:50;;:::i;:::-;1165:54;619:66:29;1180:22:30;;1210:7;1165:14;;;;;:54;;:::i;:::-;827:399:::0;;;967:159:65;;;1723:163:72;;;663:43:136::1;1030:66:29;672:18:136;;692:13;663:8;;;:43;;:::i;:::-;470:243:::0;;;;404:643;;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;2012:165;1948:235;:::o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;-1:-1:-1;;;;;;;;;;;2562:9:174;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;7872:187:72:-;8026:26;8041:3;8046:5;8026:14;;;;;:26;;:::i;:::-;7872:187;;:::o;1524:517:30:-;1623:31;;;1619:416;;1677:26;;-1:-1:-1;;;1677:26:30;;;;;;;;;;;1619:416;1724:33;;;1720:315;;1780:28;;-1:-1:-1;;;1780:28:30;;;;;;;;;;;1720:315;1839:15;;;;:6;:15;;;;;:27;1857:9;1839:15;:27;:::i;:::-;;1914:7;-1:-1:-1;;;;;;;;;;;1959:3:30;1939:9;:16;:23;;:71;;1977:33;1992:9;2003:1;2006:3;1977:14;;;;;:33;;:::i;:::-;1939:71;;;1965:9;1939:71;1885:139;;;;;;:::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;6141:2:202;9631:50:200;;;6123:21:202;6180:2;6160:18;;;6153:30;-1:-1:-1;;;6199:18:202;;;6192:44;6253:18;;9631:50:200;5939:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;6484:2:202;9691:63:200;;;6466:21:202;6523:2;6503:18;;;6496:30;-1:-1:-1;;;6542:18:202;;;6535:47;6599:18;;9691:63:200;6282:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;14:127:202:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:202;370:16;;363:27;146:250::o;401:615::-;477:5;-1:-1:-1;;;;;537:14:202;;;534:40;;;554:18;;:::i;:::-;629:2;623:9;597:2;683:15;;-1:-1:-1;;679:24:202;;;705:2;675:33;671:42;659:55;;;729:18;;;749:22;;;726:46;723:72;;;775:18;;:::i;:::-;815:10;811:2;804:22;844:6;835:15;;874:6;866;859:22;914:3;905:6;900:3;896:16;893:25;890:45;;;931:1;928;921:12;890:45;944:66;1003:6;996:4;988:6;984:17;979:3;944:66;:::i;:::-;;;;401:615;;;;;:::o;1021:237::-;1075:5;1128:3;1121:4;1113:6;1109:17;1105:27;1095:55;;1146:1;1143;1136:12;1095:55;1168:84;1248:3;1239:6;1233:13;1226:4;1218:6;1214:17;1168:84;:::i;:::-;1159:93;1021:237;-1:-1:-1;;;1021:237:202:o;1263:1055::-;1389:6;1397;1405;1413;1466:3;1454:9;1445:7;1441:23;1437:33;1434:53;;;1483:1;1480;1473:12;1434:53;1510:16;;-1:-1:-1;;;;;1575:14:202;;;1572:34;;;1602:1;1599;1592:12;1572:34;1625:61;1678:7;1669:6;1658:9;1654:22;1625:61;:::i;:::-;1615:71;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1906:2;1891:18;;1885:25;1790:73;;-1:-1:-1;1885:25:202;-1:-1:-1;;;;;;1939:31:202;;1929:42;;1919:70;;1985:1;1982;1975:12;1919:70;2059:2;2044:18;;2038:25;2008:5;;-1:-1:-1;2075:16:202;;;2072:36;;;2104:1;2101;2094:12;2072:36;-1:-1:-1;2127:24:202;;2182:4;2174:13;;2170:27;-1:-1:-1;2160:55:202;;2211:1;2208;2201:12;2160:55;2234:78;2304:7;2299:2;2293:9;2288:2;2284;2280:11;2234:78;:::i;:::-;2224:88;;;1263:1055;;;;;;;:::o;2730:380::-;2809:1;2805:12;;;;2852;;;2873:61;;2927:4;2919:6;2915:17;2905:27;;2873:61;2980:2;2972:6;2969:14;2949:18;2946:38;2943:161;;3026:10;3021:3;3017:20;3014:1;3007:31;3061:4;3058:1;3051:15;3089:4;3086:1;3079:15;2943:161;;2730:380;;;:::o;3240:544::-;3341:2;3336:3;3333:11;3330:448;;;3377:1;3402:5;3398:2;3391:17;3447:4;3443:2;3433:19;3517:2;3505:10;3501:19;3498:1;3494:27;3488:4;3484:38;3553:4;3541:10;3538:20;3535:47;;;-1:-1:-1;3576:4:202;3535:47;3631:2;3626:3;3622:12;3619:1;3615:20;3609:4;3605:31;3595:41;;3686:82;3704:2;3697:5;3694:13;3686:82;;;3749:17;;;3730:1;3719:13;3686:82;;;3690:3;;;3330:448;3240:544;;;:::o;3960:1348::-;4078:10;;-1:-1:-1;;;;;4100:30:202;;4097:56;;;4133:18;;:::i;:::-;4162:96;4251:6;4211:38;4243:4;4237:11;4211:38;:::i;:::-;4205:4;4162:96;:::i;:::-;4313:4;;4377:2;4366:14;;4394:1;4389:662;;;;5095:1;5112:6;5109:89;;;-1:-1:-1;5164:19:202;;;5158:26;5109:89;-1:-1:-1;;3917:1:202;3913:11;;;3909:24;3905:29;3895:40;3941:1;3937:11;;;3892:57;5211:81;;4359:943;;4389:662;3187:1;3180:14;;;3224:4;3211:18;;-1:-1:-1;;4425:20:202;;;4542:236;4556:7;4553:1;4550:14;4542:236;;;4645:19;;;4639:26;4624:42;;4737:27;;;;4705:1;4693:14;;;;4572:19;;4542:236;;;4546:3;4806:6;4797:7;4794:19;4791:201;;;4867:19;;;4861:26;-1:-1:-1;;4950:1:202;4946:14;;;4962:3;4942:24;4938:37;4934:42;4919:58;4904:74;;4791:201;-1:-1:-1;;;;;5038:1:202;5022:14;;;5018:22;5005:36;;-1:-1:-1;3960:1348:202:o;5313:394::-;5460:2;5449:9;5442:21;5423:4;5492:6;5486:13;5535:6;5530:2;5519:9;5515:18;5508:34;5551:79;5623:6;5618:2;5607:9;5603:18;5598:2;5590:6;5586:15;5551:79;:::i;:::-;5691:2;5670:15;-1:-1:-1;;5666:29:202;5651:45;;;;5698:2;5647:54;;5313:394;-1:-1:-1;;5313:394:202:o;5712:222::-;5777:9;;;5798:10;;;5795:133;;;5850:10;5845:3;5841:20;5838:1;5831:31;5885:4;5882:1;5875:15;5913:4;5910:1;5903:15;5795:133;5712:222;;;;:::o;6282:341::-;404:643:136;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f578063a22cb465116100a2578063cf5182ba11610071578063cf5182ba1461042a578063e985e9c51461043d578063f2fde38b14610479578063fe9d93031461048c57600080fd5b8063a22cb465146103d1578063a3b261f2146103e4578063b88d4fde14610404578063c87b56dd1461041757600080fd5b80637f23690c116100de5780637f23690c146103925780638da5cb5b146103a557806394d008ef146103b657806395d89b41146103c957600080fd5b80636352211e1461035157806370a0823114610364578063715018a6146103775780637e87632c1461037f57600080fd5b8063217b22701161018757806349a6078d1161015657806349a6078d146102eb5780634e3e6e9c1461030b578063511b69521461032b57806354f6127f1461033e57600080fd5b8063217b22701461029f57806323b872dd146102b25780632a3654a4146102c557806342842e0e146102d857600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630b0c6d821461026757806314a6e2931461027a57806318160ddd1461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f8366004611cf6565b61049f565b60405190151581526020015b60405180910390f35b61021a6104e5565b6040516102099190611d70565b61023a610235366004611d83565b610512565b6040516001600160a01b039091168152602001610209565b610265610260366004611db8565b610569565b005b610265610275366004611db8565b6105c0565b610265610288366004611fad565b61066d565b6002545b604051908152602001610209565b61023a6102ad366004611d83565b6106f9565b6102656102c0366004612010565b610732565b6101fd6102d3366004611db8565b610752565b6102656102e6366004612010565b61076e565b6102fe6102f9366004611d83565b61078e565b604051610209919061204c565b61031e610319366004612099565b6107b0565b60405161020991906120cd565b61026561033936600461213f565b610863565b61021a61034c366004611d83565b6108b2565b61023a61035f366004611d83565b6108bd565b6102916103723660046121b7565b6108c8565b6102656108e9565b61026561038d366004612296565b6108fd565b6102656103a036600461235a565b6109ec565b6000546001600160a01b031661023a565b6102656103c43660046123de565b610a02565b61021a610a48565b6102656103df366004612437565b610a75565b6103f76103f23660046121b7565b610a80565b604051610209919061246a565b6102656104123660046124a2565b610aa4565b61021a610425366004611d83565b610ab2565b610265610438366004611db8565b610b00565b6101fd61044b366004612509565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6102656104873660046121b7565b610b0a565b61026561049a366004612533565b610b83565b60006001600160e01b031982166380ac58cd60e01b14806104d057506001600160e01b03198216635b5e139f60e01b145b806104df57506104df82610e75565b92915050565b606060006104df7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1610e9a565b60008161051e81610f3c565b60008181526005602052604081209061053682610f74565b90508060000361054b57506000949350505050565b610560610559600183612594565b8390610f7e565b95945050505050565b6105738282610b00565b806001600160a01b038316610587826106f9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006105cb826106f9565b9050336001600160a01b038216811461061657604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661063d57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361065c5750505050565b610667848385610f8a565b50505050565b61067561101b565b80518251146106a457815181516040516321d1e13360e11b81526004810192909252602482015260440161060d565b60005b82518110156106f4576106ec8382815181106106c5576106c56125a7565b60200260200101518383815181106106df576106df6125a7565b6020026020010151611084565b6001016106a7565b505050565b6000818152600360205260408120546001600160a01b0316806104df57604051635747cd1b60e11b81526004810184905260240161060d565b6106f483838360001b60016040518060200160405280600081525061108e565b600061075d82610f3c565b610767838361114a565b9392505050565b6106f483838360001b60006040518060200160405280600081525061108e565b606061079982610f3c565b60008281526005602052604090206104df90611193565b606081516001600160401b038111156107cb576107cb611de2565b6040519080825280602002602001820160405280156107fe57816020015b60608152602001906001900390816107e95790505b50905060005b825181101561085d5761082f838281518110610822576108226125a7565b6020026020010151610e9a565b828281518110610841576108416125a7565b60200260200101819052506108568160010190565b9050610804565b50919050565b3361086e818561114a565b61089d57604051631294d2a960e01b8152600481018590526001600160a01b038216602482015260440161060d565b6108aa868686868661108e565b505050505050565b60606104df82610e9a565b60006104df826106f9565b6001600160a01b03811660009081526004602052604081206104df90610f74565b6108f161101b565b6108fb6000610bc6565b565b8451845181141580610910575083518114155b8061091c575082518114155b80610928575081518114155b15610946576040516393a8311960e01b815260040160405180910390fd5b60005b818110156109e3576109db878281518110610966576109666125a7565b6020026020010151878381518110610980576109806125a7565b602002602001015187848151811061099a5761099a6125a7565b60200260200101518785815181106109b4576109b46125a7565b60200260200101518786815181106109ce576109ce6125a7565b6020026020010151610863565b600101610949565b50505050505050565b6109f461101b565b6109fe8282611084565b5050565b610667848460001b600185858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111a092505050565b606060006104df7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756610e9a565b6109fe3383836111ea565b6001600160a01b03811660009081526004602052604090206060906104df906112c8565b61066784848460008561108e565b60606000610adf7f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e610e9a565b905060006024905060006105608383848651610afb9190612594565b610d68565b61057382826112d3565b610b1261101b565b6001600160a01b038116610b775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060d565b610b8081610bc6565b50565b6106f48360001b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506113fc92505050565b6000546001600160a01b03828116911614610b8057600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000828152600160205260409020610c438282612637565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610c749190611d70565b60405180910390a25050565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610cc0576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610d0057604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610d188282612637565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610d5957610d54836000610100610d68565b610d5b565b825b604051610c749190611d70565b606081610d7681601f6126f6565b1015610db55760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161060d565b610dbf82846126f6565b84511015610e035760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161060d565b606082158015610e225760405191506000825260208201604052610e6c565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610e5b578051835260209283019201610e43565b5050858452601f01601f1916604052505b50949350505050565b60006001600160e01b0319821663622e7a0160e01b14806104df57506104df82611450565b6000818152600160205260409020805460609190610eb7906125bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee3906125bd565b8015610f305780601f10610f0557610100808354040283529160200191610f30565b820191906000526020600020905b815481529060010190602001808311610f1357829003601f168201915b50505050509050919050565b6000818152600360205260409020546001600160a01b0316610b8057604051635747cd1b60e11b81526004810182905260240161060d565b60006104df825490565b60006107678383611485565b6000818152600560205260408120610fa290856114af565b905080610fd4576040516312a8c6a360e21b81526001600160a01b03851660048201526024810183905260440161060d565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b3361102e6000546001600160a01b031690565b6001600160a01b0316146108fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060d565b6109fe8282610c80565b6001600160a01b03851660009081526007602090815260408083203380855292529091205460ff161580156110ca57506110c8818561114a565b155b156110fa57604051631294d2a960e01b8152600481018590526001600160a01b038216602482015260440161060d565b61110786868686866114c4565b60405184906001600160a01b0380881691908916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050505050565b600080611156836106f9565b9050806001600160a01b0316846001600160a01b0316148061118b5750600083815260056020526040902061118b908561164e565b949350505050565b6060600061076783611670565b6111ac848484846116cb565b60405183906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b816001600160a01b0316836001600160a01b03160361125b5760405162461bcd60e51b815260206004820152602760248201527f4c535038436f6d70617469626c654552433732313a20617070726f766520746f6044820152661031b0b63632b960c91b606482015260840161060d565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606104df82611670565b60006112de826106f9565b9050336001600160a01b038216811461132457604051632d938f5160e11b81526001600160a01b038084166004830152602482018590528216604482015260640161060d565b6001600160a01b03841661134b57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361136a5750505050565b600083815260056020526040812061138290866117e5565b9050806113b4576040516314ec4d6d60e31b81526001600160a01b03861660048201526024810185905260440161060d565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b6000611407836106f9565b905061141383836117fa565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b60006001600160e01b03198216631c537ddf60e21b14806104df57506301ffc9a760e01b6001600160e01b03198316146104df565b600082600001828154811061149c5761149c6125a7565b9060005260206000200154905092915050565b6000610767836001600160a01b0384166118c0565b836001600160a01b0316856001600160a01b0316036114f657604051635d67d6c160e01b815260040160405180910390fd5b6000611501846106f9565b9050856001600160a01b0316816001600160a01b03161461154f57604051632d938f5160e11b81526001600160a01b038083166004830152602482018690528716604482015260640161060d565b6001600160a01b038516611576576040516324ecef4d60e01b815260040160405180910390fd5b3361158187866119b3565b6001600160a01b03871660009081526004602052604090206115a390866119fa565b506001600160a01b03861660009081526004602052604090206115c69086611a06565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061162d9086908a908a90612709565b60405180910390a461164187878786611a12565b6109e38787878787611ae6565b6001600160a01b03811660009081526001830160205260408120541515610767565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f3057602002820191906000526020600020905b8154815260200190600101908083116116ac5750505050509050919050565b6001600160a01b0384166116f2576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561172b576040516334c7b51160e01b81526004810184905260240161060d565b3360016002600082825461173f91906126f6565b90915550506001600160a01b03851660009081526004602052604090206117669085611a06565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906117c890869089908990612709565b60405180910390a46117de600086868686611ae6565b5050505050565b6000610767836001600160a01b038416611c1e565b6000611805836106f9565b90503360016002600082825461181b9190612594565b9091555061182b905082856119b3565b6001600160a01b038216600090815260046020526040902061184d90856119fa565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906118ab90869085908a90612709565b60405180910390a46106678260008686611a12565b600081815260018301602052604081205480156119a95760006118e4600183612594565b85549091506000906118f890600190612594565b905081811461195d576000866000018281548110611918576119186125a7565b906000526020600020015490508087600001848154811061193b5761193b6125a7565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061196e5761196e612735565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104df565b60009150506104df565b6000818152600560205260408120906119cb82610f74565b905060005b818110156117de5760006119e48482610f7e565b90506119f1818787610f8a565b506001016119d0565b600061076783836118c0565b60006107678383611c1e565b611a2384631aed5a8560e21b611c6d565b1561066757600084848484604051602001611a41949392919061274b565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611a9f907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401612798565b6000604051808303816000875af1158015611abe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108aa91908101906127b1565b611af784631aed5a8560e21b611c6d565b15611bc157600085858584604051602001611b15949392919061274b565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611b73907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612798565b6000604051808303816000875af1158015611b92573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bba91908101906127b1565b50506117de565b816117de576001600160a01b0384163b15611bfa57604051634349776d60e01b81526001600160a01b038516600482015260240161060d565b604051630317313760e01b81526001600160a01b038516600482015260240161060d565b6000818152600183016020526040812054611c65575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104df565b5060006104df565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611cdf575060208210155b8015611ceb5750600081115b979650505050505050565b600060208284031215611d0857600080fd5b81356001600160e01b03198116811461076757600080fd5b60005b83811015611d3b578181015183820152602001611d23565b50506000910152565b60008151808452611d5c816020860160208601611d20565b601f01601f19169290920160200192915050565b6020815260006107676020830184611d44565b600060208284031215611d9557600080fd5b5035919050565b80356001600160a01b0381168114611db357600080fd5b919050565b60008060408385031215611dcb57600080fd5b611dd483611d9c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611e2057611e20611de2565b604052919050565b60006001600160401b03821115611e4157611e41611de2565b5060051b60200190565b600082601f830112611e5c57600080fd5b81356020611e71611e6c83611e28565b611df8565b82815260059290921b84018101918181019086841115611e9057600080fd5b8286015b84811015611eab5780358352918301918301611e94565b509695505050505050565b60006001600160401b03821115611ecf57611ecf611de2565b50601f01601f191660200190565b600082601f830112611eee57600080fd5b8135611efc611e6c82611eb6565b818152846020838601011115611f1157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611f3f57600080fd5b81356020611f4f611e6c83611e28565b82815260059290921b84018101918181019086841115611f6e57600080fd5b8286015b84811015611eab5780356001600160401b03811115611f915760008081fd5b611f9f8986838b0101611edd565b845250918301918301611f72565b60008060408385031215611fc057600080fd5b82356001600160401b0380821115611fd757600080fd5b611fe386838701611e4b565b93506020850135915080821115611ff957600080fd5b5061200685828601611f2e565b9150509250929050565b60008060006060848603121561202557600080fd5b61202e84611d9c565b925061203c60208501611d9c565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561208d5783516001600160a01b031683529284019291840191600101612068565b50909695505050505050565b6000602082840312156120ab57600080fd5b81356001600160401b038111156120c157600080fd5b61118b84828501611e4b565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561212257603f19888603018452612110858351611d44565b945092850192908501906001016120f4565b5092979650505050505050565b80358015158114611db357600080fd5b600080600080600060a0868803121561215757600080fd5b61216086611d9c565b945061216e60208701611d9c565b9350604086013592506121836060870161212f565b915060808601356001600160401b0381111561219e57600080fd5b6121aa88828901611edd565b9150509295509295909350565b6000602082840312156121c957600080fd5b61076782611d9c565b600082601f8301126121e357600080fd5b813560206121f3611e6c83611e28565b82815260059290921b8401810191818101908684111561221257600080fd5b8286015b84811015611eab5761222781611d9c565b8352918301918301612216565b600082601f83011261224557600080fd5b81356020612255611e6c83611e28565b82815260059290921b8401810191818101908684111561227457600080fd5b8286015b84811015611eab576122898161212f565b8352918301918301612278565b600080600080600060a086880312156122ae57600080fd5b85356001600160401b03808211156122c557600080fd5b6122d189838a016121d2565b965060208801359150808211156122e757600080fd5b6122f389838a016121d2565b9550604088013591508082111561230957600080fd5b61231589838a01611e4b565b9450606088013591508082111561232b57600080fd5b61233789838a01612234565b9350608088013591508082111561234d57600080fd5b506121aa88828901611f2e565b6000806040838503121561236d57600080fd5b8235915060208301356001600160401b0381111561238a57600080fd5b61200685828601611edd565b60008083601f8401126123a857600080fd5b5081356001600160401b038111156123bf57600080fd5b6020830191508360208285010111156123d757600080fd5b9250929050565b600080600080606085870312156123f457600080fd5b6123fd85611d9c565b93506020850135925060408501356001600160401b0381111561241f57600080fd5b61242b87828801612396565b95989497509550505050565b6000806040838503121561244a57600080fd5b61245383611d9c565b91506124616020840161212f565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561208d57835183529284019291840191600101612486565b600080600080608085870312156124b857600080fd5b6124c185611d9c565b93506124cf60208601611d9c565b92506040850135915060608501356001600160401b038111156124f157600080fd5b6124fd87828801611edd565b91505092959194509250565b6000806040838503121561251c57600080fd5b61252583611d9c565b915061246160208401611d9c565b60008060006040848603121561254857600080fd5b8335925060208401356001600160401b0381111561256557600080fd5b61257186828701612396565b9497909650939450505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104df576104df61257e565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806125d157607f821691505b60208210810361085d57634e487b7160e01b600052602260045260246000fd5b601f8211156106f457600081815260208120601f850160051c810160208610156126185750805b601f850160051c820191505b818110156108aa57828155600101612624565b81516001600160401b0381111561265057612650611de2565b6126648161265e84546125bd565b846125f1565b602080601f83116001811461269957600084156126815750858301515b600019600386901b1c1916600185901b1785556108aa565b600085815260208120601f198616915b828110156126c8578886015182559484019460019091019084016126a9565b50858210156126e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156104df576104df61257e565b6001600160a01b0384168152821515602082015260606040820181905260009061056090830184611d44565b634e487b7160e01b600052603160045260246000fd5b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251612788816048850160208701611d20565b9190910160480195945050505050565b82815260406020820152600061118b6040830184611d44565b6000602082840312156127c357600080fd5b81516001600160401b038111156127d957600080fd5b8201601f810184136127ea57600080fd5b80516127f8611e6c82611eb6565b81815285602083850101111561280d57600080fd5b610560826020830160208601611d2056fea26469706673582212202c879019479041f595edc4e41eddd84fdf542db029b68f2bbec1ddbe07882a5b64736f6c63430008110033",
    "sourceMap": "404:643:136:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1953:367:72;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1953:367:72;;;;;;;;616:165:28;;;:::i;:::-;;;;;;;:::i;3020:1058:72:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1602:32:202;;;1584:51;;1572:2;1557:18;3020:1058:72;1438:203:202;4402::72;;;;;;:::i;:::-;;:::i;:::-;;3461:587:66;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;5911:25:202;;;5899:2;5884:18;1690:92:66;5765:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;4994:181:72:-;;;;;;:::i;:::-;;:::i;4119:188:66:-;;;;;;:::i;:::-;;:::i;5401:186:72:-;;;;;;:::i;:::-;;:::i;4378:174:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;1058:133:174:-;;;;;;:::i;:::-;;:::i;2831:126:72:-;;;;;;:::i;:::-;;:::i;1885::66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;601:85;;719:215:136;;;;;;:::i;:::-;;:::i;926:169:28:-;;;:::i;4662:142:72:-;;;;;;:::i;:::-;;:::i;2412:136:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5771:215:72:-;;;;;;:::i;:::-;;:::i;2382:386::-;;;;;;:::i;:::-;;:::i;6079:312::-;;;;;;:::i;:::-;;:::i;4140:199::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4292:30:72;;;4265:4;4292:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;4140:199;1419:189:177;;;;;;:::i;:::-;;:::i;940:105:136:-;;;;;;:::i;:::-;;:::i;1953:367:72:-;2130:4;-1:-1:-1;;;;;;2169:34:72;;-1:-1:-1;;;2169:34:72;;:92;;-1:-1:-1;;;;;;;2219:42:72;;-1:-1:-1;;;2219:42:72;2169:92;:144;;;;2277:36;2301:11;2277:23;:36::i;:::-;2150:163;1953:367;-1:-1:-1;;1953:367:72:o;616:165:28:-;670:13;695:17;715:30;476:66:29;715:8:28;:30::i;3020:1058:72:-;3087:7;3141;3159:32;3141:7;3159:14;:32::i;:::-;3202:52;3257:28;;;:10;:28;;;;;;3324;3257;3324:26;:28::i;:::-;3295:57;;3367:18;3389:1;3367:23;3363:709;;-1:-1:-1;3421:1:72;;3020:1058;-1:-1:-1;;;;3020:1058:72:o;3363:709::-;4015:46;4038:22;4059:1;4038:18;:22;:::i;:::-;4015:19;;:22;:46::i;:::-;4008:53;3020:1058;-1:-1:-1;;;;;3020:1058:72:o;4402:203::-;4479:45;4497:8;4515:7;4479:17;:45::i;:::-;4590:7;-1:-1:-1;;;;;4539:59:72;;4548:30;4590:7;4548:12;:30::i;:::-;-1:-1:-1;;;;;4539:59:72;;;;;;;;;;;4402:203;;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;16107:15:202;;;3682:46:66;;;16089:34:202;16139:18;;;16132:34;;;16202:15;;16182:18;;;16175:43;16024:18;;3682:46:66;;;;;;;;3635:104;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;:::-;3535:513;;3461:587;;:::o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;16403:25:202::0;;;;16444:18;;;16437:34;16376:18;;2036:72:174::1;16229:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;5911:25:202;;;5884:18;;2265:31:66;5765:177:202;4994:181:72;5121:47;5131:4;5137:2;5149:7;5141:16;;5159:4;5121:47;;;;;;;;;;;;:9;:47::i;4119:188:66:-;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;5401:186:72:-;5532:48;5542:4;5548:2;5560:7;5552:16;;5570:5;5532:48;;;;;;;;;;;;:9;:48::i;4378:174:66:-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;16970:25:202;;;-1:-1:-1;;;;;17031:32:202;;17011:18;;;17004:60;16943:18;;5357:39:66;16796:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;2831:126:72:-;2894:7;2920:30;2941:7;2920:12;:30::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;:::-;1661:128:::0;;:::o;719:215:136:-;888:39;894:2;906:7;898:16;;916:4;922;;888:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;888:5:136;;-1:-1:-1;;;888:39:136:i;926:169:28:-;982:13;1007:17;1027:32;619:66:29;1027:8:28;:32::i;4662:142:72:-;4747:50;4766:10;4778:8;4788;4747:18;:50::i;2412:136:66:-;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;5771:215:72:-;5929:50;5939:4;5945:2;5957:7;5949:16;5974:4;5929:9;:50::i;2382:386::-;2466:13;2491:17;2511:28;1030:66:29;2511:8:72;:28::i;:::-;2491:48;;2624:14;2641:2;2624:19;;2654:21;2678:50;2693:4;2699:6;2721;2707:4;:11;:20;;;;:::i;:::-;2678:14;:50::i;6079:312::-;6268:42;6292:8;6302:7;6268:23;:42::i;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;17277:2:202;1499:73:177::1;::::0;::::1;17259:21:202::0;17316:2;17296:18;;;17289:30;17355:34;17335:18;;;17328:62;-1:-1:-1;;;17406:18:202;;;17399:36;17452:19;;1499:73:177::1;17075:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;940:105:136:-;1009:29;1023:7;1015:16;;1033:4;;1009:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1009:5:136;;-1:-1:-1;;;1009:29:136:i;1948:235:177:-;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;1948:235;:::o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;1524:517:30:-;1623:31;;;1619:416;;1677:26;;-1:-1:-1;;;1677:26:30;;;;;;;;;;;1619:416;1724:33;;;1720:315;;1780:28;;-1:-1:-1;;;1780:28:30;;;;;;;;;;;1720:315;1839:15;;;;:6;:15;;;;;:27;1857:9;1839:15;:27;:::i;:::-;;1914:7;1885:139;1959:3;1939:9;:16;:23;;:71;;1977:33;1992:9;2003:1;2006:3;1977:14;:33::i;:::-;1939:71;;;1965:9;1939:71;1885:139;;;;;;:::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;20397:2:202;9631:50:200;;;20379:21:202;20436:2;20416:18;;;20409:30;-1:-1:-1;;;20455:18:202;;;20448:44;20509:18;;9631:50:200;20195:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;20740:2:202;9691:63:200;;;20722:21:202;20779:2;20759:18;;;20752:30;-1:-1:-1;;;20798:18:202;;;20791:47;20855:18;;9691:63:200;20538:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;1193:253:65:-;1340:4;-1:-1:-1;;;;;;1367:32:65;;-1:-1:-1;;;1367:32:65;;:72;;;1403:36;1427:11;1403:23;:36::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;5911:25:202;;;5884:18;;8149:31:66;5765:177:202;8829:115:199;8892:7;8918:19;8926:3;4444:18;;4362:107;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;6284:333:66:-;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;21076:32:202;;6507:42:66;;;21058:51:202;21125:18;;;21118:34;;;21031:18;;6507:42:66;20884:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;1755:10;1744:7;647;673:6;-1:-1:-1;;;;;673:6:177;;601:85;1744:7;-1:-1:-1;;;;;1744:21:177;;1736:66;;;;-1:-1:-1;;;1736:66:177;;21365:2:202;1736:66:177;;;21347:21:202;;;21384:18;;;21377:30;21443:34;21423:18;;;21416:62;21495:18;;1736:66:177;21163:356:202;7872:187:72;8026:26;8041:3;8046:5;8026:14;:26::i;6397:482::-;-1:-1:-1;;;;;4292:30:72;;4265:4;4292:30;;;:18;:30;;;;;;;;6591:10;4292:40;;;;;;;;;;;6616:33;:75;;;;;6654:37;6673:8;6683:7;6654:18;:37::i;:::-;6653:38;6616:75;6612:152;;;6714:39;;-1:-1:-1;;;6714:39:72;;;;;16970:25:202;;;-1:-1:-1;;;;;17031:32:202;;17011:18;;;17004:60;16943:18;;6714:39:72;16796:274:202;6612:152:72;6774:47;6790:4;6796:2;6800:7;6809:5;6816:4;6774:15;:47::i;:::-;6836:36;;6863:7;;-1:-1:-1;;;;;6836:36:72;;;;;;;;;;6855:16;;6836:36;6562:317;6397:482;;;;;:::o;4710:273:66:-;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;6885:250:72:-;7034:37;7046:2;7050:7;7059:5;7066:4;7034:11;:37::i;:::-;7086:42;;7119:7;;-1:-1:-1;;;;;7086:42:72;;;7111:16;;7086:42;;7111:16;;7086:42;6885:250;;;;:::o;7521:345::-;7683:8;-1:-1:-1;;;;;7668:23:72;:11;-1:-1:-1;;;;;7668:23:72;;7660:75;;;;-1:-1:-1;;;7660:75:72;;21726:2:202;7660:75:72;;;21708:21:202;21765:2;21745:18;;;21738:30;21804:34;21784:18;;;21777:62;-1:-1:-1;;;21855:18:202;;;21848:37;21902:19;;7660:75:72;21524:403:202;7660:75:72;-1:-1:-1;;;;;7745:31:72;;;;;;;:18;:31;;;;;;;;:41;;;;;;;;;;;;;:52;;-1:-1:-1;;7745:52:72;;;;;;;;;;7812:47;;445:41:202;;;7812:47:72;;418:18:202;7812:47:72;;;;;;;7521:345;;;:::o;7664:124:199:-;7727:16;7762:19;7770:3;7762:7;:19::i;2654:736:66:-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;16107:15:202;;;2878:46:66;;;16089:34:202;16139:18;;;16132:34;;;16202:15;;16182:18;;;16175:43;16024:18;;2878:46:66;15849:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;21076:32:202;;3270:48:66;;;21058:51:202;21125:18;;;21118:34;;;21031:18;;3270:48:66;20884:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;7141:238:72:-;7228:18;7249:21;7262:7;7249:12;:21::i;:::-;7228:42;;7281:26;7293:7;7302:4;7281:11;:26::i;:::-;7322:50;;7363:7;;7355:16;;-1:-1:-1;;;;;7322:50:72;;;;;7355:16;;7322:50;7218:161;7141:238;;:::o;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;4811:118:199;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;16107:15:202;;;10476:44:66;;;16089:34:202;16139:18;;;16132:34;;;16202:15;;16182:18;;;16175:43;16024:18;;10476:44:66;15849:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;8425:700:66:-;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;5911:25:202;;;5884:18;;8701:33:66;5765:177:202;8658:87:66;8774:10;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;:::-;8555:570;8425:700;;;;:::o;8028:150:199:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;9316:575:66:-;9394:18;9415:21;9428:7;9415:12;:21::i;:::-;9394:42;-1:-1:-1;9465:10:66;9599:1;9580:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;9611:36:66;;-1:-1:-1;9627:10:66;9639:7;9611:15;:36::i;:::-;-1:-1:-1;;;;;9658:24:66;;;;;;:12;:24;;;;;:40;;9690:7;9658:31;:40::i;:::-;-1:-1:-1;9715:21:66;;;;:12;:21;;;;;;9708:28;;-1:-1:-1;;;;;;9708:28:66;;;9752:64;9728:7;;9715:21;-1:-1:-1;;;;;9752:64:66;;;;;;;9761:8;;9715:21;;9811:4;;9752:64;:::i;:::-;;;;;;;;9827:57;9846:10;9866:1;9870:7;9879:4;9827:18;:57::i;2685:1388:199:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;6693:933:66;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;5818:123::-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;12480:681::-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;1602:32:202;;12997:55:66;;;1584:51:202;1557:18;;12997:55:66;1438:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;1602:32:202;;13098::66;;;1584:51:202;1557:18;;13098:32:66;1438:203:202;2113:404:199;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;4680:811:1;4846:105;;;-1:-1:-1;;;;;;24155:33:202;;4846:105:1;;;;24137:52:202;;;;4846:105:1;;;;;;;;;;24110:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:202;721:16;;714:27;497:250::o;752:271::-;794:3;832:5;826:12;859:6;854:3;847:19;875:76;944:6;937:4;932:3;928:14;921:4;914:5;910:16;875:76;:::i;:::-;1005:2;984:15;-1:-1:-1;;980:29:202;971:39;;;;1012:4;967:50;;752:271;-1:-1:-1;;752:271:202:o;1028:220::-;1177:2;1166:9;1159:21;1140:4;1197:45;1238:2;1227:9;1223:18;1215:6;1197:45;:::i;1253:180::-;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;-1:-1:-1;1404:23:202;;1253:180;-1:-1:-1;1253:180:202:o;1646:173::-;1714:20;;-1:-1:-1;;;;;1763:31:202;;1753:42;;1743:70;;1809:1;1806;1799:12;1743:70;1646:173;;;:::o;1824:254::-;1892:6;1900;1953:2;1941:9;1932:7;1928:23;1924:32;1921:52;;;1969:1;1966;1959:12;1921:52;1992:29;2011:9;1992:29;:::i;:::-;1982:39;2068:2;2053:18;;;;2040:32;;-1:-1:-1;;;1824:254:202:o;2342:127::-;2403:10;2398:3;2394:20;2391:1;2384:31;2434:4;2431:1;2424:15;2458:4;2455:1;2448:15;2474:275;2545:2;2539:9;2610:2;2591:13;;-1:-1:-1;;2587:27:202;2575:40;;-1:-1:-1;;;;;2630:34:202;;2666:22;;;2627:62;2624:88;;;2692:18;;:::i;:::-;2728:2;2721:22;2474:275;;-1:-1:-1;2474:275:202:o;2754:183::-;2814:4;-1:-1:-1;;;;;2839:6:202;2836:30;2833:56;;;2869:18;;:::i;:::-;-1:-1:-1;2914:1:202;2910:14;2926:4;2906:25;;2754:183::o;2942:662::-;2996:5;3049:3;3042:4;3034:6;3030:17;3026:27;3016:55;;3067:1;3064;3057:12;3016:55;3103:6;3090:20;3129:4;3153:60;3169:43;3209:2;3169:43;:::i;:::-;3153:60;:::i;:::-;3247:15;;;3333:1;3329:10;;;;3317:23;;3313:32;;;3278:12;;;;3357:15;;;3354:35;;;3385:1;3382;3375:12;3354:35;3421:2;3413:6;3409:15;3433:142;3449:6;3444:3;3441:15;3433:142;;;3515:17;;3503:30;;3553:12;;;;3466;;3433:142;;;-1:-1:-1;3593:5:202;2942:662;-1:-1:-1;;;;;;2942:662:202:o;3609:186::-;3657:4;-1:-1:-1;;;;;3682:6:202;3679:30;3676:56;;;3712:18;;:::i;:::-;-1:-1:-1;3778:2:202;3757:15;-1:-1:-1;;3753:29:202;3784:4;3749:40;;3609:186::o;3800:462::-;3842:5;3895:3;3888:4;3880:6;3876:17;3872:27;3862:55;;3913:1;3910;3903:12;3862:55;3949:6;3936:20;3980:48;3996:31;4024:2;3996:31;:::i;3980:48::-;4053:2;4044:7;4037:19;4099:3;4092:4;4087:2;4079:6;4075:15;4071:26;4068:35;4065:55;;;4116:1;4113;4106:12;4065:55;4181:2;4174:4;4166:6;4162:17;4155:4;4146:7;4142:18;4129:55;4229:1;4204:16;;;4222:4;4200:27;4193:38;;;;4208:7;3800:462;-1:-1:-1;;;3800:462:202:o;4267:886::-;4319:5;4372:3;4365:4;4357:6;4353:17;4349:27;4339:55;;4390:1;4387;4380:12;4339:55;4426:6;4413:20;4452:4;4476:60;4492:43;4532:2;4492:43;:::i;4476:60::-;4570:15;;;4656:1;4652:10;;;;4640:23;;4636:32;;;4601:12;;;;4680:15;;;4677:35;;;4708:1;4705;4698:12;4677:35;4744:2;4736:6;4732:15;4756:368;4772:6;4767:3;4764:15;4756:368;;;4858:3;4845:17;-1:-1:-1;;;;;4881:11:202;4878:35;4875:125;;;4954:1;4983:2;4979;4972:14;4875:125;5025:56;5077:3;5072:2;5058:11;5050:6;5046:24;5042:33;5025:56;:::i;:::-;5013:69;;-1:-1:-1;5102:12:202;;;;4789;;4756:368;;5158:602;5285:6;5293;5346:2;5334:9;5325:7;5321:23;5317:32;5314:52;;;5362:1;5359;5352:12;5314:52;5402:9;5389:23;-1:-1:-1;;;;;5472:2:202;5464:6;5461:14;5458:34;;;5488:1;5485;5478:12;5458:34;5511:61;5564:7;5555:6;5544:9;5540:22;5511:61;:::i;:::-;5501:71;;5625:2;5614:9;5610:18;5597:32;5581:48;;5654:2;5644:8;5641:16;5638:36;;;5670:1;5667;5660:12;5638:36;;5693:61;5746:7;5735:8;5724:9;5720:24;5693:61;:::i;:::-;5683:71;;;5158:602;;;;;:::o;6132:328::-;6209:6;6217;6225;6278:2;6266:9;6257:7;6253:23;6249:32;6246:52;;;6294:1;6291;6284:12;6246:52;6317:29;6336:9;6317:29;:::i;:::-;6307:39;;6365:38;6399:2;6388:9;6384:18;6365:38;:::i;:::-;6355:48;;6450:2;6439:9;6435:18;6422:32;6412:42;;6132:328;;;;;:::o;6465:658::-;6636:2;6688:21;;;6758:13;;6661:18;;;6780:22;;;6607:4;;6636:2;6859:15;;;;6833:2;6818:18;;;6607:4;6902:195;6916:6;6913:1;6910:13;6902:195;;;6981:13;;-1:-1:-1;;;;;6977:39:202;6965:52;;7072:15;;;;7037:12;;;;7013:1;6931:9;6902:195;;;-1:-1:-1;7114:3:202;;6465:658;-1:-1:-1;;;;;;6465:658:202:o;7128:348::-;7212:6;7265:2;7253:9;7244:7;7240:23;7236:32;7233:52;;;7281:1;7278;7271:12;7233:52;7321:9;7308:23;-1:-1:-1;;;;;7346:6:202;7343:30;7340:50;;;7386:1;7383;7376:12;7340:50;7409:61;7462:7;7453:6;7442:9;7438:22;7409:61;:::i;7481:801::-;7641:4;7670:2;7710;7699:9;7695:18;7740:2;7729:9;7722:21;7763:6;7798;7792:13;7829:6;7821;7814:22;7867:2;7856:9;7852:18;7845:25;;7929:2;7919:6;7916:1;7912:14;7901:9;7897:30;7893:39;7879:53;;7967:2;7959:6;7955:15;7988:1;7998:255;8012:6;8009:1;8006:13;7998:255;;;8105:2;8101:7;8089:9;8081:6;8077:22;8073:36;8068:3;8061:49;8133:40;8166:6;8157;8151:13;8133:40;:::i;:::-;8123:50;-1:-1:-1;8231:12:202;;;;8196:15;;;;8034:1;8027:9;7998:255;;;-1:-1:-1;8270:6:202;;7481:801;-1:-1:-1;;;;;;;7481:801:202:o;8287:160::-;8352:20;;8408:13;;8401:21;8391:32;;8381:60;;8437:1;8434;8427:12;8452:606;8553:6;8561;8569;8577;8585;8638:3;8626:9;8617:7;8613:23;8609:33;8606:53;;;8655:1;8652;8645:12;8606:53;8678:29;8697:9;8678:29;:::i;:::-;8668:39;;8726:38;8760:2;8749:9;8745:18;8726:38;:::i;:::-;8716:48;;8811:2;8800:9;8796:18;8783:32;8773:42;;8834:35;8865:2;8854:9;8850:18;8834:35;:::i;:::-;8824:45;;8920:3;8909:9;8905:19;8892:33;-1:-1:-1;;;;;8940:6:202;8937:30;8934:50;;;8980:1;8977;8970:12;8934:50;9003:49;9044:7;9035:6;9024:9;9020:22;9003:49;:::i;:::-;8993:59;;;8452:606;;;;;;;;:::o;9286:186::-;9345:6;9398:2;9386:9;9377:7;9373:23;9369:32;9366:52;;;9414:1;9411;9404:12;9366:52;9437:29;9456:9;9437:29;:::i;9477:668::-;9531:5;9584:3;9577:4;9569:6;9565:17;9561:27;9551:55;;9602:1;9599;9592:12;9551:55;9638:6;9625:20;9664:4;9688:60;9704:43;9744:2;9704:43;:::i;9688:60::-;9782:15;;;9868:1;9864:10;;;;9852:23;;9848:32;;;9813:12;;;;9892:15;;;9889:35;;;9920:1;9917;9910:12;9889:35;9956:2;9948:6;9944:15;9968:148;9984:6;9979:3;9976:15;9968:148;;;10050:23;10069:3;10050:23;:::i;:::-;10038:36;;10094:12;;;;10001;;9968:148;;10150:662;10201:5;10254:3;10247:4;10239:6;10235:17;10231:27;10221:55;;10272:1;10269;10262:12;10221:55;10308:6;10295:20;10334:4;10358:60;10374:43;10414:2;10374:43;:::i;10358:60::-;10452:15;;;10538:1;10534:10;;;;10522:23;;10518:32;;;10483:12;;;;10562:15;;;10559:35;;;10590:1;10587;10580:12;10559:35;10626:2;10618:6;10614:15;10638:145;10654:6;10649:3;10646:15;10638:145;;;10720:20;10736:3;10720:20;:::i;:::-;10708:33;;10761:12;;;;10671;;10638:145;;10817:1276;11043:6;11051;11059;11067;11075;11128:3;11116:9;11107:7;11103:23;11099:33;11096:53;;;11145:1;11142;11135:12;11096:53;11185:9;11172:23;-1:-1:-1;;;;;11255:2:202;11247:6;11244:14;11241:34;;;11271:1;11268;11261:12;11241:34;11294:61;11347:7;11338:6;11327:9;11323:22;11294:61;:::i;:::-;11284:71;;11408:2;11397:9;11393:18;11380:32;11364:48;;11437:2;11427:8;11424:16;11421:36;;;11453:1;11450;11443:12;11421:36;11476:63;11531:7;11520:8;11509:9;11505:24;11476:63;:::i;:::-;11466:73;;11592:2;11581:9;11577:18;11564:32;11548:48;;11621:2;11611:8;11608:16;11605:36;;;11637:1;11634;11627:12;11605:36;11660:63;11715:7;11704:8;11693:9;11689:24;11660:63;:::i;:::-;11650:73;;11776:2;11765:9;11761:18;11748:32;11732:48;;11805:2;11795:8;11792:16;11789:36;;;11821:1;11818;11811:12;11789:36;11844:60;11896:7;11885:8;11874:9;11870:24;11844:60;:::i;:::-;11834:70;;11957:3;11946:9;11942:19;11929:33;11913:49;;11987:2;11977:8;11974:16;11971:36;;;12003:1;12000;11993:12;11971:36;;12026:61;12079:7;12068:8;12057:9;12053:24;12026:61;:::i;12098:388::-;12175:6;12183;12236:2;12224:9;12215:7;12211:23;12207:32;12204:52;;;12252:1;12249;12242:12;12204:52;12288:9;12275:23;12265:33;;12349:2;12338:9;12334:18;12321:32;-1:-1:-1;;;;;12368:6:202;12365:30;12362:50;;;12408:1;12405;12398:12;12362:50;12431:49;12472:7;12463:6;12452:9;12448:22;12431:49;:::i;12491:347::-;12542:8;12552:6;12606:3;12599:4;12591:6;12587:17;12583:27;12573:55;;12624:1;12621;12614:12;12573:55;-1:-1:-1;12647:20:202;;-1:-1:-1;;;;;12679:30:202;;12676:50;;;12722:1;12719;12712:12;12676:50;12759:4;12751:6;12747:17;12735:29;;12811:3;12804:4;12795:6;12787;12783:19;12779:30;12776:39;12773:59;;;12828:1;12825;12818:12;12773:59;12491:347;;;;;:::o;12843:551::-;12931:6;12939;12947;12955;13008:2;12996:9;12987:7;12983:23;12979:32;12976:52;;;13024:1;13021;13014:12;12976:52;13047:29;13066:9;13047:29;:::i;:::-;13037:39;;13123:2;13112:9;13108:18;13095:32;13085:42;;13178:2;13167:9;13163:18;13150:32;-1:-1:-1;;;;;13197:6:202;13194:30;13191:50;;;13237:1;13234;13227:12;13191:50;13276:58;13326:7;13317:6;13306:9;13302:22;13276:58;:::i;:::-;12843:551;;;;-1:-1:-1;13353:8:202;-1:-1:-1;;;;12843:551:202:o;13399:254::-;13464:6;13472;13525:2;13513:9;13504:7;13500:23;13496:32;13493:52;;;13541:1;13538;13531:12;13493:52;13564:29;13583:9;13564:29;:::i;:::-;13554:39;;13612:35;13643:2;13632:9;13628:18;13612:35;:::i;:::-;13602:45;;13399:254;;;;;:::o;13658:632::-;13829:2;13881:21;;;13951:13;;13854:18;;;13973:22;;;13800:4;;13829:2;14052:15;;;;14026:2;14011:18;;;13800:4;14095:169;14109:6;14106:1;14103:13;14095:169;;;14170:13;;14158:26;;14239:15;;;;14204:12;;;;14131:1;14124:9;14095:169;;14295:537;14390:6;14398;14406;14414;14467:3;14455:9;14446:7;14442:23;14438:33;14435:53;;;14484:1;14481;14474:12;14435:53;14507:29;14526:9;14507:29;:::i;:::-;14497:39;;14555:38;14589:2;14578:9;14574:18;14555:38;:::i;:::-;14545:48;;14640:2;14629:9;14625:18;14612:32;14602:42;;14695:2;14684:9;14680:18;14667:32;-1:-1:-1;;;;;14714:6:202;14711:30;14708:50;;;14754:1;14751;14744:12;14708:50;14777:49;14818:7;14809:6;14798:9;14794:22;14777:49;:::i;:::-;14767:59;;;14295:537;;;;;;;:::o;14837:260::-;14905:6;14913;14966:2;14954:9;14945:7;14941:23;14937:32;14934:52;;;14982:1;14979;14972:12;14934:52;15005:29;15024:9;15005:29;:::i;:::-;14995:39;;15053:38;15087:2;15076:9;15072:18;15053:38;:::i;15102:477::-;15181:6;15189;15197;15250:2;15238:9;15229:7;15225:23;15221:32;15218:52;;;15266:1;15263;15256:12;15218:52;15302:9;15289:23;15279:33;;15363:2;15352:9;15348:18;15335:32;-1:-1:-1;;;;;15382:6:202;15379:30;15376:50;;;15422:1;15419;15412:12;15376:50;15461:58;15511:7;15502:6;15491:9;15487:22;15461:58;:::i;:::-;15102:477;;15538:8;;-1:-1:-1;15435:84:202;;-1:-1:-1;;;;15102:477:202:o;15584:127::-;15645:10;15640:3;15636:20;15633:1;15626:31;15676:4;15673:1;15666:15;15700:4;15697:1;15690:15;15716:128;15783:9;;;15804:11;;;15801:37;;;15818:18;;:::i;16482:127::-;16543:10;16538:3;16534:20;16531:1;16524:31;16574:4;16571:1;16564:15;16598:4;16595:1;16588:15;17482:380;17561:1;17557:12;;;;17604;;;17625:61;;17679:4;17671:6;17667:17;17657:27;;17625:61;17732:2;17724:6;17721:14;17701:18;17698:38;17695:161;;17778:10;17773:3;17769:20;17766:1;17759:31;17813:4;17810:1;17803:15;17841:4;17838:1;17831:15;17992:544;18093:2;18088:3;18085:11;18082:448;;;18129:1;18154:5;18150:2;18143:17;18199:4;18195:2;18185:19;18269:2;18257:10;18253:19;18250:1;18246:27;18240:4;18236:38;18305:4;18293:10;18290:20;18287:47;;;-1:-1:-1;18328:4:202;18287:47;18383:2;18378:3;18374:12;18371:1;18367:20;18361:4;18357:31;18347:41;;18438:82;18456:2;18449:5;18446:13;18438:82;;;18501:17;;;18482:1;18471:13;18438:82;;18712:1348;18836:3;18830:10;-1:-1:-1;;;;;18855:6:202;18852:30;18849:56;;;18885:18;;:::i;:::-;18914:96;19003:6;18963:38;18995:4;18989:11;18963:38;:::i;:::-;18957:4;18914:96;:::i;:::-;19065:4;;19129:2;19118:14;;19146:1;19141:662;;;;19847:1;19864:6;19861:89;;;-1:-1:-1;19916:19:202;;;19910:26;19861:89;-1:-1:-1;;18669:1:202;18665:11;;;18661:24;18657:29;18647:40;18693:1;18689:11;;;18644:57;19963:81;;19111:943;;19141:662;17939:1;17932:14;;;17976:4;17963:18;;-1:-1:-1;;19177:20:202;;;19294:236;19308:7;19305:1;19302:14;19294:236;;;19397:19;;;19391:26;19376:42;;19489:27;;;;19457:1;19445:14;;;;19324:19;;19294:236;;;19298:3;19558:6;19549:7;19546:19;19543:201;;;19619:19;;;19613:26;-1:-1:-1;;19702:1:202;19698:14;;;19714:3;19694:24;19690:37;19686:42;19671:58;19656:74;;19543:201;-1:-1:-1;;;;;19790:1:202;19774:14;;;19770:22;19757:36;;-1:-1:-1;18712:1348:202:o;20065:125::-;20130:9;;;20151:10;;;20148:36;;;20164:18;;:::i;21932:396::-;-1:-1:-1;;;;;22129:32:202;;22111:51;;22205:14;;22198:22;22193:2;22178:18;;22171:50;22257:2;22252;22237:18;;22230:30;;;-1:-1:-1;;22277:45:202;;22303:18;;22295:6;22277:45;:::i;22333:127::-;22394:10;22389:3;22385:20;22382:1;22375:31;22425:4;22422:1;22415:15;22449:4;22446:1;22439:15;22465:577;22678:3;22710:26;22706:31;22779:2;22770:6;22766:2;22762:15;22758:24;22753:3;22746:37;22834:2;22825:6;22821:2;22817:15;22813:24;22808:2;22803:3;22799:12;22792:46;;22868:6;22863:2;22858:3;22854:12;22847:28;22904:6;22898:13;22920:75;22988:6;22983:2;22978:3;22974:12;22967:4;22959:6;22955:17;22920:75;:::i;:::-;23015:16;;;;23033:2;23011:25;;22465:577;-1:-1:-1;;;;;22465:577:202:o;23047:289::-;23222:6;23211:9;23204:25;23265:2;23260;23249:9;23245:18;23238:30;23185:4;23285:45;23326:2;23315:9;23311:18;23303:6;23285:45;:::i;23341:647::-;23420:6;23473:2;23461:9;23452:7;23448:23;23444:32;23441:52;;;23489:1;23486;23479:12;23441:52;23522:9;23516:16;-1:-1:-1;;;;;23547:6:202;23544:30;23541:50;;;23587:1;23584;23577:12;23541:50;23610:22;;23663:4;23655:13;;23651:27;-1:-1:-1;23641:55:202;;23692:1;23689;23682:12;23641:55;23721:2;23715:9;23746:48;23762:31;23790:2;23762:31;:::i;23746:48::-;23817:2;23810:5;23803:17;23857:7;23852:2;23847;23843;23839:11;23835:20;23832:33;23829:53;;;23878:1;23875;23868:12;23829:53;23891:67;23955:2;23950;23943:5;23939:14;23934:2;23930;23926:11;23891:67;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "getApproved(uint256)": "081812fc",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,uint256,bytes)": "94d008ef",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"tokenURIValue\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Compatible with ERC721 approve.\",\"params\":{\"operator\":\"The address to approve for `tokenId`\",\"tokenId\":\"The tokenId to approve\"}},\"authorizeOperator(address,bytes32)\":{\"details\":\"Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"tokenId\":\"The tokenId operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"getApproved(uint256)\":{\"details\":\"Compatible with ERC721 getApproved.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address of the operator for `tokenId`\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"name()\":{\"details\":\"Returns the name of the token.\",\"returns\":{\"_0\":\"The name of the token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Compatible with ERC721 ownerOf.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The owner of the tokenId\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Compatible with ERC721 safeTransferFrom. Using force=false so that no EOA and only contracts supporting LSP1 interface may receive the tokenId.\",\"params\":{\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Compatible with ERC721 safeTransferFrom.\",\"params\":{\"data\":\"The data to be sent with the transfer\",\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"See _setApprovalForAll\"},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\",\"returns\":{\"_0\":\"The symbol of the token\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Compatible with ERC721 transferFrom. Using force=true so that EOA and any contract may receive the tokenId.\",\"params\":{\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"To provide compatibility with indexing ERC721 events.\"},\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"},\"Transfer(address,address,uint256)\":{\"notice\":\"To provide compatibility with indexing ERC721 events.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/Tokens/LSP8CompatibleERC721Tester.sol\":\"LSP8CompatibleERC721Tester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/ILSP4Compatibility.sol\":{\"keccak256\":\"0xb75cd25d17cca0c09be8a2f5122ac47f8ec2846006faf357e81bb730bcd929a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://097258f718d8ce024699b2866c20c4627ee139dd419eb1ab8155ee28dd1511b6\",\"dweb:/ipfs/QmbFXPazAHPpEutFrYfVadCXW2tCbQAXmW7MB5eQuFW5Xa\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Compatibility.sol\":{\"keccak256\":\"0xfa8b7b6c2b8823582be57f824a91af769c04669dee6c24876b936b23e57a0fe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1df074acad92ab54dcaedf31c5841803599ace132cf3ab0106eb6f815d2ce921\",\"dweb:/ipfs/QmRNTB7WK8YfHUBLui4sppnKJV11sGRCTzfHMT3gCH1SPh\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d\",\"dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5\",\"dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/ILSP8CompatibleERC721.sol\":{\"keccak256\":\"0x5d4dfd7c62220f7dc4240c115f5f71301001d3791add5f0468d845ff0de163aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137cbe272708a38e196611e28452cfa61e75005b5050800475ea51397a3e5680\",\"dweb:/ipfs/QmWtmpnFyfVfw3W2X841GKoy2gQcM1DPHHRLymc8112UG7\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721.sol\":{\"keccak256\":\"0xa27b6d60ac748669dc3a9661e4c406d4c974f6576e5e85f325ab4f2dc20851bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e54cce51b36e02d4f159635789d3a2c58c34382bf5c6b369db1f9b85c7e9385\",\"dweb:/ipfs/Qmd5qcTVrbtwGjeuZqA3KvAQQwvFzywVh75xhyZZ9DE8nW\"]},\"contracts/Mocks/Tokens/LSP8CompatibleERC721Tester.sol\":{\"keccak256\":\"0xc16b0275038b182fedefbd9b4819aff5f914bd37dc34d7d66c4e61c835ad37a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://551c7a18815987efba17333fb1b0872d4e2edbaf910b18104877d74a805f74b6\",\"dweb:/ipfs/QmUzELcsdDCaUPLafsr7kAEGcdzBfNx3YY76i9HiDHGX6W\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "tokenURIValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Compatible with ERC721 approve.",
            "params": {
              "operator": "The address to approve for `tokenId`",
              "tokenId": "The tokenId to approve"
            }
          },
          "authorizeOperator(address,bytes32)": {
            "details": "Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.",
            "params": {
              "operator": "The address to authorize as an operator.",
              "tokenId": "The tokenId operator has access to."
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "getApproved(uint256)": {
            "details": "Compatible with ERC721 getApproved.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address of the operator for `tokenId`"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "name()": {
            "details": "Returns the name of the token.",
            "returns": {
              "_0": "The name of the token"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "Compatible with ERC721 ownerOf.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The owner of the tokenId"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Compatible with ERC721 safeTransferFrom. Using force=false so that no EOA and only contracts supporting LSP1 interface may receive the tokenId.",
            "params": {
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Compatible with ERC721 safeTransferFrom.",
            "params": {
              "data": "The data to be sent with the transfer",
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "setApprovalForAll(address,bool)": {
            "details": "See _setApprovalForAll"
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name.",
            "returns": {
              "_0": "The symbol of the token"
            }
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Compatible with ERC721 transferFrom. Using force=true so that EOA and any contract may receive the tokenId.",
            "params": {
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Mocks/Tokens/LSP8CompatibleERC721Tester.sol": "LSP8CompatibleERC721Tester"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/ILSP4Compatibility.sol": {
        "keccak256": "0xb75cd25d17cca0c09be8a2f5122ac47f8ec2846006faf357e81bb730bcd929a9",
        "urls": [
          "bzz-raw://097258f718d8ce024699b2866c20c4627ee139dd419eb1ab8155ee28dd1511b6",
          "dweb:/ipfs/QmbFXPazAHPpEutFrYfVadCXW2tCbQAXmW7MB5eQuFW5Xa"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Compatibility.sol": {
        "keccak256": "0xfa8b7b6c2b8823582be57f824a91af769c04669dee6c24876b936b23e57a0fe8",
        "urls": [
          "bzz-raw://1df074acad92ab54dcaedf31c5841803599ace132cf3ab0106eb6f815d2ce921",
          "dweb:/ipfs/QmRNTB7WK8YfHUBLui4sppnKJV11sGRCTzfHMT3gCH1SPh"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol": {
        "keccak256": "0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274",
        "urls": [
          "bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d",
          "dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552",
        "urls": [
          "bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5",
          "dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/ILSP8CompatibleERC721.sol": {
        "keccak256": "0x5d4dfd7c62220f7dc4240c115f5f71301001d3791add5f0468d845ff0de163aa",
        "urls": [
          "bzz-raw://137cbe272708a38e196611e28452cfa61e75005b5050800475ea51397a3e5680",
          "dweb:/ipfs/QmWtmpnFyfVfw3W2X841GKoy2gQcM1DPHHRLymc8112UG7"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721.sol": {
        "keccak256": "0xa27b6d60ac748669dc3a9661e4c406d4c974f6576e5e85f325ab4f2dc20851bb",
        "urls": [
          "bzz-raw://3e54cce51b36e02d4f159635789d3a2c58c34382bf5c6b369db1f9b85c7e9385",
          "dweb:/ipfs/Qmd5qcTVrbtwGjeuZqA3KvAQQwvFzywVh75xhyZZ9DE8nW"
        ],
        "license": "MIT"
      },
      "contracts/Mocks/Tokens/LSP8CompatibleERC721Tester.sol": {
        "keccak256": "0xc16b0275038b182fedefbd9b4819aff5f914bd37dc34d7d66c4e61c835ad37a7",
        "urls": [
          "bzz-raw://551c7a18815987efba17333fb1b0872d4e2edbaf910b18104877d74a805f74b6",
          "dweb:/ipfs/QmUzELcsdDCaUPLafsr7kAEGcdzBfNx3YY76i9HiDHGX6W"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Mocks/Tokens/LSP8CompatibleERC721Tester.sol",
    "id": 16825,
    "exportedSymbols": {
      "LSP8CompatibleERC721": [
        11944
      ],
      "LSP8CompatibleERC721Tester": [
        16824
      ],
      "LSP8IdentifiableDigitalAsset": [
        10104
      ],
      "_LSP4_METADATA_KEY": [
        4082
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1015:136",
    "nodes": [
      {
        "id": 16757,
        "nodeType": "PragmaDirective",
        "src": "33:23:136",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16759,
        "nodeType": "ImportDirective",
        "src": "69:119:136",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16825,
        "sourceUnit": 10105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16758,
              "name": "LSP8IdentifiableDigitalAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10104,
              "src": "82:28:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16761,
        "nodeType": "ImportDirective",
        "src": "189:114:136",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16825,
        "sourceUnit": 11945,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16760,
              "name": "LSP8CompatibleERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11944,
              "src": "202:20:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16763,
        "nodeType": "ImportDirective",
        "src": "318:84:136",
        "nodes": [],
        "absolutePath": "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol",
        "file": "../../LSP4DigitalAssetMetadata/LSP4Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16825,
        "sourceUnit": 4083,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16762,
              "name": "_LSP4_METADATA_KEY",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4082,
              "src": "326:18:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16824,
        "nodeType": "ContractDefinition",
        "src": "404:643:136",
        "nodes": [
          {
            "id": 16787,
            "nodeType": "FunctionDefinition",
            "src": "470:243:136",
            "nodes": [],
            "body": {
              "id": 16786,
              "nodeType": "Block",
              "src": "653:60:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16782,
                        "name": "_LSP4_METADATA_KEY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4082,
                        "src": "672:18:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16783,
                        "name": "tokenURIValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16773,
                        "src": "692:13:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16781,
                      "name": "_setData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11943
                      ],
                      "referencedDeclaration": 11943,
                      "src": "663:8:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory)"
                      }
                    },
                    "id": 16784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:43:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16785,
                  "nodeType": "ExpressionStatement",
                  "src": "663:43:136"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 16776,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16767,
                    "src": "629:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16777,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16769,
                    "src": "635:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16778,
                    "name": "newOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16771,
                    "src": "643:8:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 16779,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 16775,
                  "name": "LSP8CompatibleERC721",
                  "nameLocations": [
                    "608:20:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11944,
                  "src": "608:20:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "608:44:136"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16767,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "505:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16787,
                  "src": "491:18:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16766,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16769,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "533:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16787,
                  "src": "519:20:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16768,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16771,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "557:8:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16787,
                  "src": "549:16:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16773,
                  "mutability": "mutable",
                  "name": "tokenURIValue",
                  "nameLocation": "588:13:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16787,
                  "src": "575:26:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16772,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "481:126:136"
            },
            "returnParameters": {
              "id": 16780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:0:136"
            },
            "scope": 16824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16807,
            "nodeType": "FunctionDefinition",
            "src": "719:215:136",
            "nodes": [],
            "body": {
              "id": 16806,
              "nodeType": "Block",
              "src": "820:114:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16797,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16789,
                        "src": "894:2:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 16800,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16791,
                            "src": "906:7:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "898:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 16798,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "898:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "898:16:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "916:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 16803,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16793,
                        "src": "922:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 16796,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11859
                      ],
                      "referencedDeclaration": 11859,
                      "src": "888:5:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 16804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "888:39:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16805,
                  "nodeType": "ExpressionStatement",
                  "src": "888:39:136"
                }
              ]
            },
            "functionSelector": "94d008ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "728:4:136",
            "parameters": {
              "id": 16794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16789,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "750:2:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16807,
                  "src": "742:10:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16791,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "770:7:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16807,
                  "src": "762:15:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16793,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "802:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16807,
                  "src": "787:19:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16792,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "732:80:136"
            },
            "returnParameters": {
              "id": 16795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:0:136"
            },
            "scope": 16824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16823,
            "nodeType": "FunctionDefinition",
            "src": "940:105:136",
            "nodes": [],
            "body": {
              "id": 16822,
              "nodeType": "Block",
              "src": "999:46:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 16817,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16809,
                            "src": "1023:7:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1015:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 16815,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1015:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:16:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16819,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16811,
                        "src": "1033:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 16814,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11893
                      ],
                      "referencedDeclaration": 11893,
                      "src": "1009:5:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory)"
                      }
                    },
                    "id": 16820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1009:29:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16821,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:29:136"
                }
              ]
            },
            "functionSelector": "fe9d9303",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "949:4:136",
            "parameters": {
              "id": 16812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16809,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "962:7:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16823,
                  "src": "954:15:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16811,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "986:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 16823,
                  "src": "971:19:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16810,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:38:136"
            },
            "returnParameters": {
              "id": 16813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:0:136"
            },
            "scope": 16824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16764,
              "name": "LSP8CompatibleERC721",
              "nameLocations": [
                "443:20:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11944,
              "src": "443:20:136"
            },
            "id": 16765,
            "nodeType": "InheritanceSpecifier",
            "src": "443:20:136"
          }
        ],
        "canonicalName": "LSP8CompatibleERC721Tester",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16824,
          11944,
          10104,
          11044,
          4059,
          11225,
          9968,
          4186,
          43285,
          43508,
          4008,
          43840,
          46531,
          46594,
          43687
        ],
        "name": "LSP8CompatibleERC721Tester",
        "nameLocation": "413:26:136",
        "scope": 16825,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 136
}