{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ERC725X_ContractDeploymentFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC725X_CreateOperationsRequireEmptyRecipientAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC725X_ExecuteParametersLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ERC725X_InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC725X_MsgValueDisallowedInDelegateCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC725X_MsgValueDisallowedInStaticCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC725X_NoContractBytecodeProvided",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "operationTypeProvided",
          "type": "uint256"
        }
      ],
      "name": "ERC725X_UnknownOperationType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "operationType",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "operationType",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "operationsType",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "datas",
          "type": "bytes[]"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "operationType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620018e7380380620018e7833981016040819052620000349162000122565b6001600160a01b0381166200009e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840160405180910390fd5b620000b481620000bb60201b6200045a1760201c565b5062000154565b6000546001600160a01b038281169116146200011f57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505b50565b6000602082840312156200013557600080fd5b81516001600160a01b03811681146200014d57600080fd5b9392505050565b61178380620001646000396000f3fe6080604052600436106100915760003560e01c806354f6127f1161005957806354f6127f1461014d578063715018a61461016d5780637f23690c146101825780638da5cb5b146101a2578063f2fde38b146101ca57600080fd5b806301ffc9a71461009657806313ced88d146100cb57806314a6e293146100eb57806344c028fe1461010d5780634e3e6e9c1461012d575b600080fd5b3480156100a257600080fd5b506100b66100b136600461102e565b6101ea565b60405190151581526020015b60405180910390f35b6100de6100d936600461123a565b610230565b6040516100c29190611392565b3480156100f757600080fd5b5061010b6101063660046113f4565b610251565b005b61012061011b366004611458565b6102e2565b6040516100c291906114ad565b34801561013957600080fd5b506100de6101483660046114c0565b6102f8565b34801561015957600080fd5b506101206101683660046114f5565b6103ac565b34801561017957600080fd5b5061010b6103b7565b34801561018e57600080fd5b5061010b61019d36600461150e565b6103cb565b3480156101ae57600080fd5b506000546040516001600160a01b0390911681526020016100c2565b3480156101d657600080fd5b5061010b6101e536600461154b565b6103e1565b60006001600160e01b0319821663570ef07360e01b148061021b57506001600160e01b03198216631c537ddf60e21b145b8061022a575061022a826104bf565b92915050565b606061023a6104e4565b6102468585858561054d565b90505b949350505050565b6102596104e4565b805182511461028d57815181516040516321d1e13360e11b8152600481019290925260248201526044015b60405180910390fd5b60005b82518110156102dd576102d58382815181106102ae576102ae611566565b60200260200101518383815181106102c8576102c8611566565b6020026020010151610692565b600101610290565b505050565b60606102ec6104e4565b610246858585856106e7565b6060815167ffffffffffffffff81111561031457610314611058565b60405190808252806020026020018201604052801561034757816020015b60608152602001906001900390816103325790505b50905060005b82518110156103a65761037883828151811061036b5761036b611566565b60200260200101516107f2565b82828151811061038a5761038a611566565b602002602001018190525061039f8160010190565b905061034d565b50919050565b606061022a826107f2565b6103bf6104e4565b6103c9600061045a565b565b6103d36104e4565b6103dd8282610692565b5050565b6103e96104e4565b6001600160a01b03811661044e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610284565b6104578161045a565b50565b6000546001600160a01b0382811691161461045757600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160e01b03198216631c537ddf60e21b148061022a575061022a82610894565b336104f76000546001600160a01b031690565b6001600160a01b0316146103c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610284565b60608351855114158061056e57508251845114158061056e57508151835114155b1561058c57604051633ff55f4d60e01b815260040160405180910390fd5b6000855167ffffffffffffffff8111156105a8576105a8611058565b6040519080825280602002602001820160405280156105db57816020015b60608152602001906001900390816105c65790505b50905060005b86518110156106885761065a8782815181106105ff576105ff611566565b602002602001015187838151811061061957610619611566565b602002602001015187848151811061063357610633611566565b602002602001015187858151811061064d5761064d611566565b60200260200101516106e7565b82828151811061066c5761066c611566565b60200260200101819052506106818160010190565b90506105e1565b5095945050505050565b60008281526001602052604090206106aa82826115fe565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516106db91906114ad565b60405180910390a25050565b606084610700576106f98484846108c9565b9050610249565b6001850361073a576001600160a01b0384161561073057604051631820c12560e11b815260040160405180910390fd5b6106f983836109ee565b60028503610774576001600160a01b0384161561076a57604051631820c12560e11b815260040160405180910390fd5b6106f98383610aef565b600385036107a557821561079b576040516339795e3560e11b815260040160405180910390fd5b6106f98483610bda565b600485036107d65782156107cc57604051635ac8313560e01b815260040160405180910390fd5b6106f98483610cd2565b604051631d60ecef60e21b815260048101869052602401610284565b600081815260016020526040902080546060919061080f9061157c565b80601f016020809104026020016040519081016040528092919081815260200182805461083b9061157c565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b50505050509050919050565b60006001600160e01b0319821663570ef07360e01b148061022a57506301ffc9a760e01b6001600160e01b031983161461022a565b6060824710156108f5576040516301bf351f60e31b815247600482015260248101849052604401610284565b826001600160a01b03851660007f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e61092c866116be565b6040516001600160e01b0319909116815260200160405180910390a4600080856001600160a01b0316858560405161096491906116f5565b60006040518083038185875af1925050503d80600081146109a1576040519150601f19603f3d011682016040523d82523d6000602084013e6109a6565b606091505b50915091506109e482826040518060400160405280601681526020017522a9219b991aac1d102ab735b737bbb71022b93937b960511b815250610d7e565b9695505050505050565b606082471015610a1a576040516301bf351f60e31b815247600482015260248101849052604401610284565b8151600003610a3c5760405163b81cd8d960e01b815260040160405180910390fd5b600082516020840185f090506001600160a01b038116610a6f57604051630b07489b60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606083901b166020820152603401604051602081830303815290604052915083816001600160a01b031660017fa1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c36000801b604051610ae091815260200190565b60405180910390a45092915050565b60608151600003610b135760405163b81cd8d960e01b815260040160405180910390fd5b6000610b2c8360208551610b279190611727565b610dbe565b90506000610b4984600060208751610b449190611727565b610e1c565b90506000610b58868484610f29565b6040516bffffffffffffffffffffffff19606083901b166020820152909150603401604051602081830303815290604052935085816001600160a01b031660027fa1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c386604051610bc991815260200190565b60405180910390a450505092915050565b606060006001600160a01b03841660037f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e610c14866116be565b6040516001600160e01b0319909116815260200160405180910390a4600080846001600160a01b031684604051610c4b91906116f5565b600060405180830381855afa9150503d8060008114610c86576040519150601f19603f3d011682016040523d82523d6000602084013e610c8b565b606091505b5091509150610cc982826040518060400160405280601681526020017522a9219b991aac1d102ab735b737bbb71022b93937b960511b815250610d7e565b95945050505050565b606060006001600160a01b03841660047f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e610d0c866116be565b6040516001600160e01b0319909116815260200160405180910390a4600080846001600160a01b031684604051610d4391906116f5565b600060405180830381855af49150503d8060008114610c86576040519150601f19603f3d011682016040523d82523d6000602084013e610c8b565b60608315610d8d575081610db7565b825115610d9d5782518084602001fd5b8160405162461bcd60e51b815260040161028491906114ad565b9392505050565b6000610dcb82602061173a565b83511015610e135760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610284565b50016020015190565b606081610e2a81601f61173a565b1015610e695760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610284565b610e73828461173a565b84511015610eb75760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610284565b606082158015610ed65760405191506000825260208201604052610f20565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610f0f578051835260209283019201610ef7565b5050858452601f01601f1916604052505b50949350505050565b60008084471015610f7c5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610284565b8251600003610fcd5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610284565b8383516020850187f590506001600160a01b0381166102495760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610284565b60006020828403121561104057600080fd5b81356001600160e01b031981168114610db757600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561109757611097611058565b604052919050565b600067ffffffffffffffff8211156110b9576110b9611058565b5060051b60200190565b600082601f8301126110d457600080fd5b813560206110e96110e48361109f565b61106e565b82815260059290921b8401810191818101908684111561110857600080fd5b8286015b84811015611123578035835291830191830161110c565b509695505050505050565b80356001600160a01b038116811461114557600080fd5b919050565b600082601f83011261115b57600080fd5b813567ffffffffffffffff81111561117557611175611058565b611188601f8201601f191660200161106e565b81815284602083860101111561119d57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126111cb57600080fd5b813560206111db6110e48361109f565b82815260059290921b840181019181810190868411156111fa57600080fd5b8286015b8481101561112357803567ffffffffffffffff81111561121e5760008081fd5b61122c8986838b010161114a565b8452509183019183016111fe565b6000806000806080858703121561125057600080fd5b843567ffffffffffffffff8082111561126857600080fd5b611274888389016110c3565b955060209150818701358181111561128b57600080fd5b8701601f8101891361129c57600080fd5b80356112aa6110e48261109f565b81815260059190911b8201840190848101908b8311156112c957600080fd5b928501925b828410156112ee576112df8461112e565b825292850192908501906112ce565b9750505050604087013591508082111561130757600080fd5b611313888389016110c3565b9350606087013591508082111561132957600080fd5b50611336878288016111ba565b91505092959194509250565b60005b8381101561135d578181015183820152602001611345565b50506000910152565b6000815180845261137e816020860160208601611342565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156113e757603f198886030184526113d5858351611366565b945092850192908501906001016113b9565b5092979650505050505050565b6000806040838503121561140757600080fd5b823567ffffffffffffffff8082111561141f57600080fd5b61142b868387016110c3565b9350602085013591508082111561144157600080fd5b5061144e858286016111ba565b9150509250929050565b6000806000806080858703121561146e57600080fd5b8435935061147e6020860161112e565b925060408501359150606085013567ffffffffffffffff8111156114a157600080fd5b6113368782880161114a565b602081526000610db76020830184611366565b6000602082840312156114d257600080fd5b813567ffffffffffffffff8111156114e957600080fd5b610249848285016110c3565b60006020828403121561150757600080fd5b5035919050565b6000806040838503121561152157600080fd5b82359150602083013567ffffffffffffffff81111561153f57600080fd5b61144e8582860161114a565b60006020828403121561155d57600080fd5b610db78261112e565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061159057607f821691505b6020821081036103a657634e487b7160e01b600052602260045260246000fd5b601f8211156102dd57600081815260208120601f850160051c810160208610156115d75750805b601f850160051c820191505b818110156115f6578281556001016115e3565b505050505050565b815167ffffffffffffffff81111561161857611618611058565b61162c81611626845461157c565b846115b0565b602080601f83116001811461166157600084156116495750858301515b600019600386901b1c1916600185901b1785556115f6565b600085815260208120601f198616915b8281101561169057888601518255948401946001909101908401611671565b50858210156116ae5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b805160208201516001600160e01b031980821692919060048310156116ed5780818460040360031b1b83161693505b505050919050565b60008251611707818460208701611342565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561022a5761022a611711565b8082018082111561022a5761022a61171156fea264697066735822122037375dc9b591872f73ada1b2ccab3e840eaa376f8168563b159ae4e5f33f82ad64736f6c63430008110033",
    "sourceMap": "547:791:171:-:0;;;708:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;756:22:171;;748:73;;;;-1:-1:-1;;;748:73:171;;511:2:202;748:73:171;;;493:21:202;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:202;;;633:36;686:19;;748:73:171;;;;;;;;831:32;854:8;831:22;;;;;:32;;:::i;:::-;708:162;547:791;;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;2012:165;1948:235;:::o;14:290:202:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:202;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:202:o;309:402::-;547:791:171;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100915760003560e01c806354f6127f1161005957806354f6127f1461014d578063715018a61461016d5780637f23690c146101825780638da5cb5b146101a2578063f2fde38b146101ca57600080fd5b806301ffc9a71461009657806313ced88d146100cb57806314a6e293146100eb57806344c028fe1461010d5780634e3e6e9c1461012d575b600080fd5b3480156100a257600080fd5b506100b66100b136600461102e565b6101ea565b60405190151581526020015b60405180910390f35b6100de6100d936600461123a565b610230565b6040516100c29190611392565b3480156100f757600080fd5b5061010b6101063660046113f4565b610251565b005b61012061011b366004611458565b6102e2565b6040516100c291906114ad565b34801561013957600080fd5b506100de6101483660046114c0565b6102f8565b34801561015957600080fd5b506101206101683660046114f5565b6103ac565b34801561017957600080fd5b5061010b6103b7565b34801561018e57600080fd5b5061010b61019d36600461150e565b6103cb565b3480156101ae57600080fd5b506000546040516001600160a01b0390911681526020016100c2565b3480156101d657600080fd5b5061010b6101e536600461154b565b6103e1565b60006001600160e01b0319821663570ef07360e01b148061021b57506001600160e01b03198216631c537ddf60e21b145b8061022a575061022a826104bf565b92915050565b606061023a6104e4565b6102468585858561054d565b90505b949350505050565b6102596104e4565b805182511461028d57815181516040516321d1e13360e11b8152600481019290925260248201526044015b60405180910390fd5b60005b82518110156102dd576102d58382815181106102ae576102ae611566565b60200260200101518383815181106102c8576102c8611566565b6020026020010151610692565b600101610290565b505050565b60606102ec6104e4565b610246858585856106e7565b6060815167ffffffffffffffff81111561031457610314611058565b60405190808252806020026020018201604052801561034757816020015b60608152602001906001900390816103325790505b50905060005b82518110156103a65761037883828151811061036b5761036b611566565b60200260200101516107f2565b82828151811061038a5761038a611566565b602002602001018190525061039f8160010190565b905061034d565b50919050565b606061022a826107f2565b6103bf6104e4565b6103c9600061045a565b565b6103d36104e4565b6103dd8282610692565b5050565b6103e96104e4565b6001600160a01b03811661044e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610284565b6104578161045a565b50565b6000546001600160a01b0382811691161461045757600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160e01b03198216631c537ddf60e21b148061022a575061022a82610894565b336104f76000546001600160a01b031690565b6001600160a01b0316146103c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610284565b60608351855114158061056e57508251845114158061056e57508151835114155b1561058c57604051633ff55f4d60e01b815260040160405180910390fd5b6000855167ffffffffffffffff8111156105a8576105a8611058565b6040519080825280602002602001820160405280156105db57816020015b60608152602001906001900390816105c65790505b50905060005b86518110156106885761065a8782815181106105ff576105ff611566565b602002602001015187838151811061061957610619611566565b602002602001015187848151811061063357610633611566565b602002602001015187858151811061064d5761064d611566565b60200260200101516106e7565b82828151811061066c5761066c611566565b60200260200101819052506106818160010190565b90506105e1565b5095945050505050565b60008281526001602052604090206106aa82826115fe565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516106db91906114ad565b60405180910390a25050565b606084610700576106f98484846108c9565b9050610249565b6001850361073a576001600160a01b0384161561073057604051631820c12560e11b815260040160405180910390fd5b6106f983836109ee565b60028503610774576001600160a01b0384161561076a57604051631820c12560e11b815260040160405180910390fd5b6106f98383610aef565b600385036107a557821561079b576040516339795e3560e11b815260040160405180910390fd5b6106f98483610bda565b600485036107d65782156107cc57604051635ac8313560e01b815260040160405180910390fd5b6106f98483610cd2565b604051631d60ecef60e21b815260048101869052602401610284565b600081815260016020526040902080546060919061080f9061157c565b80601f016020809104026020016040519081016040528092919081815260200182805461083b9061157c565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b50505050509050919050565b60006001600160e01b0319821663570ef07360e01b148061022a57506301ffc9a760e01b6001600160e01b031983161461022a565b6060824710156108f5576040516301bf351f60e31b815247600482015260248101849052604401610284565b826001600160a01b03851660007f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e61092c866116be565b6040516001600160e01b0319909116815260200160405180910390a4600080856001600160a01b0316858560405161096491906116f5565b60006040518083038185875af1925050503d80600081146109a1576040519150601f19603f3d011682016040523d82523d6000602084013e6109a6565b606091505b50915091506109e482826040518060400160405280601681526020017522a9219b991aac1d102ab735b737bbb71022b93937b960511b815250610d7e565b9695505050505050565b606082471015610a1a576040516301bf351f60e31b815247600482015260248101849052604401610284565b8151600003610a3c5760405163b81cd8d960e01b815260040160405180910390fd5b600082516020840185f090506001600160a01b038116610a6f57604051630b07489b60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606083901b166020820152603401604051602081830303815290604052915083816001600160a01b031660017fa1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c36000801b604051610ae091815260200190565b60405180910390a45092915050565b60608151600003610b135760405163b81cd8d960e01b815260040160405180910390fd5b6000610b2c8360208551610b279190611727565b610dbe565b90506000610b4984600060208751610b449190611727565b610e1c565b90506000610b58868484610f29565b6040516bffffffffffffffffffffffff19606083901b166020820152909150603401604051602081830303815290604052935085816001600160a01b031660027fa1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c386604051610bc991815260200190565b60405180910390a450505092915050565b606060006001600160a01b03841660037f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e610c14866116be565b6040516001600160e01b0319909116815260200160405180910390a4600080846001600160a01b031684604051610c4b91906116f5565b600060405180830381855afa9150503d8060008114610c86576040519150601f19603f3d011682016040523d82523d6000602084013e610c8b565b606091505b5091509150610cc982826040518060400160405280601681526020017522a9219b991aac1d102ab735b737bbb71022b93937b960511b815250610d7e565b95945050505050565b606060006001600160a01b03841660047f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e610d0c866116be565b6040516001600160e01b0319909116815260200160405180910390a4600080846001600160a01b031684604051610d4391906116f5565b600060405180830381855af49150503d8060008114610c86576040519150601f19603f3d011682016040523d82523d6000602084013e610c8b565b60608315610d8d575081610db7565b825115610d9d5782518084602001fd5b8160405162461bcd60e51b815260040161028491906114ad565b9392505050565b6000610dcb82602061173a565b83511015610e135760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610284565b50016020015190565b606081610e2a81601f61173a565b1015610e695760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610284565b610e73828461173a565b84511015610eb75760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610284565b606082158015610ed65760405191506000825260208201604052610f20565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610f0f578051835260209283019201610ef7565b5050858452601f01601f1916604052505b50949350505050565b60008084471015610f7c5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610284565b8251600003610fcd5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610284565b8383516020850187f590506001600160a01b0381166102495760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610284565b60006020828403121561104057600080fd5b81356001600160e01b031981168114610db757600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561109757611097611058565b604052919050565b600067ffffffffffffffff8211156110b9576110b9611058565b5060051b60200190565b600082601f8301126110d457600080fd5b813560206110e96110e48361109f565b61106e565b82815260059290921b8401810191818101908684111561110857600080fd5b8286015b84811015611123578035835291830191830161110c565b509695505050505050565b80356001600160a01b038116811461114557600080fd5b919050565b600082601f83011261115b57600080fd5b813567ffffffffffffffff81111561117557611175611058565b611188601f8201601f191660200161106e565b81815284602083860101111561119d57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126111cb57600080fd5b813560206111db6110e48361109f565b82815260059290921b840181019181810190868411156111fa57600080fd5b8286015b8481101561112357803567ffffffffffffffff81111561121e5760008081fd5b61122c8986838b010161114a565b8452509183019183016111fe565b6000806000806080858703121561125057600080fd5b843567ffffffffffffffff8082111561126857600080fd5b611274888389016110c3565b955060209150818701358181111561128b57600080fd5b8701601f8101891361129c57600080fd5b80356112aa6110e48261109f565b81815260059190911b8201840190848101908b8311156112c957600080fd5b928501925b828410156112ee576112df8461112e565b825292850192908501906112ce565b9750505050604087013591508082111561130757600080fd5b611313888389016110c3565b9350606087013591508082111561132957600080fd5b50611336878288016111ba565b91505092959194509250565b60005b8381101561135d578181015183820152602001611345565b50506000910152565b6000815180845261137e816020860160208601611342565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156113e757603f198886030184526113d5858351611366565b945092850192908501906001016113b9565b5092979650505050505050565b6000806040838503121561140757600080fd5b823567ffffffffffffffff8082111561141f57600080fd5b61142b868387016110c3565b9350602085013591508082111561144157600080fd5b5061144e858286016111ba565b9150509250929050565b6000806000806080858703121561146e57600080fd5b8435935061147e6020860161112e565b925060408501359150606085013567ffffffffffffffff8111156114a157600080fd5b6113368782880161114a565b602081526000610db76020830184611366565b6000602082840312156114d257600080fd5b813567ffffffffffffffff8111156114e957600080fd5b610249848285016110c3565b60006020828403121561150757600080fd5b5035919050565b6000806040838503121561152157600080fd5b82359150602083013567ffffffffffffffff81111561153f57600080fd5b61144e8582860161114a565b60006020828403121561155d57600080fd5b610db78261112e565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061159057607f821691505b6020821081036103a657634e487b7160e01b600052602260045260246000fd5b601f8211156102dd57600081815260208120601f850160051c810160208610156115d75750805b601f850160051c820191505b818110156115f6578281556001016115e3565b505050505050565b815167ffffffffffffffff81111561161857611618611058565b61162c81611626845461157c565b846115b0565b602080601f83116001811461166157600084156116495750858301515b600019600386901b1c1916600185901b1785556115f6565b600085815260208120601f198616915b8281101561169057888601518255948401946001909101908401611671565b50858210156116ae5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b805160208201516001600160e01b031980821692919060048310156116ed5780818460040360031b1b83161693505b505050919050565b60008251611707818460208701611342565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561022a5761022a611711565b8082018082111561022a5761022a61171156fea264697066735822122037375dc9b591872f73ada1b2ccab3e840eaa376f8168563b159ae4e5f33f82ad64736f6c63430008110033",
    "sourceMap": "547:791:171:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:335;;;;;;;;;;-1:-1:-1;1001:335:171;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1001:335:171;;;;;;;;1688:291:172;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1839:433:174:-;;;;;;;;;;-1:-1:-1;1839:433:174;;;;;:::i;:::-;;:::i;:::-;;1386:252:172;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;;;;;-1:-1:-1;1241:370:174;;;;;:::i;:::-;;:::i;1058:133::-;;;;;;;;;;-1:-1:-1;1058:133:174;;;;;:::i;:::-;;:::i;1178:92:177:-;;;;;;;;;;;;;:::i;1661:128:174:-;;;;;;;;;;-1:-1:-1;1661:128:174;;;;;:::i;:::-;;:::i;601:85:177:-;;;;;;;;;;-1:-1:-1;647:7:177;673:6;601:85;;-1:-1:-1;;;;;673:6:177;;;8754:51:202;;8742:2;8727:18;601:85:177;8608:203:202;1419:189:177;;;;;;;;;;-1:-1:-1;1419:189:177;;;;;:::i;:::-;;:::i;1001:335:171:-;1152:4;-1:-1:-1;;;;;;1191:35:171;;-1:-1:-1;;;1191:35:171;;:86;;-1:-1:-1;;;;;;;1242:35:171;;-1:-1:-1;;;1242:35:171;1191:86;:138;;;;1293:36;1317:11;1293:23;:36::i;:::-;1172:157;1001:335;-1:-1:-1;;1001:335:171:o;1688:291:172:-;1891:14;805:13:177;:11;:13::i;:::-;1924:48:172::1;1933:14;1949:7;1958:6;1966:5;1924:8;:48::i;:::-;1917:55;;828:1:177;1688:291:172::0;;;;;;:::o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;9181:25:202::0;;;;9222:18;;;9215:34;9154:18;;2036:72:174::1;;;;;;;;1973:146;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;1386:252:172:-;1556:12;805:13:177;:11;:13::i;:::-;1587:44:172::1;1596:13;1611:6;1619:5;1626:4;1587:8;:44::i;1241:370:174:-:0;1346:25;1412:8;:15;1400:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;1058:133::-;1121:22;1167:17;1176:7;1167:8;:17::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;:::-;1661:128:::0;;:::o;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;9594:2:202;1499:73:177::1;::::0;::::1;9576:21:202::0;9633:2;9613:18;;;9606:30;9672:34;9652:18;;;9645:62;-1:-1:-1;;;9723:18:202;;;9716:36;9769:19;;1499:73:177::1;9392:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;1948:235::-;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;1948:235;:::o;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;;3115:36;3139:11;3115:23;:36::i;1681:128:177:-;1755:10;1744:7;647;673:6;-1:-1:-1;;;;;673:6:177;;601:85;1744:7;-1:-1:-1;;;;;1744:21:177;;1736:66;;;;-1:-1:-1;;;1736:66:177;;10001:2:202;1736:66:177;;;9983:21:202;;;10020:18;;;10013:30;10079:34;10059:18;;;10052:62;10131:18;;1736:66:177;9799:356:202;4433:700:172;4621:14;4689:7;:14;4664;:21;:39;;:121;;;;4738:6;:13;4720:7;:14;:31;;:64;;;;4772:5;:12;4755:6;:13;:29;;4720:64;4647:197;;;4803:41;;-1:-1:-1;;;4803:41:172;;;;;;;;;;;4647:197;4855:21;4891:14;:21;4879:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4855:58;;4929:9;4924:179;4948:14;:21;4944:1;:25;4924:179;;;5032:60;5041:14;5056:1;5041:17;;;;;;;;:::i;:::-;;;;;;;5060:7;5068:1;5060:10;;;;;;;;:::i;:::-;;;;;;;5072:6;5079:1;5072:9;;;;;;;;:::i;:::-;;;;;;;5083:5;5089:1;5083:8;;;;;;;;:::i;:::-;;;;;;;5032;:60::i;:::-;5020:6;5027:1;5020:9;;;;;;;;:::i;:::-;;;;;;:72;;;;4975:29;5002:1;2841::174;2837:5;;2717:142;4975:29:172;4971:33;;4924:179;;;-1:-1:-1;5120:6:172;4433:700;-1:-1:-1;;;;;4433:700:172:o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;2424:1863:172:-;2579:12;2623:13;2619:104;;2679:33;2692:6;2700:5;2707:4;2679:12;:33::i;:::-;2672:40;;;;2619:104;437:1:176;2767:13:172;:44;2763:209;;-1:-1:-1;;;;;2831:20:172;;;2827:87;;2860:54;;-1:-1:-1;;;2860:54:172;;;;;;;;;;;2827:87;2935:26;2949:5;2956:4;2935:13;:26::i;2763:209::-;479:1:176;3017:13:172;:45;3013:211;;-1:-1:-1;;;;;3082:20:172;;;3078:87;;3111:54;;-1:-1:-1;;;3111:54:172;;;;;;;;;;;3078:87;3186:27;3201:5;3208:4;3186:14;:27::i;3013:211::-;524:1:176;3260:13:172;:48;3256:195;;3328:10;;3324:63;;3347:40;;-1:-1:-1;;;3347:40:172;;;;;;;;;;;3324:63;3408:32;3427:6;3435:4;3408:18;:32::i;3256:195::-;571:1:176;4023:13:172;:50;4019:201;;4093:10;;4089:65;;4112:42;;-1:-1:-1;;;4112:42:172;;;;;;;;;;;4089:65;4175:34;4196:6;4204:4;4175:20;:34::i;4019:201::-;4237:43;;-1:-1:-1;;;4237:43:172;;;;;12889:25:202;;;12862:18;;4237:43:172;12743:177:202;2278:129:174;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;2027:221:172:-;2143:4;-1:-1:-1;;;;;;2166:35:172;;-1:-1:-1;;;2166:35:172;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;2205:36:172;829:155:196;5423:593:172;5551:19;5610:5;5586:21;:29;5582:124;;;5638:57;;-1:-1:-1;;;5638:57:172;;5666:21;5638:57;;;9181:25:202;9222:18;;;9215:34;;;9154:18;;5638:57:172;9007:248:202;5582:124:172;5756:5;-1:-1:-1;;;;;5721:55:172;;396:1:176;5721:55:172;5763:12;5770:4;5763:12;:::i;:::-;5721:55;;-1:-1:-1;;;;;;13453:33:202;;;13435:52;;13423:2;13408:18;5721:55:172;;;;;;;5847:12;5861:23;5888:6;-1:-1:-1;;;;;5888:11:172;5907:5;5914:4;5888:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5846:73;;;;5938:71;5963:7;5972:10;5938:71;;;;;;;;;;;;;-1:-1:-1;;;5938:71:172;;;:24;:71::i;:::-;5929:80;5423:593;-1:-1:-1;;;;;;5423:593:172:o;7782:852::-;7895:24;7959:5;7935:21;:29;7931:124;;;7987:57;;-1:-1:-1;;;7987:57:172;;8015:21;7987:57;;;9181:25:202;9222:18;;;9215:34;;;9154:18;;7987:57:172;9007:248:202;7931:124:172;8069:12;:19;8092:1;8069:24;8065:98;;8116:36;;-1:-1:-1;;;8116:36:172;;;;;;;;;;;8065:98;8173:23;8349:12;8343:19;8336:4;8322:12;8318:23;8311:5;8304:59;8285:78;-1:-1:-1;;;;;;8387:29:172;;8383:101;;8439:34;;-1:-1:-1;;;8439:34:172;;;;;;;;;;;8383:101;8508:33;;-1:-1:-1;;13939:2:202;13935:15;;;13931:53;8508:33:172;;;13919:66:202;14001:12;;8508:33:172;;;;;;;;;;;;8494:47;;8609:5;8592:15;-1:-1:-1;;;;;8556:71:172;437:1:176;8556:71:172;8624:1;8616:10;;8556:71;;;;12889:25:202;;12877:2;12862:18;;12743:177;8556:71:172;;;;;;;;7921:713;7782:852;;;;:::o;8998:641::-;9112:24;9152:12;:19;9175:1;9152:24;9148:98;;9199:36;;-1:-1:-1;;;9199:36:172;;;;;;;;;;;9148:98;9256:12;9271:58;9290:12;9326:2;9304:12;:19;:24;;;;:::i;:::-;9271:18;:58::i;:::-;9256:73;;9339:21;9363:57;9378:12;9392:1;9417:2;9395:12;:19;:24;;;;:::i;:::-;9363:14;:57::i;:::-;9339:81;;9430:23;9456:37;9471:5;9478:4;9484:8;9456:14;:37::i;:::-;9518:33;;-1:-1:-1;;13939:2:202;13935:15;;;13931:53;9518:33:172;;;13919:66:202;9430:63:172;;-1:-1:-1;14001:12:202;;9518:33:172;;;;;;;;;;;;9504:47;;9620:5;9603:15;-1:-1:-1;;;;;9566:66:172;479:1:176;9566:66:172;9627:4;9566:66;;;;12889:25:202;;12877:2;12862:18;;12743:177;9566:66:172;;;;;;;;9138:501;;;8998:641;;;;:::o;6284:436::-;6395:19;6472:1;-1:-1:-1;;;;;6431:57:172;;524:1:176;6431:57:172;6475:12;6482:4;6475:12;:::i;:::-;6431:57;;-1:-1:-1;;;;;;13453:33:202;;;13435:52;;13423:2;13408:18;6431:57:172;;;;;;;6559:12;6573:23;6600:6;-1:-1:-1;;;;;6600:17:172;6618:4;6600:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6558:65;;;;6642:71;6667:7;6676:10;6642:71;;;;;;;;;;;;;-1:-1:-1;;;6642:71:172;;;:24;:71::i;:::-;6633:80;6284:436;-1:-1:-1;;;;;6284:436:172:o;6996:442::-;7109:19;7188:1;-1:-1:-1;;;;;7145:59:172;;571:1:176;7145:59:172;7191:12;7198:4;7191:12;:::i;:::-;7145:59;;-1:-1:-1;;;;;;13453:33:202;;;13435:52;;13423:2;13408:18;7145:59:172;;;;;;;7275:12;7289:23;7316:6;-1:-1:-1;;;;;7316:19:172;7336:4;7316:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7561:742:191;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:191;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:191;;;;;;;;:::i;7872:415::-;7561:742;;;;;:::o;14814:320:200:-;14893:7;14937:11;:6;14946:2;14937:11;:::i;:::-;14920:6;:13;:28;;14912:62;;;;-1:-1:-1;;;14912:62:200;;15027:2:202;14912:62:200;;;15009:21:202;15066:2;15046:18;;;15039:30;-1:-1:-1;;;15085:18:202;;;15078:51;15146:18;;14912:62:200;14825:345:202;14912:62:200;-1:-1:-1;15058:30:200;15074:4;15058:30;15052:37;;14814:320::o;9457:2804::-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;15377:2:202;9631:50:200;;;15359:21:202;15416:2;15396:18;;;15389:30;-1:-1:-1;;;15435:18:202;;;15428:44;15489:18;;9631:50:200;15175:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;15720:2:202;9691:63:200;;;15702:21:202;15759:2;15739:18;;;15732:30;-1:-1:-1;;;15778:18:202;;;15771:47;15835:18;;9691:63:200;15518:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;1081:552:192:-;1198:7;1217:12;1272:6;1247:21;:31;;1239:73;;;;-1:-1:-1;;;1239:73:192;;16066:2:202;1239:73:192;;;16048:21:202;16105:2;16085:18;;;16078:30;16144:31;16124:18;;;16117:59;16193:18;;1239:73:192;15864:353:202;1239:73:192;1330:8;:15;1349:1;1330:20;1322:65;;;;-1:-1:-1;;;1322:65:192;;16424:2:202;1322:65:192;;;16406:21:202;;;16443:18;;;16436:30;16502:34;16482:18;;;16475:62;16554:18;;1322:65:192;16222:356:202;1322:65:192;1525:4;1514:8;1508:15;1501:4;1491:8;1487:19;1479:6;1471:59;1463:67;-1:-1:-1;;;;;;1557:18:192;;1549:56;;;;-1:-1:-1;;;1549:56:192;;16785:2:202;1549:56:192;;;16767:21:202;16824:2;16804:18;;;16797:30;16863:27;16843:18;;;16836:55;16908:18;;1549:56:192;16583:349:202;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:127;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:275;700:2;694:9;765:2;746:13;;-1:-1:-1;;742:27:202;730:40;;800:18;785:34;;821:22;;;782:62;779:88;;;847:18;;:::i;:::-;883:2;876:22;629:275;;-1:-1:-1;629:275:202:o;909:183::-;969:4;1002:18;994:6;991:30;988:56;;;1024:18;;:::i;:::-;-1:-1:-1;1069:1:202;1065:14;1081:4;1061:25;;909:183::o;1097:662::-;1151:5;1204:3;1197:4;1189:6;1185:17;1181:27;1171:55;;1222:1;1219;1212:12;1171:55;1258:6;1245:20;1284:4;1308:60;1324:43;1364:2;1324:43;:::i;:::-;1308:60;:::i;:::-;1402:15;;;1488:1;1484:10;;;;1472:23;;1468:32;;;1433:12;;;;1512:15;;;1509:35;;;1540:1;1537;1530:12;1509:35;1576:2;1568:6;1564:15;1588:142;1604:6;1599:3;1596:15;1588:142;;;1670:17;;1658:30;;1708:12;;;;1621;;1588:142;;;-1:-1:-1;1748:5:202;1097:662;-1:-1:-1;;;;;;1097:662:202:o;1764:173::-;1832:20;;-1:-1:-1;;;;;1881:31:202;;1871:42;;1861:70;;1927:1;1924;1917:12;1861:70;1764:173;;;:::o;1942:530::-;1984:5;2037:3;2030:4;2022:6;2018:17;2014:27;2004:55;;2055:1;2052;2045:12;2004:55;2091:6;2078:20;2117:18;2113:2;2110:26;2107:52;;;2139:18;;:::i;:::-;2183:55;2226:2;2207:13;;-1:-1:-1;;2203:27:202;2232:4;2199:38;2183:55;:::i;:::-;2263:2;2254:7;2247:19;2309:3;2302:4;2297:2;2289:6;2285:15;2281:26;2278:35;2275:55;;;2326:1;2323;2316:12;2275:55;2391:2;2384:4;2376:6;2372:17;2365:4;2356:7;2352:18;2339:55;2439:1;2414:16;;;2432:4;2410:27;2403:38;;;;2418:7;1942:530;-1:-1:-1;;;1942:530:202:o;2477:886::-;2529:5;2582:3;2575:4;2567:6;2563:17;2559:27;2549:55;;2600:1;2597;2590:12;2549:55;2636:6;2623:20;2662:4;2686:60;2702:43;2742:2;2702:43;:::i;2686:60::-;2780:15;;;2866:1;2862:10;;;;2850:23;;2846:32;;;2811:12;;;;2890:15;;;2887:35;;;2918:1;2915;2908:12;2887:35;2954:2;2946:6;2942:15;2966:368;2982:6;2977:3;2974:15;2966:368;;;3068:3;3055:17;3104:18;3091:11;3088:35;3085:125;;;3164:1;3193:2;3189;3182:14;3085:125;3235:56;3287:3;3282:2;3268:11;3260:6;3256:24;3252:33;3235:56;:::i;:::-;3223:69;;-1:-1:-1;3312:12:202;;;;2999;;2966:368;;3368:1604;3563:6;3571;3579;3587;3640:3;3628:9;3619:7;3615:23;3611:33;3608:53;;;3657:1;3654;3647:12;3608:53;3697:9;3684:23;3726:18;3767:2;3759:6;3756:14;3753:34;;;3783:1;3780;3773:12;3753:34;3806:61;3859:7;3850:6;3839:9;3835:22;3806:61;:::i;:::-;3796:71;;3886:2;3876:12;;3941:2;3930:9;3926:18;3913:32;3970:2;3960:8;3957:16;3954:36;;;3986:1;3983;3976:12;3954:36;4009:24;;4064:4;4056:13;;4052:27;-1:-1:-1;4042:55:202;;4093:1;4090;4083:12;4042:55;4129:2;4116:16;4152:60;4168:43;4208:2;4168:43;:::i;4152:60::-;4246:15;;;4328:1;4324:10;;;;4316:19;;4312:28;;;4277:12;;;;4352:19;;;4349:39;;;4384:1;4381;4374:12;4349:39;4408:11;;;;4428:148;4444:6;4439:3;4436:15;4428:148;;;4510:23;4529:3;4510:23;:::i;:::-;4498:36;;4461:12;;;;4554;;;;4428:148;;;4595:5;-1:-1:-1;;;;4653:2:202;4638:18;;4625:32;;-1:-1:-1;4669:16:202;;;4666:36;;;4698:1;4695;4688:12;4666:36;4721:63;4776:7;4765:8;4754:9;4750:24;4721:63;:::i;:::-;4711:73;;4837:2;4826:9;4822:18;4809:32;4793:48;;4866:2;4856:8;4853:16;4850:36;;;4882:1;4879;4872:12;4850:36;;4905:61;4958:7;4947:8;4936:9;4932:24;4905:61;:::i;:::-;4895:71;;;3368:1604;;;;;;;:::o;4977:250::-;5062:1;5072:113;5086:6;5083:1;5080:13;5072:113;;;5162:11;;;5156:18;5143:11;;;5136:39;5108:2;5101:10;5072:113;;;-1:-1:-1;;5219:1:202;5201:16;;5194:27;4977:250::o;5232:270::-;5273:3;5311:5;5305:12;5338:6;5333:3;5326:19;5354:76;5423:6;5416:4;5411:3;5407:14;5400:4;5393:5;5389:16;5354:76;:::i;:::-;5484:2;5463:15;-1:-1:-1;;5459:29:202;5450:39;;;;5491:4;5446:50;;5232:270;-1:-1:-1;;5232:270:202:o;5507:800::-;5667:4;5696:2;5736;5725:9;5721:18;5766:2;5755:9;5748:21;5789:6;5824;5818:13;5855:6;5847;5840:22;5893:2;5882:9;5878:18;5871:25;;5955:2;5945:6;5942:1;5938:14;5927:9;5923:30;5919:39;5905:53;;5993:2;5985:6;5981:15;6014:1;6024:254;6038:6;6035:1;6032:13;6024:254;;;6131:2;6127:7;6115:9;6107:6;6103:22;6099:36;6094:3;6087:49;6159:39;6191:6;6182;6176:13;6159:39;:::i;:::-;6149:49;-1:-1:-1;6256:12:202;;;;6221:15;;;;6060:1;6053:9;6024:254;;;-1:-1:-1;6295:6:202;;5507:800;-1:-1:-1;;;;;;;5507:800:202:o;6312:602::-;6439:6;6447;6500:2;6488:9;6479:7;6475:23;6471:32;6468:52;;;6516:1;6513;6506:12;6468:52;6556:9;6543:23;6585:18;6626:2;6618:6;6615:14;6612:34;;;6642:1;6639;6632:12;6612:34;6665:61;6718:7;6709:6;6698:9;6694:22;6665:61;:::i;:::-;6655:71;;6779:2;6768:9;6764:18;6751:32;6735:48;;6808:2;6798:8;6795:16;6792:36;;;6824:1;6821;6814:12;6792:36;;6847:61;6900:7;6889:8;6878:9;6874:24;6847:61;:::i;:::-;6837:71;;;6312:602;;;;;:::o;6919:531::-;7014:6;7022;7030;7038;7091:3;7079:9;7070:7;7066:23;7062:33;7059:53;;;7108:1;7105;7098:12;7059:53;7144:9;7131:23;7121:33;;7173:38;7207:2;7196:9;7192:18;7173:38;:::i;:::-;7163:48;;7258:2;7247:9;7243:18;7230:32;7220:42;;7313:2;7302:9;7298:18;7285:32;7340:18;7332:6;7329:30;7326:50;;;7372:1;7369;7362:12;7326:50;7395:49;7436:7;7427:6;7416:9;7412:22;7395:49;:::i;7455:217::-;7602:2;7591:9;7584:21;7565:4;7622:44;7662:2;7651:9;7647:18;7639:6;7622:44;:::i;7677:348::-;7761:6;7814:2;7802:9;7793:7;7789:23;7785:32;7782:52;;;7830:1;7827;7820:12;7782:52;7870:9;7857:23;7903:18;7895:6;7892:30;7889:50;;;7935:1;7932;7925:12;7889:50;7958:61;8011:7;8002:6;7991:9;7987:22;7958:61;:::i;8030:180::-;8089:6;8142:2;8130:9;8121:7;8117:23;8113:32;8110:52;;;8158:1;8155;8148:12;8110:52;-1:-1:-1;8181:23:202;;8030:180;-1:-1:-1;8030:180:202:o;8215:388::-;8292:6;8300;8353:2;8341:9;8332:7;8328:23;8324:32;8321:52;;;8369:1;8366;8359:12;8321:52;8405:9;8392:23;8382:33;;8466:2;8455:9;8451:18;8438:32;8493:18;8485:6;8482:30;8479:50;;;8525:1;8522;8515:12;8479:50;8548:49;8589:7;8580:6;8569:9;8565:22;8548:49;:::i;8816:186::-;8875:6;8928:2;8916:9;8907:7;8903:23;8899:32;8896:52;;;8944:1;8941;8934:12;8896:52;8967:29;8986:9;8967:29;:::i;9260:127::-;9321:10;9316:3;9312:20;9309:1;9302:31;9352:4;9349:1;9342:15;9376:4;9373:1;9366:15;10160:380;10239:1;10235:12;;;;10282;;;10303:61;;10357:4;10349:6;10345:17;10335:27;;10303:61;10410:2;10402:6;10399:14;10379:18;10376:38;10373:161;;10456:10;10451:3;10447:20;10444:1;10437:31;10491:4;10488:1;10481:15;10519:4;10516:1;10509:15;10670:544;10771:2;10766:3;10763:11;10760:448;;;10807:1;10832:5;10828:2;10821:17;10877:4;10873:2;10863:19;10947:2;10935:10;10931:19;10928:1;10924:27;10918:4;10914:38;10983:4;10971:10;10968:20;10965:47;;;-1:-1:-1;11006:4:202;10965:47;11061:2;11056:3;11052:12;11049:1;11045:20;11039:4;11035:31;11025:41;;11116:82;11134:2;11127:5;11124:13;11116:82;;;11179:17;;;11160:1;11149:13;11116:82;;;11120:3;;;10670:544;;;:::o;11390:1348::-;11514:3;11508:10;11541:18;11533:6;11530:30;11527:56;;;11563:18;;:::i;:::-;11592:96;11681:6;11641:38;11673:4;11667:11;11641:38;:::i;:::-;11635:4;11592:96;:::i;:::-;11743:4;;11807:2;11796:14;;11824:1;11819:662;;;;12525:1;12542:6;12539:89;;;-1:-1:-1;12594:19:202;;;12588:26;12539:89;-1:-1:-1;;11347:1:202;11343:11;;;11339:24;11335:29;11325:40;11371:1;11367:11;;;11322:57;12641:81;;11789:943;;11819:662;10617:1;10610:14;;;10654:4;10641:18;;-1:-1:-1;;11855:20:202;;;11972:236;11986:7;11983:1;11980:14;11972:236;;;12075:19;;;12069:26;12054:42;;12167:27;;;;12135:1;12123:14;;;;12002:19;;11972:236;;;11976:3;12236:6;12227:7;12224:19;12221:201;;;12297:19;;;12291:26;-1:-1:-1;;12380:1:202;12376:14;;;12392:3;12372:24;12368:37;12364:42;12349:58;12334:74;;12221:201;-1:-1:-1;;;;;12468:1:202;12452:14;;;12448:22;12435:36;;-1:-1:-1;11390:1348:202:o;12925:361::-;13042:12;;13090:4;13079:16;;13073:23;-1:-1:-1;;;;;;13153:11:202;;;;13042:12;13073:23;13187:1;13176:13;;13173:107;;;13267:2;13261;13251:6;13248:1;13244:14;13241:1;13237:22;13233:31;13229:2;13225:40;13221:49;13212:58;;13173:107;;;;12925:361;;;:::o;13498:287::-;13627:3;13665:6;13659:13;13681:66;13740:6;13735:3;13728:4;13720:6;13716:17;13681:66;:::i;:::-;13763:16;;;;;13498:287;-1:-1:-1;;13498:287:202:o;14206:127::-;14267:10;14262:3;14258:20;14255:1;14248:31;14298:4;14295:1;14288:15;14322:4;14319:1;14312:15;14338:128;14405:9;;;14426:11;;;14423:37;;;14440:18;;:::i;14695:125::-;14760:9;;;14781:10;;;14778:36;;;14794:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "execute(uint256,address,uint256,bytes)": "44c028fe",
    "execute(uint256[],address[],uint256[],bytes[])": "13ced88d",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725X_ContractDeploymentFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_CreateOperationsRequireEmptyRecipientAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC725X_InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInStaticCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_NoContractBytecodeProvided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationTypeProvided\",\"type\":\"uint256\"}],\"name\":\"ERC725X_UnknownOperationType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"operationsType\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>\",\"details\":\"Bundles ERC725X and ERC725Y together into one smart contract\",\"errors\":{\"ERC725X_ContractDeploymentFailed()\":[{\"details\":\"reverts when contract deployment via `ERC725X.execute(...)` failed. whether using operation type 1 (CREATE) or 2 (CREATE2).\"}],\"ERC725X_CreateOperationsRequireEmptyRecipientAddress()\":[{\"details\":\"reverts when passing a `to` address while deploying a contract va `ERC725X.execute(...)` whether using operation type 1 (CREATE) or 2 (CREATE2).\"}],\"ERC725X_ExecuteParametersLengthMismatch()\":[{\"details\":\"reverts when there is not the same number of operation, to addresses, value, and data.\"}],\"ERC725X_InsufficientBalance(uint256,uint256)\":[{\"details\":\"reverts when trying to send more native tokens `value` than available in current `balance`.\",\"params\":{\"balance\":\"the balance of the ERC725X contract.\",\"value\":\"the amount of native tokens sent via `ERC725X.execute(...)`.\"}}],\"ERC725X_MsgValueDisallowedInDelegateCall()\":[{\"details\":\"the `value` parameter (= sending native tokens) is not allowed when making a delegatecall via `ERC725X.execute(...)` because msg.value is persisting.\"}],\"ERC725X_MsgValueDisallowedInStaticCall()\":[{\"details\":\"the `value` parameter (= sending native tokens) is not allowed when making a staticcall via `ERC725X.execute(...)` because sending native tokens is a state changing operation.\"}],\"ERC725X_NoContractBytecodeProvided()\":[{\"details\":\"reverts when no contract bytecode was provided as parameter when trying to deploy a contract via `ERC725X.execute(...)`, whether using operation type 1 (CREATE) or 2 (CREATE2).\"}],\"ERC725X_UnknownOperationType(uint256)\":[{\"details\":\"reverts when the `operationTypeProvided` is none of the default operation types available. (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\"}],\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"newOwner\":\"the owner of the contract\"}},\"execute(uint256,address,uint256,bytes)\":{\"details\":\"Generic executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `data` parameter. - deploy a contract by providing its creation bytecode in the `data` parameter. Requirements: - SHOULD only be callable by the owner of the contract set via ERC173. - if a `value` is provided, the contract MUST have at least this amount in its balance to execute successfully. - if the operation type is STATICCALL or DELEGATECALL, `value` SHOULD be 0. - `target` SHOULD be address(0) when deploying a contract. Emits an {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL) Emits a {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)\",\"params\":{\"data\":\"The call data, or the creation bytecode of the contract to deploy\",\"operationType\":\"The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\",\"target\":\"The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\",\"value\":\"The amount of native tokens to transfer (in Wei)\"}},\"execute(uint256[],address[],uint256[],bytes[])\":{\"details\":\"Generic batch executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `datas` parameter. - deploy a contract by providing its creation bytecode in the `datas` parameter. Requirements: - The length of the parameters provided MUST be equal - SHOULD only be callable by the owner of the contract set via ERC173. - if a `values` is provided, the contract MUST have at least this amount in its balance to execute successfully. - if the operation type is STATICCALL or DELEGATECALL, `values` SHOULD be 0. - `targets` SHOULD be address(0) when deploying a contract. Emits an {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL) Emits a {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)\",\"params\":{\"datas\":\"The list of call data, or the creation bytecode of the contract to deploy\",\"operationsType\":\"The list of operations type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\",\"targets\":\"The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\",\"values\":\"The list of native token amounts to transfer (in Wei)\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ERC725 bundle\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"notice\":\"Emitted when deploying a contract\"},\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"},\"Executed(uint256,address,uint256,bytes4)\":{\"notice\":\"Emitted when calling an address (EOA or contract)\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets the owner of the contract\"},\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@erc725/smart-contracts/contracts/ERC725.sol\":\"ERC725\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"node_modules/@erc725/smart-contracts/contracts/ERC725.sol\":{\"keccak256\":\"0x92815604527f6050dad56a0df2440d4a8e17908f1352405fe64520fcf0f6ad6d\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://dc652931c8c4f42fd16ff9718acd9dba06a137084e912bbb16bd3b1c564b0c82\",\"dweb:/ipfs/QmSnr4NsT6xXDJEb13Upbuvo22GVTf2z21wJq4d8fhSFje\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725XCore.sol\":{\"keccak256\":\"0xe88f29873249b0cc1729e6bf63e993e4f6c7c4930753ab1a6769aa95452fb061\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://820d7e23799201d8d4dae26184c78af2316e8b5485fae4097bfce12521454b3e\",\"dweb:/ipfs/Qme7UEyUxUukzsuQBCuAnEeBryRNt8xAcPRXzaGDRGUfDp\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0x5ad1db3b879f7bdc9777bb2bc1f2f58f9a9d41032eab9f70cee9b5ebbbea9a17\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://0914c73bf23f1d954a6704fe454a75b413067371f61c4ad600aa32ef65619f30\",\"dweb:/ipfs/QmYSxfQuaey1P1jpVRa97RVGn32xGM19jZTVSGobFJWtUP\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x62237e1773cbf99739b7019f3772a2ff5360d56edb69751b513237f5fcd78571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39caaa49151a341d9c258a5b7308856d11c8cf349062314eea1e2251f0d1918\",\"dweb:/ipfs/QmcJqGdrHEdiBfB5zuA3ykY1wc2LDNtz8Y88HPEscJe71G\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC725X_ContractDeploymentFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC725X_CreateOperationsRequireEmptyRecipientAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC725X_ExecuteParametersLengthMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725X_InsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC725X_MsgValueDisallowedInDelegateCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC725X_MsgValueDisallowedInStaticCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC725X_NoContractBytecodeProvided"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "operationTypeProvided",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725X_UnknownOperationType"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "operationType",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "operationType",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Executed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "operationsType",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "operationType",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "newOwner": "the owner of the contract"
            }
          },
          "execute(uint256,address,uint256,bytes)": {
            "details": "Generic executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `data` parameter. - deploy a contract by providing its creation bytecode in the `data` parameter. Requirements: - SHOULD only be callable by the owner of the contract set via ERC173. - if a `value` is provided, the contract MUST have at least this amount in its balance to execute successfully. - if the operation type is STATICCALL or DELEGATECALL, `value` SHOULD be 0. - `target` SHOULD be address(0) when deploying a contract. Emits an {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL) Emits a {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)",
            "params": {
              "data": "The call data, or the creation bytecode of the contract to deploy",
              "operationType": "The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4",
              "target": "The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)",
              "value": "The amount of native tokens to transfer (in Wei)"
            }
          },
          "execute(uint256[],address[],uint256[],bytes[])": {
            "details": "Generic batch executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `datas` parameter. - deploy a contract by providing its creation bytecode in the `datas` parameter. Requirements: - The length of the parameters provided MUST be equal - SHOULD only be callable by the owner of the contract set via ERC173. - if a `values` is provided, the contract MUST have at least this amount in its balance to execute successfully. - if the operation type is STATICCALL or DELEGATECALL, `values` SHOULD be 0. - `targets` SHOULD be address(0) when deploying a contract. Emits an {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL) Emits a {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)",
            "params": {
              "datas": "The list of call data, or the creation bytecode of the contract to deploy",
              "operationsType": "The list of operations type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4",
              "targets": "The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).",
              "values": "The list of native token amounts to transfer (in Wei)"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Sets the owner of the contract"
          },
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@erc725/smart-contracts/contracts/ERC725.sol": "ERC725"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@erc725/smart-contracts/contracts/ERC725.sol": {
        "keccak256": "0x92815604527f6050dad56a0df2440d4a8e17908f1352405fe64520fcf0f6ad6d",
        "urls": [
          "bzz-raw://dc652931c8c4f42fd16ff9718acd9dba06a137084e912bbb16bd3b1c564b0c82",
          "dweb:/ipfs/QmSnr4NsT6xXDJEb13Upbuvo22GVTf2z21wJq4d8fhSFje"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725XCore.sol": {
        "keccak256": "0xe88f29873249b0cc1729e6bf63e993e4f6c7c4930753ab1a6769aa95452fb061",
        "urls": [
          "bzz-raw://820d7e23799201d8d4dae26184c78af2316e8b5485fae4097bfce12521454b3e",
          "dweb:/ipfs/Qme7UEyUxUukzsuQBCuAnEeBryRNt8xAcPRXzaGDRGUfDp"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725X.sol": {
        "keccak256": "0x5ad1db3b879f7bdc9777bb2bc1f2f58f9a9d41032eab9f70cee9b5ebbbea9a17",
        "urls": [
          "bzz-raw://0914c73bf23f1d954a6704fe454a75b413067371f61c4ad600aa32ef65619f30",
          "dweb:/ipfs/QmYSxfQuaey1P1jpVRa97RVGn32xGM19jZTVSGobFJWtUP"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Create2.sol": {
        "keccak256": "0x62237e1773cbf99739b7019f3772a2ff5360d56edb69751b513237f5fcd78571",
        "urls": [
          "bzz-raw://f39caaa49151a341d9c258a5b7308856d11c8cf349062314eea1e2251f0d1918",
          "dweb:/ipfs/QmcJqGdrHEdiBfB5zuA3ykY1wc2LDNtz8Y88HPEscJe71G"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@erc725/smart-contracts/contracts/ERC725.sol",
    "id": 42649,
    "exportedSymbols": {
      "ERC165": [
        46531
      ],
      "ERC725": [
        42648
      ],
      "ERC725XCore": [
        43250
      ],
      "ERC725YCore": [
        43508
      ],
      "OwnableUnset": [
        43687
      ],
      "_INTERFACEID_ERC725X": [
        43551
      ],
      "_INTERFACEID_ERC725Y": [
        43554
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:1303:171",
    "nodes": [
      {
        "id": 42583,
        "nodeType": "PragmaDirective",
        "src": "36:23:171",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 42585,
        "nodeType": "ImportDirective",
        "src": "72:78:171",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42649,
        "sourceUnit": 46532,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42584,
              "name": "ERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46531,
              "src": "80:6:171",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42587,
        "nodeType": "ImportDirective",
        "src": "151:55:171",
        "nodes": [],
        "absolutePath": "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol",
        "file": "./custom/OwnableUnset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42649,
        "sourceUnit": 43688,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42586,
              "name": "OwnableUnset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43687,
              "src": "159:12:171",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42589,
        "nodeType": "ImportDirective",
        "src": "207:46:171",
        "nodes": [],
        "absolutePath": "node_modules/@erc725/smart-contracts/contracts/ERC725XCore.sol",
        "file": "./ERC725XCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42649,
        "sourceUnit": 43251,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42588,
              "name": "ERC725XCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43250,
              "src": "215:11:171",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42591,
        "nodeType": "ImportDirective",
        "src": "254:46:171",
        "nodes": [],
        "absolutePath": "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol",
        "file": "./ERC725YCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42649,
        "sourceUnit": 43509,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42590,
              "name": "ERC725YCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43508,
              "src": "262:11:171",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42594,
        "nodeType": "ImportDirective",
        "src": "315:75:171",
        "nodes": [],
        "absolutePath": "node_modules/@erc725/smart-contracts/contracts/constants.sol",
        "file": "./constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42649,
        "sourceUnit": 43582,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42592,
              "name": "_INTERFACEID_ERC725X",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43551,
              "src": "323:20:171",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 42593,
              "name": "_INTERFACEID_ERC725Y",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43554,
              "src": "345:20:171",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42648,
        "nodeType": "ContractDefinition",
        "src": "547:791:171",
        "nodes": [
          {
            "id": 42622,
            "nodeType": "FunctionDefinition",
            "src": "708:162:171",
            "nodes": [],
            "body": {
              "id": 42621,
              "nodeType": "Block",
              "src": "738:132:171",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 42611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42606,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42602,
                          "src": "756:8:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 42609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "776:1:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 42608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "768:7:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 42607,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "768:7:171",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "768:10:171",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "756:22:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 42612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "780:40:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 42605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "748:7:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:73:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42614,
                  "nodeType": "ExpressionStatement",
                  "src": "748:73:171"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42618,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42602,
                        "src": "854:8:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42615,
                        "name": "OwnableUnset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43687,
                        "src": "831:12:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUnset_$43687_$",
                          "typeString": "type(contract OwnableUnset)"
                        }
                      },
                      "id": 42617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "844:9:171",
                      "memberName": "_setOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43686,
                      "src": "831:22:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 42619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:32:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42620,
                  "nodeType": "ExpressionStatement",
                  "src": "831:32:171"
                }
              ]
            },
            "documentation": {
              "id": 42600,
              "nodeType": "StructuredDocumentation",
              "src": "597:106:171",
              "text": " @notice Sets the owner of the contract\n @param newOwner the owner of the contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 42603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42602,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "728:8:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 42622,
                  "src": "720:16:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:171",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "719:18:171"
            },
            "returnParameters": {
              "id": 42604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:171"
            },
            "scope": 42648,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42647,
            "nodeType": "FunctionDefinition",
            "src": "1001:335:171",
            "nodes": [],
            "body": {
              "id": 42646,
              "nodeType": "Block",
              "src": "1162:174:171",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 42644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 42639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 42635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42633,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42625,
                          "src": "1191:11:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 42634,
                          "name": "_INTERFACEID_ERC725X",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43551,
                          "src": "1206:20:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1191:35:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 42638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42636,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42625,
                          "src": "1242:11:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 42637,
                          "name": "_INTERFACEID_ERC725Y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43554,
                          "src": "1257:20:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1242:35:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1191:86:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 42642,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42625,
                          "src": "1317:11:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 42640,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1293:5:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC725_$42648_$",
                            "typeString": "type(contract super ERC725)"
                          }
                        },
                        "id": 42641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1299:17:171",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43507,
                        "src": "1293:23:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 42643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1293:36:171",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1191:138:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 42632,
                  "id": 42645,
                  "nodeType": "Return",
                  "src": "1172:157:171"
                }
              ]
            },
            "baseFunctions": [
              42753,
              43507
            ],
            "documentation": {
              "id": 42623,
              "nodeType": "StructuredDocumentation",
              "src": "959:37:171",
              "text": " @inheritdoc ERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1010:17:171",
            "overrides": {
              "id": 42629,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 42627,
                  "name": "ERC725XCore",
                  "nameLocations": [
                    "1109:11:171"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43250,
                  "src": "1109:11:171"
                },
                {
                  "id": 42628,
                  "name": "ERC725YCore",
                  "nameLocations": [
                    "1122:11:171"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43508,
                  "src": "1122:11:171"
                }
              ],
              "src": "1100:34:171"
            },
            "parameters": {
              "id": 42626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42625,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1035:11:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 42647,
                  "src": "1028:18:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 42624,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:6:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:20:171"
            },
            "returnParameters": {
              "id": 42632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42647,
                  "src": "1152:4:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:4:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:6:171"
            },
            "scope": 42648,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42596,
              "name": "ERC725XCore",
              "nameLocations": [
                "566:11:171"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43250,
              "src": "566:11:171"
            },
            "id": 42597,
            "nodeType": "InheritanceSpecifier",
            "src": "566:11:171"
          },
          {
            "baseName": {
              "id": 42598,
              "name": "ERC725YCore",
              "nameLocations": [
                "579:11:171"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43508,
              "src": "579:11:171"
            },
            "id": 42599,
            "nodeType": "InheritanceSpecifier",
            "src": "579:11:171"
          }
        ],
        "canonicalName": "ERC725",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 42595,
          "nodeType": "StructuredDocumentation",
          "src": "392:154:171",
          "text": " @title ERC725 bundle\n @author Fabian Vogelsteller <fabian@lukso.network>\n @dev Bundles ERC725X and ERC725Y together into one smart contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42648,
          43508,
          43840,
          43250,
          43789,
          46531,
          46594,
          43687
        ],
        "name": "ERC725",
        "nameLocation": "556:6:171",
        "scope": 42649,
        "usedErrors": [
          43696,
          43701,
          43704,
          43707,
          43710,
          43713,
          43716,
          43719,
          43726
        ]
      }
    ],
    "license": "CC0-1.0"
  },
  "id": 171
}