{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506123d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806354f6127f116100b85780637f23690c1161007c5780637f23690c146102a35780638da5cb5b146102b6578063a3b261f2146102cd578063af255b61146102ed578063cf5182ba14610300578063f2fde38b1461031357600080fd5b806354f6127f146102425780636c79b70b1461026257806370a0823114610275578063715018a6146102885780637e87632c1461029057600080fd5b8063217b2270116100ff578063217b2270146101b15780632a3654a4146101dc57806349a6078d146101ef5780634e3e6e9c1461020f578063511b69521461022f57600080fd5b806301ffc9a71461013c578063077f224a146101645780630b0c6d821461017957806314a6e2931461018c57806318160ddd1461019f575b600080fd5b61014f61014a366004611934565b610326565b60405190151581526020015b60405180910390f35b610177610172366004611a3d565b610351565b005b610177610187366004611ab0565b61046d565b61017761019a366004611be2565b61050f565b6002545b60405190815260200161015b565b6101c46101bf366004611c45565b61059b565b6040516001600160a01b03909116815260200161015b565b61014f6101ea366004611ab0565b6105d4565b6102026101fd366004611c45565b6105f0565b60405161015b9190611c5e565b61022261021d366004611cab565b610612565b60405161015b9190611d2f565b61017761023d366004611da1565b6106c5565b610255610250366004611c45565b610714565b60405161015b9190611e19565b610177610270366004611e2c565b61071f565b6101a3610283366004611e68565b61075d565b61017761077e565b61017761029e366004611f47565b610792565b6101776102b1366004611e2c565b610881565b6000546201000090046001600160a01b03166101c4565b6102e06102db366004611e68565b610893565b60405161015b919061200b565b6101776102fb366004612043565b6108b7565b61017761030e366004611ab0565b6108c3565b610177610321366004611e68565b6109ec565b60006001600160e01b0319821663622e7a0160e01b148061034b575061034b82610a65565b92915050565b600054610100900460ff16158080156103715750600054600160ff909116105b8061038b5750303b15801561038b575060005460ff166001145b6103f35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610416576000805461ff0019166101001790555b610421848484610a9a565b8015610467576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006104788261059b565b9050336001600160a01b03821681146104be57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103ea565b6001600160a01b0384166104e557604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036105045750505050565b610467848385610acc565b610517610b5d565b805182511461054657815181516040516321d1e13360e11b8152600481019290925260248201526044016103ea565b60005b82518110156105965761058e838281518110610567576105676120aa565b6020026020010151838381518110610581576105816120aa565b6020026020010151610bbe565b600101610549565b505050565b6000818152600360205260408120546001600160a01b03168061034b57604051635747cd1b60e11b8152600481018490526024016103ea565b60006105df82610cb2565b6105e98383610cea565b9392505050565b60606105fb82610cb2565b600082815260056020526040902061034b90610d33565b606081516001600160401b0381111561062d5761062d61195e565b60405190808252806020026020018201604052801561066057816020015b606081526020019060019003908161064b5790505b50905060005b82518110156106bf57610691838281518110610684576106846120aa565b6020026020010151610d40565b8282815181106106a3576106a36120aa565b60200260200101819052506106b88160010190565b9050610666565b50919050565b336106d08185610cea565b6106ff57604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016103ea565b61070c8686868686610de2565b505050505050565b606061034b82610d40565b6107293383610cea565b61074f57604051631294d2a960e01b8152600481018390523360248201526044016103ea565b6107598282610f6c565b5050565b6001600160a01b038116600090815260046020526040812061034b90611032565b610786610b5d565b610790600061103c565b565b84518451811415806107a5575083518114155b806107b1575082518114155b806107bd575081518114155b156107db576040516393a8311960e01b815260040160405180910390fd5b60005b81811015610878576108708782815181106107fb576107fb6120aa565b6020026020010151878381518110610815576108156120aa565b602002602001015187848151811061082f5761082f6120aa565b6020026020010151878581518110610849576108496120aa565b6020026020010151878681518110610863576108636120aa565b60200260200101516106c5565b6001016107de565b50505050505050565b610889610b5d565b6107598282610bbe565b6001600160a01b038116600090815260046020526040902060609061034b906110b2565b610467848484846110bd565b60006108ce8261059b565b9050336001600160a01b038216811461091457604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103ea565b6001600160a01b03841661093b57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361095a5750505050565b600083815260056020526040812061097290866111d7565b9050806109a4576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016103ea565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b6109f4610b5d565b6001600160a01b038116610a595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ea565b610a628161103c565b50565b60006001600160e01b03198216631c537ddf60e21b148061034b57506301ffc9a760e01b6001600160e01b031983161461034b565b600054610100900460ff16610ac15760405162461bcd60e51b81526004016103ea906120c0565b6105968383836111ec565b6000818152600560205260408120610ae490856112b9565b905080610b16576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016103ea565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b03620100009091041633146107905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ea565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610bfe576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610c3e57604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610c568282612185565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610c9757610c928360006101006112ce565b610c99565b825b604051610ca69190611e19565b60405180910390a25050565b6000818152600360205260409020546001600160a01b0316610a6257604051635747cd1b60e11b8152600481018290526024016103ea565b600080610cf68361059b565b9050806001600160a01b0316846001600160a01b03161480610d2b57506000838152600560205260409020610d2b90856113db565b949350505050565b606060006105e9836113fd565b6000818152600160205260409020805460609190610d5d9061210b565b80601f0160208091040260200160405190810160405280929190818152602001828054610d899061210b565b8015610dd65780601f10610dab57610100808354040283529160200191610dd6565b820191906000526020600020905b815481529060010190602001808311610db957829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610e1457604051635d67d6c160e01b815260040160405180910390fd5b6000610e1f8461059b565b9050856001600160a01b0316816001600160a01b031614610e6d57604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016103ea565b6001600160a01b038516610e94576040516324ecef4d60e01b815260040160405180910390fd5b33610e9f8786611458565b6001600160a01b0387166000908152600460205260409020610ec1908661149f565b506001600160a01b0386166000908152600460205260409020610ee490866114ab565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610f4b9086908a908a90612244565b60405180910390a4610f5f878787866114b7565b610878878787878761158b565b6000610f778361059b565b905033600160026000828254610f8d919061228f565b90915550610f9d90508285611458565b6001600160a01b0382166000908152600460205260409020610fbf908561149f565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061101d90869085908a90612244565b60405180910390a461046782600086866114b7565b600061034b825490565b6000546001600160a01b03828116620100009092041614610a6257600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b606061034b826113fd565b6001600160a01b0384166110e4576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561111d576040516334c7b51160e01b8152600481018490526024016103ea565b3360016002600082825461113191906122a2565b90915550506001600160a01b038516600090815260046020526040902061115890856114ab565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906111ba90869089908990612244565b60405180910390a46111d060008686868661158b565b5050505050565b60006105e9836001600160a01b0384166116c3565b600054610100900460ff166112135760405162461bcd60e51b81526004016103ea906120c0565b61121c81611712565b6112657feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611739565b61128f7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611739565b6105967f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611739565b60006105e9836001600160a01b038416611782565b6060816112dc81601f6122a2565b101561131b5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103ea565b61132582846122a2565b845110156113695760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103ea565b60608215801561138857604051915060008252602082016040526113d2565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156113c15780518352602092830192016113a9565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b038116600090815260018301602052604081205415156105e9565b606081600001805480602002602001604051908101604052809291908181526020018280548015610dd657602002820191906000526020600020905b8154815260200190600101908083116114395750505050509050919050565b60008181526005602052604081209061147082611032565b905060005b818110156111d05760006114898482611875565b9050611496818787610acc565b50600101611475565b60006105e98383611782565b60006105e983836116c3565b6114c884631aed5a8560e21b611881565b15610467576000848484846040516020016114e694939291906122b5565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611544907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401612302565b6000604051808303816000875af1158015611563573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070c919081019061231b565b61159c84631aed5a8560e21b611881565b15611666576000858585846040516020016115ba94939291906122b5565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611618907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612302565b6000604051808303816000875af1158015611637573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261165f919081019061231b565b50506111d0565b816111d0576001600160a01b0384163b1561169f57604051634349776d60e01b81526001600160a01b03851660048201526024016103ea565b604051630317313760e01b81526001600160a01b03851660048201526024016103ea565b600081815260018301602052604081205461170a5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561034b565b50600061034b565b600054610100900460ff166109f45760405162461bcd60e51b81526004016103ea906120c0565b60008281526001602052604090206117518282612185565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610ca69190611e19565b6000818152600183016020526040812054801561186b5760006117a660018361228f565b85549091506000906117ba9060019061228f565b905081811461181f5760008660000182815481106117da576117da6120aa565b90600052602060002001549050808760000184815481106117fd576117fd6120aa565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061183057611830612388565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061034b565b600091505061034b565b60006105e9838361190a565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156118f3575060208210155b80156118ff5750600081115b979650505050505050565b6000826000018281548110611921576119216120aa565b9060005260206000200154905092915050565b60006020828403121561194657600080fd5b81356001600160e01b0319811681146105e957600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561199c5761199c61195e565b604052919050565b60006001600160401b038211156119bd576119bd61195e565b50601f01601f191660200190565b600082601f8301126119dc57600080fd5b81356119ef6119ea826119a4565b611974565b818152846020838601011115611a0457600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114611a3857600080fd5b919050565b600080600060608486031215611a5257600080fd5b83356001600160401b0380821115611a6957600080fd5b611a75878388016119cb565b94506020860135915080821115611a8b57600080fd5b50611a98868287016119cb565b925050611aa760408501611a21565b90509250925092565b60008060408385031215611ac357600080fd5b611acc83611a21565b946020939093013593505050565b60006001600160401b03821115611af357611af361195e565b5060051b60200190565b600082601f830112611b0e57600080fd5b81356020611b1e6119ea83611ada565b82815260059290921b84018101918181019086841115611b3d57600080fd5b8286015b84811015611b585780358352918301918301611b41565b509695505050505050565b600082601f830112611b7457600080fd5b81356020611b846119ea83611ada565b82815260059290921b84018101918181019086841115611ba357600080fd5b8286015b84811015611b585780356001600160401b03811115611bc65760008081fd5b611bd48986838b01016119cb565b845250918301918301611ba7565b60008060408385031215611bf557600080fd5b82356001600160401b0380821115611c0c57600080fd5b611c1886838701611afd565b93506020850135915080821115611c2e57600080fd5b50611c3b85828601611b63565b9150509250929050565b600060208284031215611c5757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611c9f5783516001600160a01b031683529284019291840191600101611c7a565b50909695505050505050565b600060208284031215611cbd57600080fd5b81356001600160401b03811115611cd357600080fd5b610d2b84828501611afd565b60005b83811015611cfa578181015183820152602001611ce2565b50506000910152565b60008151808452611d1b816020860160208601611cdf565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d8457603f19888603018452611d72858351611d03565b94509285019290850190600101611d56565b5092979650505050505050565b80358015158114611a3857600080fd5b600080600080600060a08688031215611db957600080fd5b611dc286611a21565b9450611dd060208701611a21565b935060408601359250611de560608701611d91565b915060808601356001600160401b03811115611e0057600080fd5b611e0c888289016119cb565b9150509295509295909350565b6020815260006105e96020830184611d03565b60008060408385031215611e3f57600080fd5b8235915060208301356001600160401b03811115611e5c57600080fd5b611c3b858286016119cb565b600060208284031215611e7a57600080fd5b6105e982611a21565b600082601f830112611e9457600080fd5b81356020611ea46119ea83611ada565b82815260059290921b84018101918181019086841115611ec357600080fd5b8286015b84811015611b5857611ed881611a21565b8352918301918301611ec7565b600082601f830112611ef657600080fd5b81356020611f066119ea83611ada565b82815260059290921b84018101918181019086841115611f2557600080fd5b8286015b84811015611b5857611f3a81611d91565b8352918301918301611f29565b600080600080600060a08688031215611f5f57600080fd5b85356001600160401b0380821115611f7657600080fd5b611f8289838a01611e83565b96506020880135915080821115611f9857600080fd5b611fa489838a01611e83565b95506040880135915080821115611fba57600080fd5b611fc689838a01611afd565b94506060880135915080821115611fdc57600080fd5b611fe889838a01611ee5565b93506080880135915080821115611ffe57600080fd5b50611e0c88828901611b63565b6020808252825182820181905260009190848201906040850190845b81811015611c9f57835183529284019291840191600101612027565b6000806000806080858703121561205957600080fd5b61206285611a21565b93506020850135925061207760408601611d91565b915060608501356001600160401b0381111561209257600080fd5b61209e878288016119cb565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600181811c9082168061211f57607f821691505b6020821081036106bf57634e487b7160e01b600052602260045260246000fd5b601f82111561059657600081815260208120601f850160051c810160208610156121665750805b601f850160051c820191505b8181101561070c57828155600101612172565b81516001600160401b0381111561219e5761219e61195e565b6121b2816121ac845461210b565b8461213f565b602080601f8311600181146121e757600084156121cf5750858301515b600019600386901b1c1916600185901b17855561070c565b600085815260208120601f198616915b82811015612216578886015182559484019460019091019084016121f7565b50858210156122345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152821515602082015260606040820181905260009061227090830184611d03565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561034b5761034b612279565b8082018082111561034b5761034b612279565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083602883015282516122f2816048850160208701611cdf565b9190910160480195945050505050565b828152604060208201526000610d2b6040830184611d03565b60006020828403121561232d57600080fd5b81516001600160401b0381111561234357600080fd5b8201601f8101841361235457600080fd5b80516123626119ea826119a4565b81815285602083850101111561237757600080fd5b612270826020830160208601611cdf565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220735ec21523d3e66bdc2333e48b82a2ccb63e8f1a24c99135f42cac5686a69ccf64736f6c63430008110033",
    "sourceMap": "307:485:140:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806354f6127f116100b85780637f23690c1161007c5780637f23690c146102a35780638da5cb5b146102b6578063a3b261f2146102cd578063af255b61146102ed578063cf5182ba14610300578063f2fde38b1461031357600080fd5b806354f6127f146102425780636c79b70b1461026257806370a0823114610275578063715018a6146102885780637e87632c1461029057600080fd5b8063217b2270116100ff578063217b2270146101b15780632a3654a4146101dc57806349a6078d146101ef5780634e3e6e9c1461020f578063511b69521461022f57600080fd5b806301ffc9a71461013c578063077f224a146101645780630b0c6d821461017957806314a6e2931461018c57806318160ddd1461019f575b600080fd5b61014f61014a366004611934565b610326565b60405190151581526020015b60405180910390f35b610177610172366004611a3d565b610351565b005b610177610187366004611ab0565b61046d565b61017761019a366004611be2565b61050f565b6002545b60405190815260200161015b565b6101c46101bf366004611c45565b61059b565b6040516001600160a01b03909116815260200161015b565b61014f6101ea366004611ab0565b6105d4565b6102026101fd366004611c45565b6105f0565b60405161015b9190611c5e565b61022261021d366004611cab565b610612565b60405161015b9190611d2f565b61017761023d366004611da1565b6106c5565b610255610250366004611c45565b610714565b60405161015b9190611e19565b610177610270366004611e2c565b61071f565b6101a3610283366004611e68565b61075d565b61017761077e565b61017761029e366004611f47565b610792565b6101776102b1366004611e2c565b610881565b6000546201000090046001600160a01b03166101c4565b6102e06102db366004611e68565b610893565b60405161015b919061200b565b6101776102fb366004612043565b6108b7565b61017761030e366004611ab0565b6108c3565b610177610321366004611e68565b6109ec565b60006001600160e01b0319821663622e7a0160e01b148061034b575061034b82610a65565b92915050565b600054610100900460ff16158080156103715750600054600160ff909116105b8061038b5750303b15801561038b575060005460ff166001145b6103f35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610416576000805461ff0019166101001790555b610421848484610a9a565b8015610467576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006104788261059b565b9050336001600160a01b03821681146104be57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103ea565b6001600160a01b0384166104e557604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036105045750505050565b610467848385610acc565b610517610b5d565b805182511461054657815181516040516321d1e13360e11b8152600481019290925260248201526044016103ea565b60005b82518110156105965761058e838281518110610567576105676120aa565b6020026020010151838381518110610581576105816120aa565b6020026020010151610bbe565b600101610549565b505050565b6000818152600360205260408120546001600160a01b03168061034b57604051635747cd1b60e11b8152600481018490526024016103ea565b60006105df82610cb2565b6105e98383610cea565b9392505050565b60606105fb82610cb2565b600082815260056020526040902061034b90610d33565b606081516001600160401b0381111561062d5761062d61195e565b60405190808252806020026020018201604052801561066057816020015b606081526020019060019003908161064b5790505b50905060005b82518110156106bf57610691838281518110610684576106846120aa565b6020026020010151610d40565b8282815181106106a3576106a36120aa565b60200260200101819052506106b88160010190565b9050610666565b50919050565b336106d08185610cea565b6106ff57604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016103ea565b61070c8686868686610de2565b505050505050565b606061034b82610d40565b6107293383610cea565b61074f57604051631294d2a960e01b8152600481018390523360248201526044016103ea565b6107598282610f6c565b5050565b6001600160a01b038116600090815260046020526040812061034b90611032565b610786610b5d565b610790600061103c565b565b84518451811415806107a5575083518114155b806107b1575082518114155b806107bd575081518114155b156107db576040516393a8311960e01b815260040160405180910390fd5b60005b81811015610878576108708782815181106107fb576107fb6120aa565b6020026020010151878381518110610815576108156120aa565b602002602001015187848151811061082f5761082f6120aa565b6020026020010151878581518110610849576108496120aa565b6020026020010151878681518110610863576108636120aa565b60200260200101516106c5565b6001016107de565b50505050505050565b610889610b5d565b6107598282610bbe565b6001600160a01b038116600090815260046020526040902060609061034b906110b2565b610467848484846110bd565b60006108ce8261059b565b9050336001600160a01b038216811461091457604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103ea565b6001600160a01b03841661093b57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361095a5750505050565b600083815260056020526040812061097290866111d7565b9050806109a4576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016103ea565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b6109f4610b5d565b6001600160a01b038116610a595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ea565b610a628161103c565b50565b60006001600160e01b03198216631c537ddf60e21b148061034b57506301ffc9a760e01b6001600160e01b031983161461034b565b600054610100900460ff16610ac15760405162461bcd60e51b81526004016103ea906120c0565b6105968383836111ec565b6000818152600560205260408120610ae490856112b9565b905080610b16576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016103ea565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b03620100009091041633146107905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ea565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610bfe576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610c3e57604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610c568282612185565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610c9757610c928360006101006112ce565b610c99565b825b604051610ca69190611e19565b60405180910390a25050565b6000818152600360205260409020546001600160a01b0316610a6257604051635747cd1b60e11b8152600481018290526024016103ea565b600080610cf68361059b565b9050806001600160a01b0316846001600160a01b03161480610d2b57506000838152600560205260409020610d2b90856113db565b949350505050565b606060006105e9836113fd565b6000818152600160205260409020805460609190610d5d9061210b565b80601f0160208091040260200160405190810160405280929190818152602001828054610d899061210b565b8015610dd65780601f10610dab57610100808354040283529160200191610dd6565b820191906000526020600020905b815481529060010190602001808311610db957829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610e1457604051635d67d6c160e01b815260040160405180910390fd5b6000610e1f8461059b565b9050856001600160a01b0316816001600160a01b031614610e6d57604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016103ea565b6001600160a01b038516610e94576040516324ecef4d60e01b815260040160405180910390fd5b33610e9f8786611458565b6001600160a01b0387166000908152600460205260409020610ec1908661149f565b506001600160a01b0386166000908152600460205260409020610ee490866114ab565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610f4b9086908a908a90612244565b60405180910390a4610f5f878787866114b7565b610878878787878761158b565b6000610f778361059b565b905033600160026000828254610f8d919061228f565b90915550610f9d90508285611458565b6001600160a01b0382166000908152600460205260409020610fbf908561149f565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061101d90869085908a90612244565b60405180910390a461046782600086866114b7565b600061034b825490565b6000546001600160a01b03828116620100009092041614610a6257600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b606061034b826113fd565b6001600160a01b0384166110e4576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561111d576040516334c7b51160e01b8152600481018490526024016103ea565b3360016002600082825461113191906122a2565b90915550506001600160a01b038516600090815260046020526040902061115890856114ab565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906111ba90869089908990612244565b60405180910390a46111d060008686868661158b565b5050505050565b60006105e9836001600160a01b0384166116c3565b600054610100900460ff166112135760405162461bcd60e51b81526004016103ea906120c0565b61121c81611712565b6112657feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611739565b61128f7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611739565b6105967f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611739565b60006105e9836001600160a01b038416611782565b6060816112dc81601f6122a2565b101561131b5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103ea565b61132582846122a2565b845110156113695760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103ea565b60608215801561138857604051915060008252602082016040526113d2565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156113c15780518352602092830192016113a9565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b038116600090815260018301602052604081205415156105e9565b606081600001805480602002602001604051908101604052809291908181526020018280548015610dd657602002820191906000526020600020905b8154815260200190600101908083116114395750505050509050919050565b60008181526005602052604081209061147082611032565b905060005b818110156111d05760006114898482611875565b9050611496818787610acc565b50600101611475565b60006105e98383611782565b60006105e983836116c3565b6114c884631aed5a8560e21b611881565b15610467576000848484846040516020016114e694939291906122b5565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611544907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401612302565b6000604051808303816000875af1158015611563573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070c919081019061231b565b61159c84631aed5a8560e21b611881565b15611666576000858585846040516020016115ba94939291906122b5565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611618907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612302565b6000604051808303816000875af1158015611637573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261165f919081019061231b565b50506111d0565b816111d0576001600160a01b0384163b1561169f57604051634349776d60e01b81526001600160a01b03851660048201526024016103ea565b604051630317313760e01b81526001600160a01b03851660048201526024016103ea565b600081815260018301602052604081205461170a5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561034b565b50600061034b565b600054610100900460ff166109f45760405162461bcd60e51b81526004016103ea906120c0565b60008281526001602052604090206117518282612185565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610ca69190611e19565b6000818152600183016020526040812054801561186b5760006117a660018361228f565b85549091506000906117ba9060019061228f565b905081811461181f5760008660000182815481106117da576117da6120aa565b90600052602060002001549050808760000184815481106117fd576117fd6120aa565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061183057611830612388565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061034b565b600091505061034b565b60006105e9838361190a565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156118f3575060208210155b80156118ff5750600081115b979650505050505050565b6000826000018281548110611921576119216120aa565b9060005260206000200154905092915050565b60006020828403121561194657600080fd5b81356001600160e01b0319811681146105e957600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561199c5761199c61195e565b604052919050565b60006001600160401b038211156119bd576119bd61195e565b50601f01601f191660200190565b600082601f8301126119dc57600080fd5b81356119ef6119ea826119a4565b611974565b818152846020838601011115611a0457600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114611a3857600080fd5b919050565b600080600060608486031215611a5257600080fd5b83356001600160401b0380821115611a6957600080fd5b611a75878388016119cb565b94506020860135915080821115611a8b57600080fd5b50611a98868287016119cb565b925050611aa760408501611a21565b90509250925092565b60008060408385031215611ac357600080fd5b611acc83611a21565b946020939093013593505050565b60006001600160401b03821115611af357611af361195e565b5060051b60200190565b600082601f830112611b0e57600080fd5b81356020611b1e6119ea83611ada565b82815260059290921b84018101918181019086841115611b3d57600080fd5b8286015b84811015611b585780358352918301918301611b41565b509695505050505050565b600082601f830112611b7457600080fd5b81356020611b846119ea83611ada565b82815260059290921b84018101918181019086841115611ba357600080fd5b8286015b84811015611b585780356001600160401b03811115611bc65760008081fd5b611bd48986838b01016119cb565b845250918301918301611ba7565b60008060408385031215611bf557600080fd5b82356001600160401b0380821115611c0c57600080fd5b611c1886838701611afd565b93506020850135915080821115611c2e57600080fd5b50611c3b85828601611b63565b9150509250929050565b600060208284031215611c5757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611c9f5783516001600160a01b031683529284019291840191600101611c7a565b50909695505050505050565b600060208284031215611cbd57600080fd5b81356001600160401b03811115611cd357600080fd5b610d2b84828501611afd565b60005b83811015611cfa578181015183820152602001611ce2565b50506000910152565b60008151808452611d1b816020860160208601611cdf565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d8457603f19888603018452611d72858351611d03565b94509285019290850190600101611d56565b5092979650505050505050565b80358015158114611a3857600080fd5b600080600080600060a08688031215611db957600080fd5b611dc286611a21565b9450611dd060208701611a21565b935060408601359250611de560608701611d91565b915060808601356001600160401b03811115611e0057600080fd5b611e0c888289016119cb565b9150509295509295909350565b6020815260006105e96020830184611d03565b60008060408385031215611e3f57600080fd5b8235915060208301356001600160401b03811115611e5c57600080fd5b611c3b858286016119cb565b600060208284031215611e7a57600080fd5b6105e982611a21565b600082601f830112611e9457600080fd5b81356020611ea46119ea83611ada565b82815260059290921b84018101918181019086841115611ec357600080fd5b8286015b84811015611b5857611ed881611a21565b8352918301918301611ec7565b600082601f830112611ef657600080fd5b81356020611f066119ea83611ada565b82815260059290921b84018101918181019086841115611f2557600080fd5b8286015b84811015611b5857611f3a81611d91565b8352918301918301611f29565b600080600080600060a08688031215611f5f57600080fd5b85356001600160401b0380821115611f7657600080fd5b611f8289838a01611e83565b96506020880135915080821115611f9857600080fd5b611fa489838a01611e83565b95506040880135915080821115611fba57600080fd5b611fc689838a01611afd565b94506060880135915080821115611fdc57600080fd5b611fe889838a01611ee5565b93506080880135915080821115611ffe57600080fd5b50611e0c88828901611b63565b6020808252825182820181905260009190848201906040850190845b81811015611c9f57835183529284019291840191600101612027565b6000806000806080858703121561205957600080fd5b61206285611a21565b93506020850135925061207760408601611d91565b915060608501356001600160401b0381111561209257600080fd5b61209e878288016119cb565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600181811c9082168061211f57607f821691505b6020821081036106bf57634e487b7160e01b600052602260045260246000fd5b601f82111561059657600081815260208120601f850160051c810160208610156121665750805b601f850160051c820191505b8181101561070c57828155600101612172565b81516001600160401b0381111561219e5761219e61195e565b6121b2816121ac845461210b565b8461213f565b602080601f8311600181146121e757600084156121cf5750858301515b600019600386901b1c1916600185901b17855561070c565b600085815260208120601f198616915b82811015612216578886015182559484019460019091019084016121f7565b50858210156122345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152821515602082015260606040820181905260009061227090830184611d03565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561034b5761034b612279565b8082018082111561034b5761034b612279565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083602883015282516122f2816048850160208701611cdf565b9190910160480195945050505050565b828152604060208201526000610d2b6040830184611d03565b60006020828403121561232d57600080fd5b81516001600160401b0381111561234357600080fd5b8201601f8101841361235457600080fd5b80516123626119ea826119a4565b81815285602083850101111561237757600080fd5b612270826020830160208601611cdf565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220735ec21523d3e66bdc2333e48b82a2ccb63e8f1a24c99135f42cac5686a69ccf64736f6c63430008110033",
    "sourceMap": "307:485:140:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:253:67;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1140:253:67;;;;;;;;395:222:140;;;;;;:::i;:::-;;:::i;:::-;;3461:587:66;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;5129:25:202;;;5117:2;5102:18;1690:92:66;4983:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5514:32:202;;;5496:51;;5484:2;5469:18;2082:259:66;5350:203:202;4119:188:66;;;;;;:::i;:::-;;:::i;4378:174::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;1058:133:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;439:222:69:-;;;;;;:::i;:::-;;:::i;1885:126:66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;;;;-1:-1:-1;;;;;673:6:177;601:85;;2412:136:66;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;623:167:140:-;;;;;;:::i;:::-;;:::i;2654:736:66:-;;;;;;:::i;:::-;;:::i;1419:189:177:-;;;;;;:::i;:::-;;:::i;1140:253:67:-;1287:4;-1:-1:-1;;;;;;1314:32:67;;-1:-1:-1;;;1314:32:67;;:72;;;1350:36;1374:11;1350:23;:36::i;:::-;1307:79;1140:253;-1:-1:-1;;1140:253:67:o;395:222:140:-;3111:19:181;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:181;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:181;1476:19:182;:23;;;3219:66:181;;-1:-1:-1;3268:12:181;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:181;;13490:2:202;3157:201:181;;;13472:21:202;13529:2;13509:18;;;13502:30;13568:34;13548:18;;;13541:62;-1:-1:-1;;;13619:18:202;;;13612:44;13673:19;;3157:201:181;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:181;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:181;;;;;3394:65;534:76:140::1;587:4;593:6;601:8;534:52;:76::i;:::-;3483:14:181::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:181;;;3553:14;;-1:-1:-1;13855:36:202;;3553:14:181;;13843:2:202;13828:18;3553:14:181;;;;;;;3479:99;3101:483;395:222:140;;;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;14160:15:202;;;3682:46:66;;;14142:34:202;14192:18;;;14185:34;;;14255:15;;14235:18;;;14228:43;14077:18;;3682:46:66;13902:375:202;3635:104:66;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;14456:25:202::0;;;;14497:18;;;14490:34;14429:18;;2036:72:174::1;14282:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;5129:25:202;;;5102:18;;2265:31:66;4983:177:202;4119:188:66;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;4378:174::-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;15023:25:202;;;-1:-1:-1;;;;;15084:32:202;;15064:18;;;15057:60;14996:18;;5357:39:66;14849:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;439:222:69:-;511:39;530:10;542:7;511:18;:39::i;:::-;506:119;;573:41;;-1:-1:-1;;;573:41:69;;;;;15023:25:202;;;603:10:69;15064:18:202;;;15057:60;14996:18;;573:41:69;14849:274:202;506:119:69;634:20;640:7;649:4;634:5;:20::i;:::-;439:222;;:::o;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;2412:136:66:-:0;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;623:167:140:-;752:31;758:2;762:7;771:5;778:4;752:5;:31::i;2654:736:66:-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;14160:15:202;;;2878:46:66;;;14142:34:202;14192:18;;;14185:34;;;14255:15;;14235:18;;;14228:43;14077:18;;2878:46:66;13902:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;15320:32:202;;3270:48:66;;;15302:51:202;15369:18;;;15362:34;;;15275:18;;3270:48:66;15128:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;15609:2:202;1499:73:177::1;::::0;::::1;15591:21:202::0;15648:2;15628:18;;;15621:30;15687:34;15667:18;;;15660:62;-1:-1:-1;;;15738:18:202;;;15731:36;15784:19;;1499:73:177::1;15407:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;824:249:67;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;991:75:67::1;1040:5;1047:7;1056:9;991:48;:75::i;6284:333:66:-:0;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;15320:32:202;;6507:42:66;;;15302:51:202;15369:18;;;15362:34;;;15275:18;;6507:42:66;15128:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;;;;;1755:10;1744:21;1736:66;;;;-1:-1:-1;;;1736:66:177;;16428:2:202;1736:66:177;;;16410:21:202;;;16447:18;;;16440:30;16506:34;16486:18;;;16479:62;16558:18;;1736:66:177;16226:356:202;1464:517:31;1563:31;;;1559:416;;1617:26;;-1:-1:-1;;;1617:26:31;;;;;;;;;;;1559:416;1664:33;;;1660:315;;1720:28;;-1:-1:-1;;;1720:28:31;;;;;;;;;;;1660:315;1779:15;;;;:6;:15;;;;;:27;1797:9;1779:15;:27;:::i;:::-;;1854:7;1825:139;1899:3;1879:9;:16;:23;;:71;;1917:33;1932:9;1943:1;1946:3;1917:14;:33::i;:::-;1879:71;;;1905:9;1879:71;1825:139;;;;;;:::i;:::-;;;;;;;;1464:517;;:::o;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;5129:25:202;;;5102:18;;8149:31:66;4983:177:202;4710:273:66;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;14160:15:202;;;10476:44:66;;;14142:34:202;14192:18;;;14185:34;;;14255:15;;14235:18;;;14228:43;14077:18;;10476:44:66;13902:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;9316:575::-;9394:18;9415:21;9428:7;9415:12;:21::i;:::-;9394:42;-1:-1:-1;9465:10:66;9599:1;9580:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;9611:36:66;;-1:-1:-1;9627:10:66;9639:7;9611:15;:36::i;:::-;-1:-1:-1;;;;;9658:24:66;;;;;;:12;:24;;;;;:40;;9690:7;9658:31;:40::i;:::-;-1:-1:-1;9715:21:66;;;;:12;:21;;;;;;9708:28;;-1:-1:-1;;;;;;9708:28:66;;;9752:64;9728:7;;9715:21;-1:-1:-1;;;;;9752:64:66;;;;;;;9761:8;;9715:21;;9811:4;;9752:64;:::i;:::-;;;;;;;;9827:57;9846:10;9866:1;9870:7;9879:4;9827:18;:57::i;6538:115:199:-;6601:7;6627:19;6635:3;4444:18;;4362:107;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;;;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;2070:6;2090:17;;;-1:-1:-1;;;;;;2090:17:177;;;;;2126:40;;2070:6;;;;;;;2090:17;;2070:6;;2126:40;;;2037:140;1948:235;:::o;7664:124:199:-;7727:16;7762:19;7770:3;7762:7;:19::i;8425:700:66:-;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;5129:25:202;;;5102:18;;8701:33:66;4983:177:202;8658:87:66;8774:10;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;:::-;8555:570;8425:700;;;;:::o;8028:150:199:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;694:472:31:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;852:42:31::1;884:9;852:31;:42::i;:::-;956:78;231:66:29;971:29:31;;1002:31;;;;;;;;;;;;;-1:-1:-1::0;;;1002:31:31::1;;::::0;956:14:::1;:78::i;:::-;1045:50;476:66:29;1088:5:31::0;1045:14:::1;:50::i;:::-;1105:54;619:66:29;1150:7:31::0;1105:14:::1;:54::i;8346:156:199:-:0;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;20167:2:202;9631:50:200;;;20149:21:202;20206:2;20186:18;;;20179:30;-1:-1:-1;;;20225:18:202;;;20218:44;20279:18;;9631:50:200;19965:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;20510:2:202;9691:63:200;;;20492:21:202;20549:2;20529:18;;;20522:30;-1:-1:-1;;;20568:18:202;;;20561:47;20625:18;;9691:63:200;20308:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;6693:933:66:-;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;5818:123::-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;12480:681::-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;5514:32:202;;12997:55:66;;;5496:51:202;5469:18;;12997:55:66;5350:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;5514:32:202;;13098::66;;;5496:51:202;5469:18;;13098:32:66;5350:203:202;2113:404:199;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;743:233:175;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;2685:1388:199:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;4680:811:1:-;4846:105;;;-1:-1:-1;;;;;;22476:33:202;;4846:105:1;;;;22458:52:202;;;;4846:105:1;;;;;;;;;;22431:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;4811:118:199:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:127;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:275;700:2;694:9;765:2;746:13;;-1:-1:-1;;742:27:202;730:40;;-1:-1:-1;;;;;785:34:202;;821:22;;;782:62;779:88;;;847:18;;:::i;:::-;883:2;876:22;629:275;;-1:-1:-1;629:275:202:o;909:187::-;958:4;-1:-1:-1;;;;;983:6:202;980:30;977:56;;;1013:18;;:::i;:::-;-1:-1:-1;1079:2:202;1058:15;-1:-1:-1;;1054:29:202;1085:4;1050:40;;909:187::o;1101:464::-;1144:5;1197:3;1190:4;1182:6;1178:17;1174:27;1164:55;;1215:1;1212;1205:12;1164:55;1251:6;1238:20;1282:49;1298:32;1327:2;1298:32;:::i;:::-;1282:49;:::i;:::-;1356:2;1347:7;1340:19;1402:3;1395:4;1390:2;1382:6;1378:15;1374:26;1371:35;1368:55;;;1419:1;1416;1409:12;1368:55;1484:2;1477:4;1469:6;1465:17;1458:4;1449:7;1445:18;1432:55;1532:1;1507:16;;;1525:4;1503:27;1496:38;;;;1511:7;1101:464;-1:-1:-1;;;1101:464:202:o;1570:173::-;1638:20;;-1:-1:-1;;;;;1687:31:202;;1677:42;;1667:70;;1733:1;1730;1723:12;1667:70;1570:173;;;:::o;1748:617::-;1845:6;1853;1861;1914:2;1902:9;1893:7;1889:23;1885:32;1882:52;;;1930:1;1927;1920:12;1882:52;1970:9;1957:23;-1:-1:-1;;;;;2040:2:202;2032:6;2029:14;2026:34;;;2056:1;2053;2046:12;2026:34;2079:50;2121:7;2112:6;2101:9;2097:22;2079:50;:::i;:::-;2069:60;;2182:2;2171:9;2167:18;2154:32;2138:48;;2211:2;2201:8;2198:16;2195:36;;;2227:1;2224;2217:12;2195:36;;2250:52;2294:7;2283:8;2272:9;2268:24;2250:52;:::i;:::-;2240:62;;;2321:38;2355:2;2344:9;2340:18;2321:38;:::i;:::-;2311:48;;1748:617;;;;;:::o;2370:254::-;2438:6;2446;2499:2;2487:9;2478:7;2474:23;2470:32;2467:52;;;2515:1;2512;2505:12;2467:52;2538:29;2557:9;2538:29;:::i;:::-;2528:39;2614:2;2599:18;;;;2586:32;;-1:-1:-1;;;2370:254:202:o;2629:183::-;2689:4;-1:-1:-1;;;;;2714:6:202;2711:30;2708:56;;;2744:18;;:::i;:::-;-1:-1:-1;2789:1:202;2785:14;2801:4;2781:25;;2629:183::o;2817:662::-;2871:5;2924:3;2917:4;2909:6;2905:17;2901:27;2891:55;;2942:1;2939;2932:12;2891:55;2978:6;2965:20;3004:4;3028:60;3044:43;3084:2;3044:43;:::i;3028:60::-;3122:15;;;3208:1;3204:10;;;;3192:23;;3188:32;;;3153:12;;;;3232:15;;;3229:35;;;3260:1;3257;3250:12;3229:35;3296:2;3288:6;3284:15;3308:142;3324:6;3319:3;3316:15;3308:142;;;3390:17;;3378:30;;3428:12;;;;3341;;3308:142;;;-1:-1:-1;3468:5:202;2817:662;-1:-1:-1;;;;;;2817:662:202:o;3484:887::-;3536:5;3589:3;3582:4;3574:6;3570:17;3566:27;3556:55;;3607:1;3604;3597:12;3556:55;3643:6;3630:20;3669:4;3693:60;3709:43;3749:2;3709:43;:::i;3693:60::-;3787:15;;;3873:1;3869:10;;;;3857:23;;3853:32;;;3818:12;;;;3897:15;;;3894:35;;;3925:1;3922;3915:12;3894:35;3961:2;3953:6;3949:15;3973:369;3989:6;3984:3;3981:15;3973:369;;;4075:3;4062:17;-1:-1:-1;;;;;4098:11:202;4095:35;4092:125;;;4171:1;4200:2;4196;4189:14;4092:125;4242:57;4295:3;4290:2;4276:11;4268:6;4264:24;4260:33;4242:57;:::i;:::-;4230:70;;-1:-1:-1;4320:12:202;;;;4006;;3973:369;;4376:602;4503:6;4511;4564:2;4552:9;4543:7;4539:23;4535:32;4532:52;;;4580:1;4577;4570:12;4532:52;4620:9;4607:23;-1:-1:-1;;;;;4690:2:202;4682:6;4679:14;4676:34;;;4706:1;4703;4696:12;4676:34;4729:61;4782:7;4773:6;4762:9;4758:22;4729:61;:::i;:::-;4719:71;;4843:2;4832:9;4828:18;4815:32;4799:48;;4872:2;4862:8;4859:16;4856:36;;;4888:1;4885;4878:12;4856:36;;4911:61;4964:7;4953:8;4942:9;4938:24;4911:61;:::i;:::-;4901:71;;;4376:602;;;;;:::o;5165:180::-;5224:6;5277:2;5265:9;5256:7;5252:23;5248:32;5245:52;;;5293:1;5290;5283:12;5245:52;-1:-1:-1;5316:23:202;;5165:180;-1:-1:-1;5165:180:202:o;5558:658::-;5729:2;5781:21;;;5851:13;;5754:18;;;5873:22;;;5700:4;;5729:2;5952:15;;;;5926:2;5911:18;;;5700:4;5995:195;6009:6;6006:1;6003:13;5995:195;;;6074:13;;-1:-1:-1;;;;;6070:39:202;6058:52;;6165:15;;;;6130:12;;;;6106:1;6024:9;5995:195;;;-1:-1:-1;6207:3:202;;5558:658;-1:-1:-1;;;;;;5558:658:202:o;6221:348::-;6305:6;6358:2;6346:9;6337:7;6333:23;6329:32;6326:52;;;6374:1;6371;6364:12;6326:52;6414:9;6401:23;-1:-1:-1;;;;;6439:6:202;6436:30;6433:50;;;6479:1;6476;6469:12;6433:50;6502:61;6555:7;6546:6;6535:9;6531:22;6502:61;:::i;6574:250::-;6659:1;6669:113;6683:6;6680:1;6677:13;6669:113;;;6759:11;;;6753:18;6740:11;;;6733:39;6705:2;6698:10;6669:113;;;-1:-1:-1;;6816:1:202;6798:16;;6791:27;6574:250::o;6829:270::-;6870:3;6908:5;6902:12;6935:6;6930:3;6923:19;6951:76;7020:6;7013:4;7008:3;7004:14;6997:4;6990:5;6986:16;6951:76;:::i;:::-;7081:2;7060:15;-1:-1:-1;;7056:29:202;7047:39;;;;7088:4;7043:50;;6829:270;-1:-1:-1;;6829:270:202:o;7104:800::-;7264:4;7293:2;7333;7322:9;7318:18;7363:2;7352:9;7345:21;7386:6;7421;7415:13;7452:6;7444;7437:22;7490:2;7479:9;7475:18;7468:25;;7552:2;7542:6;7539:1;7535:14;7524:9;7520:30;7516:39;7502:53;;7590:2;7582:6;7578:15;7611:1;7621:254;7635:6;7632:1;7629:13;7621:254;;;7728:2;7724:7;7712:9;7704:6;7700:22;7696:36;7691:3;7684:49;7756:39;7788:6;7779;7773:13;7756:39;:::i;:::-;7746:49;-1:-1:-1;7853:12:202;;;;7818:15;;;;7657:1;7650:9;7621:254;;;-1:-1:-1;7892:6:202;;7104:800;-1:-1:-1;;;;;;;7104:800:202:o;7909:160::-;7974:20;;8030:13;;8023:21;8013:32;;8003:60;;8059:1;8056;8049:12;8074:607;8175:6;8183;8191;8199;8207;8260:3;8248:9;8239:7;8235:23;8231:33;8228:53;;;8277:1;8274;8267:12;8228:53;8300:29;8319:9;8300:29;:::i;:::-;8290:39;;8348:38;8382:2;8371:9;8367:18;8348:38;:::i;:::-;8338:48;;8433:2;8422:9;8418:18;8405:32;8395:42;;8456:35;8487:2;8476:9;8472:18;8456:35;:::i;:::-;8446:45;;8542:3;8531:9;8527:19;8514:33;-1:-1:-1;;;;;8562:6:202;8559:30;8556:50;;;8602:1;8599;8592:12;8556:50;8625;8667:7;8658:6;8647:9;8643:22;8625:50;:::i;:::-;8615:60;;;8074:607;;;;;;;;:::o;8686:217::-;8833:2;8822:9;8815:21;8796:4;8853:44;8893:2;8882:9;8878:18;8870:6;8853:44;:::i;8908:389::-;8985:6;8993;9046:2;9034:9;9025:7;9021:23;9017:32;9014:52;;;9062:1;9059;9052:12;9014:52;9098:9;9085:23;9075:33;;9159:2;9148:9;9144:18;9131:32;-1:-1:-1;;;;;9178:6:202;9175:30;9172:50;;;9218:1;9215;9208:12;9172:50;9241;9283:7;9274:6;9263:9;9259:22;9241:50;:::i;9302:186::-;9361:6;9414:2;9402:9;9393:7;9389:23;9385:32;9382:52;;;9430:1;9427;9420:12;9382:52;9453:29;9472:9;9453:29;:::i;9493:668::-;9547:5;9600:3;9593:4;9585:6;9581:17;9577:27;9567:55;;9618:1;9615;9608:12;9567:55;9654:6;9641:20;9680:4;9704:60;9720:43;9760:2;9720:43;:::i;9704:60::-;9798:15;;;9884:1;9880:10;;;;9868:23;;9864:32;;;9829:12;;;;9908:15;;;9905:35;;;9936:1;9933;9926:12;9905:35;9972:2;9964:6;9960:15;9984:148;10000:6;9995:3;9992:15;9984:148;;;10066:23;10085:3;10066:23;:::i;:::-;10054:36;;10110:12;;;;10017;;9984:148;;10166:662;10217:5;10270:3;10263:4;10255:6;10251:17;10247:27;10237:55;;10288:1;10285;10278:12;10237:55;10324:6;10311:20;10350:4;10374:60;10390:43;10430:2;10390:43;:::i;10374:60::-;10468:15;;;10554:1;10550:10;;;;10538:23;;10534:32;;;10499:12;;;;10578:15;;;10575:35;;;10606:1;10603;10596:12;10575:35;10642:2;10634:6;10630:15;10654:145;10670:6;10665:3;10662:15;10654:145;;;10736:20;10752:3;10736:20;:::i;:::-;10724:33;;10777:12;;;;10687;;10654:145;;10833:1276;11059:6;11067;11075;11083;11091;11144:3;11132:9;11123:7;11119:23;11115:33;11112:53;;;11161:1;11158;11151:12;11112:53;11201:9;11188:23;-1:-1:-1;;;;;11271:2:202;11263:6;11260:14;11257:34;;;11287:1;11284;11277:12;11257:34;11310:61;11363:7;11354:6;11343:9;11339:22;11310:61;:::i;:::-;11300:71;;11424:2;11413:9;11409:18;11396:32;11380:48;;11453:2;11443:8;11440:16;11437:36;;;11469:1;11466;11459:12;11437:36;11492:63;11547:7;11536:8;11525:9;11521:24;11492:63;:::i;:::-;11482:73;;11608:2;11597:9;11593:18;11580:32;11564:48;;11637:2;11627:8;11624:16;11621:36;;;11653:1;11650;11643:12;11621:36;11676:63;11731:7;11720:8;11709:9;11705:24;11676:63;:::i;:::-;11666:73;;11792:2;11781:9;11777:18;11764:32;11748:48;;11821:2;11811:8;11808:16;11805:36;;;11837:1;11834;11827:12;11805:36;11860:60;11912:7;11901:8;11890:9;11886:24;11860:60;:::i;:::-;11850:70;;11973:3;11962:9;11958:19;11945:33;11929:49;;12003:2;11993:8;11990:16;11987:36;;;12019:1;12016;12009:12;11987:36;;12042:61;12095:7;12084:8;12073:9;12069:24;12042:61;:::i;12114:632::-;12285:2;12337:21;;;12407:13;;12310:18;;;12429:22;;;12256:4;;12285:2;12508:15;;;;12482:2;12467:18;;;12256:4;12551:169;12565:6;12562:1;12559:13;12551:169;;;12626:13;;12614:26;;12695:15;;;;12660:12;;;;12587:1;12580:9;12551:169;;12751:532;12843:6;12851;12859;12867;12920:3;12908:9;12899:7;12895:23;12891:33;12888:53;;;12937:1;12934;12927:12;12888:53;12960:29;12979:9;12960:29;:::i;:::-;12950:39;;13036:2;13025:9;13021:18;13008:32;12998:42;;13059:35;13090:2;13079:9;13075:18;13059:35;:::i;:::-;13049:45;;13145:2;13134:9;13130:18;13117:32;-1:-1:-1;;;;;13164:6:202;13161:30;13158:50;;;13204:1;13201;13194:12;13158:50;13227;13269:7;13260:6;13249:9;13245:22;13227:50;:::i;:::-;13217:60;;;12751:532;;;;;;;:::o;14535:127::-;14596:10;14591:3;14587:20;14584:1;14577:31;14627:4;14624:1;14617:15;14651:4;14648:1;14641:15;15814:407;16016:2;15998:21;;;16055:2;16035:18;;;16028:30;16094:34;16089:2;16074:18;;16067:62;-1:-1:-1;;;16160:2:202;16145:18;;16138:41;16211:3;16196:19;;15814:407::o;16587:380::-;16666:1;16662:12;;;;16709;;;16730:61;;16784:4;16776:6;16772:17;16762:27;;16730:61;16837:2;16829:6;16826:14;16806:18;16803:38;16800:161;;16883:10;16878:3;16874:20;16871:1;16864:31;16918:4;16915:1;16908:15;16946:4;16943:1;16936:15;17097:544;17198:2;17193:3;17190:11;17187:448;;;17234:1;17259:5;17255:2;17248:17;17304:4;17300:2;17290:19;17374:2;17362:10;17358:19;17355:1;17351:27;17345:4;17341:38;17410:4;17398:10;17395:20;17392:47;;;-1:-1:-1;17433:4:202;17392:47;17488:2;17483:3;17479:12;17476:1;17472:20;17466:4;17462:31;17452:41;;17543:82;17561:2;17554:5;17551:13;17543:82;;;17606:17;;;17587:1;17576:13;17543:82;;17817:1348;17941:3;17935:10;-1:-1:-1;;;;;17960:6:202;17957:30;17954:56;;;17990:18;;:::i;:::-;18019:96;18108:6;18068:38;18100:4;18094:11;18068:38;:::i;:::-;18062:4;18019:96;:::i;:::-;18170:4;;18234:2;18223:14;;18251:1;18246:662;;;;18952:1;18969:6;18966:89;;;-1:-1:-1;19021:19:202;;;19015:26;18966:89;-1:-1:-1;;17774:1:202;17770:11;;;17766:24;17762:29;17752:40;17798:1;17794:11;;;17749:57;19068:81;;18216:943;;18246:662;17044:1;17037:14;;;17081:4;17068:18;;-1:-1:-1;;18282:20:202;;;18399:236;18413:7;18410:1;18407:14;18399:236;;;18502:19;;;18496:26;18481:42;;18594:27;;;;18562:1;18550:14;;;;18429:19;;18399:236;;;18403:3;18663:6;18654:7;18651:19;18648:201;;;18724:19;;;18718:26;-1:-1:-1;;18807:1:202;18803:14;;;18819:3;18799:24;18795:37;18791:42;18776:58;18761:74;;18648:201;-1:-1:-1;;;;;18895:1:202;18879:14;;;18875:22;18862:36;;-1:-1:-1;17817:1348:202:o;19170:395::-;-1:-1:-1;;;;;19367:32:202;;19349:51;;19443:14;;19436:22;19431:2;19416:18;;19409:50;19495:2;19490;19475:18;;19468:30;;;-1:-1:-1;;19515:44:202;;19540:18;;19532:6;19515:44;:::i;:::-;19507:52;19170:395;-1:-1:-1;;;;;19170:395:202:o;19570:127::-;19631:10;19626:3;19622:20;19619:1;19612:31;19662:4;19659:1;19652:15;19686:4;19683:1;19676:15;19702:128;19769:9;;;19790:11;;;19787:37;;;19804:18;;:::i;19835:125::-;19900:9;;;19921:10;;;19918:36;;;19934:18;;:::i;20654:577::-;20867:3;20899:26;20895:31;20968:2;20959:6;20955:2;20951:15;20947:24;20942:3;20935:37;21023:2;21014:6;21010:2;21006:15;21002:24;20997:2;20992:3;20988:12;20981:46;;21057:6;21052:2;21047:3;21043:12;21036:28;21093:6;21087:13;21109:75;21177:6;21172:2;21167:3;21163:12;21156:4;21148:6;21144:17;21109:75;:::i;:::-;21204:16;;;;21222:2;21200:25;;20654:577;-1:-1:-1;;;;;20654:577:202:o;21236:288::-;21411:6;21400:9;21393:25;21454:2;21449;21438:9;21434:18;21427:30;21374:4;21474:44;21514:2;21503:9;21499:18;21491:6;21474:44;:::i;21529:648::-;21608:6;21661:2;21649:9;21640:7;21636:23;21632:32;21629:52;;;21677:1;21674;21667:12;21629:52;21710:9;21704:16;-1:-1:-1;;;;;21735:6:202;21732:30;21729:50;;;21775:1;21772;21765:12;21729:50;21798:22;;21851:4;21843:13;;21839:27;-1:-1:-1;21829:55:202;;21880:1;21877;21870:12;21829:55;21909:2;21903:9;21934:49;21950:32;21979:2;21950:32;:::i;21934:49::-;22006:2;21999:5;21992:17;22046:7;22041:2;22036;22032;22028:11;22024:20;22021:33;22018:53;;;22067:1;22064;22057:12;22018:53;22080:67;22144:2;22139;22132:5;22128:14;22123:2;22119;22115:11;22080:67;:::i;22182:127::-;22243:10;22238:3;22234:20;22231:1;22224:31;22274:4;22271:1;22264:15;22298:4;22295:1;22288:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "burn(bytes32,bytes)": "6c79b70b",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "initialize(string,string,address)": "077f224a",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,bytes32,bool,bytes)": "af255b61",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32)\":{\"details\":\"Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"tokenId\":\"The tokenId operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/Tokens/LSP8InitTester.sol\":\"LSP8InitTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol\":{\"keccak256\":\"0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2\",\"dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol\":{\"keccak256\":\"0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338\",\"dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol\":{\"keccak256\":\"0x93afbffe9dc5f7c50b4a40288c0717c3afd14b6517cf82397d4ca65e73fdfb0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce9ff75f4c2168ab17c940befd98a0d6ee39195bd6b563c324cfacf766df334f\",\"dweb:/ipfs/QmeWFNXz2gjHSFMKYJQKxZkU5AgtGZubmb71AXnF44iDLa\"]},\"contracts/Mocks/Tokens/LSP8InitTester.sol\":{\"keccak256\":\"0x0f61355bd8937f72484f96a3dcd677913f6692d680273972cbb6162d3ad4e14c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbb0c338253f8171b6e9c3deb729ffa0a591777fcdc5a1cb0556e1e454dcf2e5\",\"dweb:/ipfs/QmcVMVedkVsBtFAWaQHiPKHmHctemYBFcaCE9c6fpMME5j\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol\":{\"keccak256\":\"0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551\",\"dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeOperator(address,bytes32)": {
            "details": "Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.",
            "params": {
              "operator": "The address to authorize as an operator.",
              "tokenId": "The tokenId operator has access to."
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Mocks/Tokens/LSP8InitTester.sol": "LSP8InitTester"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol": {
        "keccak256": "0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792",
        "urls": [
          "bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2",
          "dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol": {
        "keccak256": "0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968",
        "urls": [
          "bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338",
          "dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol": {
        "keccak256": "0x93afbffe9dc5f7c50b4a40288c0717c3afd14b6517cf82397d4ca65e73fdfb0a",
        "urls": [
          "bzz-raw://ce9ff75f4c2168ab17c940befd98a0d6ee39195bd6b563c324cfacf766df334f",
          "dweb:/ipfs/QmeWFNXz2gjHSFMKYJQKxZkU5AgtGZubmb71AXnF44iDLa"
        ],
        "license": "MIT"
      },
      "contracts/Mocks/Tokens/LSP8InitTester.sol": {
        "keccak256": "0x0f61355bd8937f72484f96a3dcd677913f6692d680273972cbb6162d3ad4e14c",
        "urls": [
          "bzz-raw://bbb0c338253f8171b6e9c3deb729ffa0a591777fcdc5a1cb0556e1e454dcf2e5",
          "dweb:/ipfs/QmcVMVedkVsBtFAWaQHiPKHmHctemYBFcaCE9c6fpMME5j"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol": {
        "keccak256": "0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45",
        "urls": [
          "bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551",
          "dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Mocks/Tokens/LSP8InitTester.sol",
    "id": 17062,
    "exportedSymbols": {
      "LSP8Burnable": [
        11262
      ],
      "LSP8IdentifiableDigitalAssetInitAbstract": [
        11104
      ],
      "LSP8InitTester": [
        17061
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:760:140",
    "nodes": [
      {
        "id": 17013,
        "nodeType": "PragmaDirective",
        "src": "33:23:140",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 17015,
        "nodeType": "ImportDirective",
        "src": "69:143:140",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17062,
        "sourceUnit": 11105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17014,
              "name": "LSP8IdentifiableDigitalAssetInitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11104,
              "src": "82:40:140",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17017,
        "nodeType": "ImportDirective",
        "src": "213:92:140",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17062,
        "sourceUnit": 11263,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17016,
              "name": "LSP8Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11262,
              "src": "221:12:140",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17061,
        "nodeType": "ContractDefinition",
        "src": "307:485:140",
        "nodes": [
          {
            "id": 17041,
            "nodeType": "FunctionDefinition",
            "src": "395:222:140",
            "nodes": [],
            "body": {
              "id": 17040,
              "nodeType": "Block",
              "src": "524:93:140",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17035,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17023,
                        "src": "587:4:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 17036,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17025,
                        "src": "593:6:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 17037,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17027,
                        "src": "601:8:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 17032,
                        "name": "LSP8IdentifiableDigitalAssetInitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11104,
                        "src": "534:40:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP8IdentifiableDigitalAssetInitAbstract_$11104_$",
                          "typeString": "type(contract LSP8IdentifiableDigitalAssetInitAbstract)"
                        }
                      },
                      "id": 17034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "575:11:140",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11082,
                      "src": "534:52:140",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address)"
                      }
                    },
                    "id": 17038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:76:140",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17039,
                  "nodeType": "ExpressionStatement",
                  "src": "534:76:140"
                }
              ]
            },
            "functionSelector": "077f224a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17030,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17029,
                  "name": "initializer",
                  "nameLocations": [
                    "512:11:140"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43911,
                  "src": "512:11:140"
                },
                "nodeType": "ModifierInvocation",
                "src": "512:11:140"
              }
            ],
            "name": "initialize",
            "nameLocation": "404:10:140",
            "parameters": {
              "id": 17028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17023,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "438:4:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 17041,
                  "src": "424:18:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17022,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:6:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17025,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "466:6:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 17041,
                  "src": "452:20:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17024,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:6:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17027,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "490:8:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 17041,
                  "src": "482:16:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "414:90:140"
            },
            "returnParameters": {
              "id": 17031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:140"
            },
            "scope": 17061,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17060,
            "nodeType": "FunctionDefinition",
            "src": "623:167:140",
            "nodes": [],
            "body": {
              "id": 17059,
              "nodeType": "Block",
              "src": "742:48:140",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17053,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17043,
                        "src": "758:2:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17054,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17045,
                        "src": "762:7:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 17055,
                        "name": "force",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17047,
                        "src": "771:5:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 17056,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17049,
                        "src": "778:4:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 17052,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10751,
                      "src": "752:5:140",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 17057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "752:31:140",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17058,
                  "nodeType": "ExpressionStatement",
                  "src": "752:31:140"
                }
              ]
            },
            "functionSelector": "af255b61",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "632:4:140",
            "parameters": {
              "id": 17050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17043,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "654:2:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 17060,
                  "src": "646:10:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17045,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "674:7:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 17060,
                  "src": "666:15:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17044,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17047,
                  "mutability": "mutable",
                  "name": "force",
                  "nameLocation": "696:5:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 17060,
                  "src": "691:10:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17046,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:4:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17049,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "724:4:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 17060,
                  "src": "711:17:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17048,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:5:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "636:98:140"
            },
            "returnParameters": {
              "id": 17051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "742:0:140"
            },
            "scope": 17061,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17018,
              "name": "LSP8IdentifiableDigitalAssetInitAbstract",
              "nameLocations": [
                "334:40:140"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11104,
              "src": "334:40:140"
            },
            "id": 17019,
            "nodeType": "InheritanceSpecifier",
            "src": "334:40:140"
          },
          {
            "baseName": {
              "id": 17020,
              "name": "LSP8Burnable",
              "nameLocations": [
                "376:12:140"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11262,
              "src": "376:12:140"
            },
            "id": 17021,
            "nodeType": "InheritanceSpecifier",
            "src": "376:12:140"
          }
        ],
        "canonicalName": "LSP8InitTester",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          17061,
          11262,
          11104,
          11044,
          9968,
          4296,
          43546,
          43508,
          43840,
          46531,
          46594,
          43687,
          43991
        ],
        "name": "LSP8InitTester",
        "nameLocation": "316:14:140",
        "scope": 17062,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 140
}