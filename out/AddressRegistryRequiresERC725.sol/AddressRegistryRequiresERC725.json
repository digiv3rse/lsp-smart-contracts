{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "containsAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRawValues",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "length",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506107c6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634ba79dfe1161005b5780634ba79dfe146100f1578063b31610db14610104578063b93f9b0a14610117578063c0a4ebf41461014257600080fd5b806301ffc9a71461008d5780631f7b6d32146100b5578063322433e3146100cb57806338eada1c146100de575b600080fd5b6100a061009b366004610671565b610157565b60405190151581526020015b60405180910390f35b6100bd610197565b6040519081526020016100ac565b6100a06100d936600461069b565b6101a8565b6100a06100ec36600461069b565b6101b5565b6100a06100ff36600461069b565b61028f565b6100bd61011236600461069b565b6103be565b61012a6101253660046106c4565b61043c565b6040516001600160a01b0390911681526020016100ac565b61014a610449565b6040516100ac91906106dd565b60006301ffc9a760e01b6001600160e01b03198316148061019157506001600160e01b0319821660009081526020819052604090205460ff165b92915050565b60006101a360016104a0565b905090565b60006101916001836104aa565b6040516301ffc9a760e01b8152631c537ddf60e21b60048201526000906001600160a01b038316906301ffc9a790602401602060405180830381865afa158015610203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102279190610721565b6102845760405162461bcd60e51b815260206004820152602360248201527f4f6e6c792045524337323559206164647265737365732063616e20626520616460448201526219195960ea1b60648201526084015b60405180910390fd5b6101916001836104cf565b6040516301ffc9a760e01b8152631c537ddf60e21b600482015260009033906301ffc9a790602401602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610721565b6103505760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920455243373235592063616e2063616c6c20746869732066756e637460448201526234b7b760e91b606482015260840161027b565b336001600160a01b038316146103b35760405162461bcd60e51b815260206004820152602260248201527f4f6e6c7920616e20616464726573732063616e2072656d6f766520697473656c604482015261331760f11b606482015260840161027b565b6101916001836104e4565b60006103cb6001836104aa565b6104175760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c655365743a20496e646578206e6f7420666f756e640000604482015260640161027b565b6001600160a01b03821660009081526002602052604090205461019190600190610743565b60006101916001836104f9565b60018054604080516020808402820181019092528281526060939092909183018282801561049657602002820191906000526020600020905b815481526020019060010190808311610482575b5050505050905090565b6000610191825490565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b60006104c8836001600160a01b038416610505565b60006104c8836001600160a01b038416610554565b60006104c88383610647565b600081815260018301602052604081205461054c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610191565b506000610191565b6000818152600183016020526040812054801561063d576000610578600183610743565b855490915060009061058c90600190610743565b90508181146105f15760008660000182815481106105ac576105ac610764565b90600052602060002001549050808760000184815481106105cf576105cf610764565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806106025761060261077a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610191565b6000915050610191565b600082600001828154811061065e5761065e610764565b9060005260206000200154905092915050565b60006020828403121561068357600080fd5b81356001600160e01b0319811681146104c857600080fd5b6000602082840312156106ad57600080fd5b81356001600160a01b03811681146104c857600080fd5b6000602082840312156106d657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610715578351835292840192918401916001016106f9565b50909695505050505050565b60006020828403121561073357600080fd5b815180151581146104c857600080fd5b8181038181111561019157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d954a0074edabf4969abab6de58d84533a252065c7d0fca897fa79a741ed698664736f6c63430008110033",
    "sourceMap": "411:750:89:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80634ba79dfe1161005b5780634ba79dfe146100f1578063b31610db14610104578063b93f9b0a14610117578063c0a4ebf41461014257600080fd5b806301ffc9a71461008d5780631f7b6d32146100b5578063322433e3146100cb57806338eada1c146100de575b600080fd5b6100a061009b366004610671565b610157565b60405190151581526020015b60405180910390f35b6100bd610197565b6040519081526020016100ac565b6100a06100d936600461069b565b6101a8565b6100a06100ec36600461069b565b6101b5565b6100a06100ff36600461069b565b61028f565b6100bd61011236600461069b565b6103be565b61012a6101253660046106c4565b61043c565b6040516001600160a01b0390911681526020016100ac565b61014a610449565b6040516100ac91906106dd565b60006301ffc9a760e01b6001600160e01b03198316148061019157506001600160e01b0319821660009081526020819052604090205460ff165b92915050565b60006101a360016104a0565b905090565b60006101916001836104aa565b6040516301ffc9a760e01b8152631c537ddf60e21b60048201526000906001600160a01b038316906301ffc9a790602401602060405180830381865afa158015610203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102279190610721565b6102845760405162461bcd60e51b815260206004820152602360248201527f4f6e6c792045524337323559206164647265737365732063616e20626520616460448201526219195960ea1b60648201526084015b60405180910390fd5b6101916001836104cf565b6040516301ffc9a760e01b8152631c537ddf60e21b600482015260009033906301ffc9a790602401602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610721565b6103505760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920455243373235592063616e2063616c6c20746869732066756e637460448201526234b7b760e91b606482015260840161027b565b336001600160a01b038316146103b35760405162461bcd60e51b815260206004820152602260248201527f4f6e6c7920616e20616464726573732063616e2072656d6f766520697473656c604482015261331760f11b606482015260840161027b565b6101916001836104e4565b60006103cb6001836104aa565b6104175760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c655365743a20496e646578206e6f7420666f756e640000604482015260640161027b565b6001600160a01b03821660009081526002602052604090205461019190600190610743565b60006101916001836104f9565b60018054604080516020808402820181019092528281526060939092909183018282801561049657602002820191906000526020600020905b815481526020019060010190808311610482575b5050505050905090565b6000610191825490565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b60006104c8836001600160a01b038416610505565b60006104c8836001600160a01b038416610554565b60006104c88383610647565b600081815260018301602052604081205461054c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610191565b506000610191565b6000818152600183016020526040812054801561063d576000610578600183610743565b855490915060009061058c90600190610743565b90508181146105f15760008660000182815481106105ac576105ac610764565b90600052602060002001549050808760000184815481106105cf576105cf610764565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806106025761060261077a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610191565b6000915050610191565b600082600001828154811061065e5761065e610764565b9060005260206000200154905092915050565b60006020828403121561068357600080fd5b81356001600160e01b0319811681146104c857600080fd5b6000602082840312156106ad57600080fd5b81356001600160a01b03811681146104c857600080fd5b6000602082840312156106d657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610715578351835292840192918401916001016106f9565b50909695505050505050565b60006020828403121561073357600080fd5b815180151581146104c857600080fd5b8181038181111561019157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d954a0074edabf4969abab6de58d84533a252065c7d0fca897fa79a741ed698664736f6c63430008110033",
    "sourceMap": "411:750:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;596:188:197;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;596:188:197;;;;;;;;1310:94:88;;;:::i;:::-;;;643:25:202;;;631:2;616:18;1310:94:88;497:177:202;1178:126:88;;;;;;:::i;:::-;;:::i;530:268:89:-;;;;;;:::i;:::-;;:::i;804:355::-;;;;;;:::i;:::-;;:::i;803:245:88:-;;;;;;:::i;:::-;;:::i;683:114::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1319:32:202;;;1301:51;;1289:2;1274:18;683:114:88;1155:203:202;1054:118:88;;;:::i;:::-;;;;;;;:::i;596:188:197:-;681:4;-1:-1:-1;;;;;;;;;937:40:196;;;704:73:197;;;-1:-1:-1;;;;;;;744:33:197;;:20;:33;;;;;;;;;;;;;704:73;697:80;596:188;-1:-1:-1;;596:188:197:o;1310:94:88:-;1349:7;1375:22;:13;:20;:22::i;:::-;1368:29;;1310:94;:::o;1178:126::-;1242:4;1265:32;:13;1288:8;1265:22;:32::i;530:268:89:-;630:56;;-1:-1:-1;;;630:56:89;;-1:-1:-1;;;630:56:89;;;2144:52:202;593:4:89;;-1:-1:-1;;;;;630:34:89;;;;;2117:18:202;;630:56:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;609:138;;;;-1:-1:-1;;;609:138:89;;2691:2:202;609:138:89;;;2673:21:202;2730:2;2710:18;;;2703:30;2769:34;2749:18;;;2742:62;-1:-1:-1;;;2820:18:202;;;2813:33;2863:19;;609:138:89;;;;;;;;;764:27;:13;782:8;764:17;:27::i;804:355::-;907:58;;-1:-1:-1;;;907:58:89;;-1:-1:-1;;;907:58:89;;;2144:52:202;870:4:89;;914:10;;907:36;;2117:18:202;;907:58:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;886:140;;;;-1:-1:-1;;;886:140:89;;3095:2:202;886:140:89;;;3077:21:202;3134:2;3114:18;;;3107:30;3173:34;3153:18;;;3146:62;-1:-1:-1;;;3224:18:202;;;3217:33;3267:19;;886:140:89;2893:399:202;886:140:89;1044:10;-1:-1:-1;;;;;1044:22:89;;;1036:69;;;;-1:-1:-1;;;1036:69:89;;3499:2:202;1036:69:89;;;3481:21:202;3538:2;3518:18;;;3511:30;3577:34;3557:18;;;3550:62;-1:-1:-1;;;3628:18:202;;;3621:32;3670:19;;1036:69:89;3297:398:202;1036:69:89;1122:30;:13;1143:8;1122:20;:30::i;803:245:88:-;860:7;887:32;:13;910:8;887:22;:32::i;:::-;879:75;;;;-1:-1:-1;;;879:75:88;;3902:2:202;879:75:88;;;3884:21:202;3941:2;3921:18;;;3914:30;3980:32;3960:18;;;3953:60;4030:18;;879:75:88;3700:354:202;879:75:88;-1:-1:-1;;;;;1009:26:88;;971:20;:66;;;:29;:66;;;;;;:70;;1040:1;;971:70;:::i;683:114::-;740:7;766:24;:13;783:6;766:16;:24::i;1054:118::-;1137:13;1130:35;;;;;;;;;;;;;;;;;;;1102:16;;1130:35;;1137:13;;1130:35;;1137:13;1130:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1054:118;:::o;8829:115:199:-;8892:7;8918:19;8926:3;4444:18;;4362:107;8583:165;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;8679:62;8583:165;-1:-1:-1;;;8583:165:199:o;8028:150::-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;9286:156::-;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;2685:1388;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;4811:118;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;679:286;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;833:23;;-1:-1:-1;;;;;885:31:202;;875:42;;865:70;;931:1;928;921:12;970:180;1029:6;1082:2;1070:9;1061:7;1057:23;1053:32;1050:52;;;1098:1;1095;1088:12;1050:52;-1:-1:-1;1121:23:202;;970:180;-1:-1:-1;970:180:202:o;1363:632::-;1534:2;1586:21;;;1656:13;;1559:18;;;1678:22;;;1505:4;;1534:2;1757:15;;;;1731:2;1716:18;;;1505:4;1800:169;1814:6;1811:1;1808:13;1800:169;;;1875:13;;1863:26;;1944:15;;;;1909:12;;;;1836:1;1829:9;1800:169;;;-1:-1:-1;1986:3:202;;1363:632;-1:-1:-1;;;;;;1363:632:202:o;2207:277::-;2274:6;2327:2;2315:9;2306:7;2302:23;2298:32;2295:52;;;2343:1;2340;2333:12;2295:52;2375:9;2369:16;2428:5;2421:13;2414:21;2407:5;2404:32;2394:60;;2450:1;2447;2440:12;4059:225;4126:9;;;4147:11;;;4144:134;;;4200:10;4195:3;4191:20;4188:1;4181:31;4235:4;4232:1;4225:15;4263:4;4260:1;4253:15;4289:127;4350:10;4345:3;4341:20;4338:1;4331:31;4381:4;4378:1;4371:15;4405:4;4402:1;4395:15;4421:127;4482:10;4477:3;4473:20;4470:1;4463:31;4513:4;4510:1;4503:15;4537:4;4534:1;4527:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addAddress(address)": "38eada1c",
    "containsAddress(address)": "322433e3",
    "getAddress(uint256)": "b93f9b0a",
    "getAllRawValues()": "c0a4ebf4",
    "getIndex(address)": "b31610db",
    "length()": "1f7b6d32",
    "removeAddress(address)": "4ba79dfe",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"containsAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRawValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Legacy/Registries/AddressRegistryRequiresERC725.sol\":\"AddressRegistryRequiresERC725\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Legacy/Registries/AddressRegistry.sol\":{\"keccak256\":\"0x86339794b8c52183a8589852d69fe0a9e44402d8c976108e53fff3630656f464\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bd63ff4dfd10f729e328752248af6c74c2acf7965e42b023b8b968017b5e7b7\",\"dweb:/ipfs/QmSjuPXk2j45CP7sSMpwcHwsj3L7ZcpvGKMc7m1bs2fwbi\"]},\"contracts/Legacy/Registries/AddressRegistryRequiresERC725.sol\":{\"keccak256\":\"0x341bf4c0bd61bf36dd29117538932c137806a0eabebb9dba8a735be33ccb34ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5767b306a385b6404d00421041b0e616d001f5f775ff46c2a30c855242bd4368\",\"dweb:/ipfs/QmYBfbk2pvdcm36Y8FtBt3TPzjj8GoZKBgEQeGhvb2oSSt\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Storage.sol\":{\"keccak256\":\"0x77bf0086774bab931413c3388d3a0f7d44cf6878965b72147f57bb0fbbf394bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22318b1de700090cdc18992c2284437b25c4862f16f7b9b37a317fdb16aa44df\",\"dweb:/ipfs/QmQrgXR7hRSyjZSgjV3nUFGx3Rqq3ESXPsaXh2mdR8vmUc\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAddress",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "containsAddress",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllRawValues",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "length",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAddress",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Legacy/Registries/AddressRegistryRequiresERC725.sol": "AddressRegistryRequiresERC725"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Legacy/Registries/AddressRegistry.sol": {
        "keccak256": "0x86339794b8c52183a8589852d69fe0a9e44402d8c976108e53fff3630656f464",
        "urls": [
          "bzz-raw://8bd63ff4dfd10f729e328752248af6c74c2acf7965e42b023b8b968017b5e7b7",
          "dweb:/ipfs/QmSjuPXk2j45CP7sSMpwcHwsj3L7ZcpvGKMc7m1bs2fwbi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/Legacy/Registries/AddressRegistryRequiresERC725.sol": {
        "keccak256": "0x341bf4c0bd61bf36dd29117538932c137806a0eabebb9dba8a735be33ccb34ab",
        "urls": [
          "bzz-raw://5767b306a385b6404d00421041b0e616d001f5f775ff46c2a30c855242bd4368",
          "dweb:/ipfs/QmYBfbk2pvdcm36Y8FtBt3TPzjj8GoZKBgEQeGhvb2oSSt"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Storage.sol": {
        "keccak256": "0x77bf0086774bab931413c3388d3a0f7d44cf6878965b72147f57bb0fbbf394bd",
        "urls": [
          "bzz-raw://22318b1de700090cdc18992c2284437b25c4862f16f7b9b37a317fdb16aa44df",
          "dweb:/ipfs/QmQrgXR7hRSyjZSgjV3nUFGx3Rqq3ESXPsaXh2mdR8vmUc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Legacy/Registries/AddressRegistryRequiresERC725.sol",
    "id": 14030,
    "exportedSymbols": {
      "AddressRegistry": [
        13955
      ],
      "AddressRegistryRequiresERC725": [
        14029
      ],
      "ERC165": [
        46531
      ],
      "EnumerableSet": [
        47193
      ],
      "_INTERFACEID_ERC725Y": [
        43554
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1123:89",
    "nodes": [
      {
        "id": 13957,
        "nodeType": "PragmaDirective",
        "src": "39:23:89",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 13959,
        "nodeType": "ImportDirective",
        "src": "77:86:89",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14030,
        "sourceUnit": 47194,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13958,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47193,
              "src": "85:13:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13961,
        "nodeType": "ImportDirective",
        "src": "176:78:89",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14030,
        "sourceUnit": 46532,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13960,
              "name": "ERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46531,
              "src": "184:6:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13963,
        "nodeType": "ImportDirective",
        "src": "255:54:89",
        "nodes": [],
        "absolutePath": "contracts/Legacy/Registries/AddressRegistry.sol",
        "file": "./AddressRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14030,
        "sourceUnit": 13956,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13962,
              "name": "AddressRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13955,
              "src": "263:15:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13965,
        "nodeType": "ImportDirective",
        "src": "324:85:89",
        "nodes": [],
        "absolutePath": "node_modules/@erc725/smart-contracts/contracts/constants.sol",
        "file": "@erc725/smart-contracts/contracts/constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14030,
        "sourceUnit": 43582,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13964,
              "name": "_INTERFACEID_ERC725Y",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43554,
              "src": "332:20:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 14029,
        "nodeType": "ContractDefinition",
        "src": "411:750:89",
        "nodes": [
          {
            "id": 13971,
            "nodeType": "UsingForDirective",
            "src": "475:49:89",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13968,
              "name": "EnumerableSet",
              "nameLocations": [
                "481:13:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47193,
              "src": "481:13:89"
            },
            "typeName": {
              "id": 13970,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13969,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "499:13:89",
                  "513:10:89"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46906,
                "src": "499:24:89"
              },
              "referencedDeclaration": 46906,
              "src": "499:24:89",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$46906_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 13995,
            "nodeType": "FunctionDefinition",
            "src": "530:268:89",
            "nodes": [],
            "body": {
              "id": 13994,
              "nodeType": "Block",
              "src": "599:199:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13984,
                            "name": "_INTERFACEID_ERC725Y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43554,
                            "src": "665:20:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 13981,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13973,
                                "src": "637:8:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13980,
                              "name": "ERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46531,
                              "src": "630:6:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC165_$46531_$",
                                "typeString": "type(contract ERC165)"
                              }
                            },
                            "id": 13982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "630:16:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC165_$46531",
                              "typeString": "contract ERC165"
                            }
                          },
                          "id": 13983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "647:17:89",
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46530,
                          "src": "630:34:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) view external returns (bool)"
                          }
                        },
                        "id": 13985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "630:56:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792045524337323559206164647265737365732063616e206265206164646564",
                        "id": 13986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "700:37:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974bfb2c70e51b9ef2f8ed929af16c21b0310e4ef183cad64b6e77d78cc78773",
                          "typeString": "literal_string \"Only ERC725Y addresses can be added\""
                        },
                        "value": "Only ERC725Y addresses can be added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974bfb2c70e51b9ef2f8ed929af16c21b0310e4ef183cad64b6e77d78cc78773",
                          "typeString": "literal_string \"Only ERC725Y addresses can be added\""
                        }
                      ],
                      "id": 13979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "609:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:138:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13988,
                  "nodeType": "ExpressionStatement",
                  "src": "609:138:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13991,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13973,
                        "src": "782:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13989,
                        "name": "_addressStore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13848,
                        "src": "764:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$46906_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 13990,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "778:3:89",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46933,
                      "src": "764:17:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$46906_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$46906_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 13992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "764:27:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13978,
                  "id": 13993,
                  "nodeType": "Return",
                  "src": "757:34:89"
                }
              ]
            },
            "baseFunctions": [
              13861
            ],
            "functionSelector": "38eada1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAddress",
            "nameLocation": "539:10:89",
            "overrides": {
              "id": 13975,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "575:8:89"
            },
            "parameters": {
              "id": 13974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13973,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "558:8:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 13995,
                  "src": "550:16:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:18:89"
            },
            "returnParameters": {
              "id": 13978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13977,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13995,
                  "src": "593:4:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13976,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "592:6:89"
            },
            "scope": 14029,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14028,
            "nodeType": "FunctionDefinition",
            "src": "804:355:89",
            "nodes": [],
            "body": {
              "id": 14027,
              "nodeType": "Block",
              "src": "876:283:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14009,
                            "name": "_INTERFACEID_ERC725Y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43554,
                            "src": "944:20:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 14005,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "914:3:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 14006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "918:6:89",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "914:10:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 14004,
                              "name": "ERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46531,
                              "src": "907:6:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC165_$46531_$",
                                "typeString": "type(contract ERC165)"
                              }
                            },
                            "id": 14007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "907:18:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC165_$46531",
                              "typeString": "contract ERC165"
                            }
                          },
                          "id": 14008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "926:17:89",
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46530,
                          "src": "907:36:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) view external returns (bool)"
                          }
                        },
                        "id": 14010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "907:58:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920455243373235592063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 14011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "979:37:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e497732f49ed82cbc5f9711bc67856b9773747871f881bef942102a3e47e710",
                          "typeString": "literal_string \"Only ERC725Y can call this function\""
                        },
                        "value": "Only ERC725Y can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e497732f49ed82cbc5f9711bc67856b9773747871f881bef942102a3e47e710",
                          "typeString": "literal_string \"Only ERC725Y can call this function\""
                        }
                      ],
                      "id": 14003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "886:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:140:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14013,
                  "nodeType": "ExpressionStatement",
                  "src": "886:140:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14015,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1044:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1048:6:89",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1044:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 14017,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13997,
                          "src": "1058:8:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1044:22:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20616464726573732063616e2072656d6f766520697473656c662e",
                        "id": 14019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1068:36:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f3f99d3593b21aa286ee3f5ecad3c5611e8337e2950a1d4482a4c1d373efbf5",
                          "typeString": "literal_string \"Only an address can remove itself.\""
                        },
                        "value": "Only an address can remove itself."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f3f99d3593b21aa286ee3f5ecad3c5611e8337e2950a1d4482a4c1d373efbf5",
                          "typeString": "literal_string \"Only an address can remove itself.\""
                        }
                      ],
                      "id": 14014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1036:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:69:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14021,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:69:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14024,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13997,
                        "src": "1143:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14022,
                        "name": "_addressStore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13848,
                        "src": "1122:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$46906_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 14023,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1136:6:89",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46960,
                      "src": "1122:20:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$46906_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$46906_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 14025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:30:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14002,
                  "id": 14026,
                  "nodeType": "Return",
                  "src": "1115:37:89"
                }
              ]
            },
            "baseFunctions": [
              13874
            ],
            "functionSelector": "4ba79dfe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAddress",
            "nameLocation": "813:13:89",
            "overrides": {
              "id": 13999,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "852:8:89"
            },
            "parameters": {
              "id": 13998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13997,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "835:8:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 14028,
                  "src": "827:16:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "826:18:89"
            },
            "returnParameters": {
              "id": 14002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14001,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14028,
                  "src": "870:4:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14000,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "869:6:89"
            },
            "scope": 14029,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13966,
              "name": "AddressRegistry",
              "nameLocations": [
                "453:15:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13955,
              "src": "453:15:89"
            },
            "id": 13967,
            "nodeType": "InheritanceSpecifier",
            "src": "453:15:89"
          }
        ],
        "canonicalName": "AddressRegistryRequiresERC725",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          14029,
          13955,
          46582,
          46531,
          46594
        ],
        "name": "AddressRegistryRequiresERC725",
        "nameLocation": "420:29:89",
        "scope": 14030,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 89
}