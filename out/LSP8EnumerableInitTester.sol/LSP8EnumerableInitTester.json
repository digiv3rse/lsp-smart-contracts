{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenAt",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612498806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063511b6952116100b85780637f23690c1161007c5780637f23690c146102c15780638da5cb5b146102d457806392a91a3a146102eb578063a3b261f21461030b578063cf5182ba1461032b578063f2fde38b1461033e57600080fd5b8063511b69521461026057806354f6127f1461027357806370a0823114610293578063715018a6146102a65780637e87632c146102ae57600080fd5b806318160ddd1161010a57806318160ddd146101bd578063217b2270146101cf5780632a3654a4146101fa5780632cfd30051461020d57806349a6078d146102205780634e3e6e9c1461024057600080fd5b806301ffc9a714610147578063077f224a1461016f57806308a1eee1146101845780630b0c6d821461019757806314a6e293146101aa575b600080fd5b61015a610155366004611a5f565b610351565b60405190151581526020015b60405180910390f35b61018261017d366004611b68565b61037c565b005b610182610192366004611bdb565b610498565b6101826101a5366004611bf4565b6104ca565b6101826101b8366004611d26565b61056c565b6002545b604051908152602001610166565b6101e26101dd366004611bdb565b6105f8565b6040516001600160a01b039091168152602001610166565b61015a610208366004611bf4565b610631565b61018261021b366004611bf4565b61064d565b61023361022e366004611bdb565b61068b565b6040516101669190611d89565b61025361024e366004611dd6565b6106ad565b6040516101669190611e5a565b61018261026e366004611ecc565b610760565b610286610281366004611bdb565b6107af565b6040516101669190611f44565b6101c16102a1366004611f57565b6107ba565b6101826107db565b6101826102bc366004612036565b6107ef565b6101826102cf3660046120fa565b6108de565b6000546201000090046001600160a01b03166101e2565b6101c16102f9366004611bdb565b60009081526007602052604090205490565b61031e610319366004611f57565b6108f0565b6040516101669190612136565b610182610339366004611bf4565b610914565b61018261034c366004611f57565b610a3d565b60006001600160e01b0319821663622e7a0160e01b1480610376575061037682610ab3565b92915050565b600054610100900460ff161580801561039c5750600054600160ff909116105b806103b65750303b1580156103b6575060005460ff166001145b61041e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610441576000805461ff0019166101001790555b61044c848484610ae8565b8015610492576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6104c7816040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610b1a565b50565b60006104d5826105f8565b9050336001600160a01b038216811461051b57604051632d938f5160e11b81526001600160a01b0380841660048301526024820185905282166044820152606401610415565b6001600160a01b03841661054257604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036105615750505050565b610492848385610bec565b610574610c7d565b80518251146105a357815181516040516321d1e13360e11b815260048101929092526024820152604401610415565b60005b82518110156105f3576105eb8382815181106105c4576105c461216e565b60200260200101518383815181106105de576105de61216e565b6020026020010151610cde565b6001016105a6565b505050565b6000818152600360205260408120546001600160a01b03168061037657604051635747cd1b60e11b815260048101849052602401610415565b600061063c82610dd2565b6106468383610e0a565b9392505050565b61068782826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610e53565b5050565b606061069682610dd2565b600082815260056020526040902061037690610f79565b606081516001600160401b038111156106c8576106c8611a89565b6040519080825280602002602001820160405280156106fb57816020015b60608152602001906001900390816106e65790505b50905060005b825181101561075a5761072c83828151811061071f5761071f61216e565b6020026020010151610f86565b82828151811061073e5761073e61216e565b60200260200101819052506107538160010190565b9050610701565b50919050565b3361076b8185610e0a565b61079a57604051631294d2a960e01b8152600481018590526001600160a01b0382166024820152604401610415565b6107a78686868686611028565b505050505050565b606061037682610f86565b6001600160a01b0381166000908152600460205260408120610376906111bd565b6107e3610c7d565b6107ed60006111c7565b565b8451845181141580610802575083518114155b8061080e575082518114155b8061081a575081518114155b15610838576040516393a8311960e01b815260040160405180910390fd5b60005b818110156108d5576108cd8782815181106108585761085861216e565b60200260200101518783815181106108725761087261216e565b602002602001015187848151811061088c5761088c61216e565b60200260200101518785815181106108a6576108a661216e565b60200260200101518786815181106108c0576108c061216e565b6020026020010151610760565b60010161083b565b50505050505050565b6108e6610c7d565b6106878282610cde565b6001600160a01b03811660009081526004602052604090206060906103769061123d565b600061091f826105f8565b9050336001600160a01b038216811461096557604051632d938f5160e11b81526001600160a01b0380841660048301526024820185905282166044820152606401610415565b6001600160a01b03841661098c57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036109ab5750505050565b60008381526005602052604081206109c39086611248565b9050806109f5576040516314ec4d6d60e31b81526001600160a01b038616600482015260248101859052604401610415565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b610a45610c7d565b6001600160a01b038116610aaa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610415565b6104c7816111c7565b60006001600160e01b03198216631c537ddf60e21b148061037657506301ffc9a760e01b6001600160e01b0319831614610376565b600054610100900460ff16610b0f5760405162461bcd60e51b815260040161041590612184565b6105f383838361125d565b6000610b25836105f8565b905033610b348260008661132a565b600160026000828254610b4791906121e5565b90915550610b57905082856113e4565b6001600160a01b0382166000908152600460205260409020610b79908561142b565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610bd790869085908a906121f8565b60405180910390a46104928260008686611437565b6000818152600560205260408120610c04908561150b565b905080610c36576040516312a8c6a360e21b81526001600160a01b038516600482015260248101839052604401610415565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b03620100009091041633146107ed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610415565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610d1e576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610d5e57604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610d7682826122a7565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610db757610db2836000610100611520565b610db9565b825b604051610dc69190611f44565b60405180910390a25050565b6000818152600360205260409020546001600160a01b03166104c757604051635747cd1b60e11b815260048101829052602401610415565b600080610e16836105f8565b9050806001600160a01b0316846001600160a01b03161480610e4b57506000838152600560205260409020610e4b908561162d565b949350505050565b6001600160a01b038416610e7a576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b031615610eb3576040516334c7b51160e01b815260048101849052602401610415565b33610ec06000868661132a565b600160026000828254610ed39190612366565b90915550506001600160a01b0385166000908152600460205260409020610efa908561164f565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610f5c908690899089906121f8565b60405180910390a4610f7260008686868661165b565b5050505050565b6060600061064683611793565b6000818152600160205260409020805460609190610fa39061222d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fcf9061222d565b801561101c5780601f10610ff15761010080835404028352916020019161101c565b820191906000526020600020905b815481529060010190602001808311610fff57829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b03160361105a57604051635d67d6c160e01b815260040160405180910390fd5b6000611065846105f8565b9050856001600160a01b0316816001600160a01b0316146110b357604051632d938f5160e11b81526001600160a01b0380831660048301526024820186905287166044820152606401610415565b6001600160a01b0385166110da576040516324ecef4d60e01b815260040160405180910390fd5b336110e687878761132a565b6110f087866113e4565b6001600160a01b0387166000908152600460205260409020611112908661142b565b506001600160a01b0386166000908152600460205260409020611135908661164f565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061119c9086908a908a906121f8565b60405180910390a46111b087878786611437565b6108d5878787878761165b565b6000610376825490565b6000546001600160a01b038281166201000090920416146104c757600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b606061037682611793565b6000610646836001600160a01b0384166117ee565b600054610100900460ff166112845760405162461bcd60e51b815260040161041590612184565b61128d8161183d565b6112d67feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611864565b6113007fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611864565b6105f37f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611864565b6001600160a01b03831661135f5760025460008181526007602090815260408083208590558483526008909152902055505050565b6001600160a01b0382166105f3576000600160025461137e91906121e5565b600083815260086020526040902054909150818110156113c0576000828152600760209081526040808320548484528184208190558352600890915290208190555b50600090815260076020908152604080832083905592825260089052908120555050565b6000818152600560205260408120906113fc826111bd565b905060005b81811015610f7257600061141584826118ad565b9050611422818787610bec565b50600101611401565b600061064683836118b9565b61144884631aed5a8560e21b6119ac565b15610492576000848484846040516020016114669493929190612379565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906114c4907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab009085906004016123c6565b6000604051808303816000875af11580156114e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a791908101906123df565b6000610646836001600160a01b0384166118b9565b60608161152e81601f612366565b101561156d5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610415565b6115778284612366565b845110156115bb5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610415565b6060821580156115da5760405191506000825260208201604052611624565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156116135780518352602092830192016115fb565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b03811660009081526001830160205260408120541515610646565b600061064683836117ee565b61166c84631aed5a8560e21b6119ac565b156117365760008585858460405160200161168a9493929190612379565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906116e8907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d9085906004016123c6565b6000604051808303816000875af1158015611707573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261172f91908101906123df565b5050610f72565b81610f72576001600160a01b0384163b1561176f57604051634349776d60e01b81526001600160a01b0385166004820152602401610415565b604051630317313760e01b81526001600160a01b0385166004820152602401610415565b60608160000180548060200260200160405190810160405280929190818152602001828054801561101c57602002820191906000526020600020905b8154815260200190600101908083116117cf5750505050509050919050565b600081815260018301602052604081205461183557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610376565b506000610376565b600054610100900460ff16610a455760405162461bcd60e51b815260040161041590612184565b600082815260016020526040902061187c82826122a7565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610dc69190611f44565b60006106468383611a35565b600081815260018301602052604081205480156119a25760006118dd6001836121e5565b85549091506000906118f1906001906121e5565b90508181146119565760008660000182815481106119115761191161216e565b90600052602060002001549050808760000184815481106119345761193461216e565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806119675761196761244c565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610376565b6000915050610376565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611a1e575060208210155b8015611a2a5750600081115b979650505050505050565b6000826000018281548110611a4c57611a4c61216e565b9060005260206000200154905092915050565b600060208284031215611a7157600080fd5b81356001600160e01b03198116811461064657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ac757611ac7611a89565b604052919050565b60006001600160401b03821115611ae857611ae8611a89565b50601f01601f191660200190565b600082601f830112611b0757600080fd5b8135611b1a611b1582611acf565b611a9f565b818152846020838601011115611b2f57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114611b6357600080fd5b919050565b600080600060608486031215611b7d57600080fd5b83356001600160401b0380821115611b9457600080fd5b611ba087838801611af6565b94506020860135915080821115611bb657600080fd5b50611bc386828701611af6565b925050611bd260408501611b4c565b90509250925092565b600060208284031215611bed57600080fd5b5035919050565b60008060408385031215611c0757600080fd5b611c1083611b4c565b946020939093013593505050565b60006001600160401b03821115611c3757611c37611a89565b5060051b60200190565b600082601f830112611c5257600080fd5b81356020611c62611b1583611c1e565b82815260059290921b84018101918181019086841115611c8157600080fd5b8286015b84811015611c9c5780358352918301918301611c85565b509695505050505050565b600082601f830112611cb857600080fd5b81356020611cc8611b1583611c1e565b82815260059290921b84018101918181019086841115611ce757600080fd5b8286015b84811015611c9c5780356001600160401b03811115611d0a5760008081fd5b611d188986838b0101611af6565b845250918301918301611ceb565b60008060408385031215611d3957600080fd5b82356001600160401b0380821115611d5057600080fd5b611d5c86838701611c41565b93506020850135915080821115611d7257600080fd5b50611d7f85828601611ca7565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611dca5783516001600160a01b031683529284019291840191600101611da5565b50909695505050505050565b600060208284031215611de857600080fd5b81356001600160401b03811115611dfe57600080fd5b610e4b84828501611c41565b60005b83811015611e25578181015183820152602001611e0d565b50506000910152565b60008151808452611e46816020860160208601611e0a565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611eaf57603f19888603018452611e9d858351611e2e565b94509285019290850190600101611e81565b5092979650505050505050565b80358015158114611b6357600080fd5b600080600080600060a08688031215611ee457600080fd5b611eed86611b4c565b9450611efb60208701611b4c565b935060408601359250611f1060608701611ebc565b915060808601356001600160401b03811115611f2b57600080fd5b611f3788828901611af6565b9150509295509295909350565b6020815260006106466020830184611e2e565b600060208284031215611f6957600080fd5b61064682611b4c565b600082601f830112611f8357600080fd5b81356020611f93611b1583611c1e565b82815260059290921b84018101918181019086841115611fb257600080fd5b8286015b84811015611c9c57611fc781611b4c565b8352918301918301611fb6565b600082601f830112611fe557600080fd5b81356020611ff5611b1583611c1e565b82815260059290921b8401810191818101908684111561201457600080fd5b8286015b84811015611c9c5761202981611ebc565b8352918301918301612018565b600080600080600060a0868803121561204e57600080fd5b85356001600160401b038082111561206557600080fd5b61207189838a01611f72565b9650602088013591508082111561208757600080fd5b61209389838a01611f72565b955060408801359150808211156120a957600080fd5b6120b589838a01611c41565b945060608801359150808211156120cb57600080fd5b6120d789838a01611fd4565b935060808801359150808211156120ed57600080fd5b50611f3788828901611ca7565b6000806040838503121561210d57600080fd5b8235915060208301356001600160401b0381111561212a57600080fd5b611d7f85828601611af6565b6020808252825182820181905260009190848201906040850190845b81811015611dca57835183529284019291840191600101612152565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610376576103766121cf565b6001600160a01b0384168152821515602082015260606040820181905260009061222490830184611e2e565b95945050505050565b600181811c9082168061224157607f821691505b60208210810361075a57634e487b7160e01b600052602260045260246000fd5b601f8211156105f357600081815260208120601f850160051c810160208610156122885750805b601f850160051c820191505b818110156107a757828155600101612294565b81516001600160401b038111156122c0576122c0611a89565b6122d4816122ce845461222d565b84612261565b602080601f83116001811461230957600084156122f15750858301515b600019600386901b1c1916600185901b1785556107a7565b600085815260208120601f198616915b8281101561233857888601518255948401946001909101908401612319565b50858210156123565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610376576103766121cf565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083602883015282516123b6816048850160208701611e0a565b9190910160480195945050505050565b828152604060208201526000610e4b6040830184611e2e565b6000602082840312156123f157600080fd5b81516001600160401b0381111561240757600080fd5b8201601f8101841361241857600080fd5b8051612426611b1582611acf565b81815285602083850101111561243b57600080fd5b612224826020830160208601611e0a565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203370c2a1c6bc532b557b310b77713240e350b0c668d8289f1305c54adf27cb8864736f6c63430008110033",
    "sourceMap": "341:520:138:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c8063511b6952116100b85780637f23690c1161007c5780637f23690c146102c15780638da5cb5b146102d457806392a91a3a146102eb578063a3b261f21461030b578063cf5182ba1461032b578063f2fde38b1461033e57600080fd5b8063511b69521461026057806354f6127f1461027357806370a0823114610293578063715018a6146102a65780637e87632c146102ae57600080fd5b806318160ddd1161010a57806318160ddd146101bd578063217b2270146101cf5780632a3654a4146101fa5780632cfd30051461020d57806349a6078d146102205780634e3e6e9c1461024057600080fd5b806301ffc9a714610147578063077f224a1461016f57806308a1eee1146101845780630b0c6d821461019757806314a6e293146101aa575b600080fd5b61015a610155366004611a5f565b610351565b60405190151581526020015b60405180910390f35b61018261017d366004611b68565b61037c565b005b610182610192366004611bdb565b610498565b6101826101a5366004611bf4565b6104ca565b6101826101b8366004611d26565b61056c565b6002545b604051908152602001610166565b6101e26101dd366004611bdb565b6105f8565b6040516001600160a01b039091168152602001610166565b61015a610208366004611bf4565b610631565b61018261021b366004611bf4565b61064d565b61023361022e366004611bdb565b61068b565b6040516101669190611d89565b61025361024e366004611dd6565b6106ad565b6040516101669190611e5a565b61018261026e366004611ecc565b610760565b610286610281366004611bdb565b6107af565b6040516101669190611f44565b6101c16102a1366004611f57565b6107ba565b6101826107db565b6101826102bc366004612036565b6107ef565b6101826102cf3660046120fa565b6108de565b6000546201000090046001600160a01b03166101e2565b6101c16102f9366004611bdb565b60009081526007602052604090205490565b61031e610319366004611f57565b6108f0565b6040516101669190612136565b610182610339366004611bf4565b610914565b61018261034c366004611f57565b610a3d565b60006001600160e01b0319821663622e7a0160e01b1480610376575061037682610ab3565b92915050565b600054610100900460ff161580801561039c5750600054600160ff909116105b806103b65750303b1580156103b6575060005460ff166001145b61041e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610441576000805461ff0019166101001790555b61044c848484610ae8565b8015610492576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6104c7816040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610b1a565b50565b60006104d5826105f8565b9050336001600160a01b038216811461051b57604051632d938f5160e11b81526001600160a01b0380841660048301526024820185905282166044820152606401610415565b6001600160a01b03841661054257604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036105615750505050565b610492848385610bec565b610574610c7d565b80518251146105a357815181516040516321d1e13360e11b815260048101929092526024820152604401610415565b60005b82518110156105f3576105eb8382815181106105c4576105c461216e565b60200260200101518383815181106105de576105de61216e565b6020026020010151610cde565b6001016105a6565b505050565b6000818152600360205260408120546001600160a01b03168061037657604051635747cd1b60e11b815260048101849052602401610415565b600061063c82610dd2565b6106468383610e0a565b9392505050565b61068782826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610e53565b5050565b606061069682610dd2565b600082815260056020526040902061037690610f79565b606081516001600160401b038111156106c8576106c8611a89565b6040519080825280602002602001820160405280156106fb57816020015b60608152602001906001900390816106e65790505b50905060005b825181101561075a5761072c83828151811061071f5761071f61216e565b6020026020010151610f86565b82828151811061073e5761073e61216e565b60200260200101819052506107538160010190565b9050610701565b50919050565b3361076b8185610e0a565b61079a57604051631294d2a960e01b8152600481018590526001600160a01b0382166024820152604401610415565b6107a78686868686611028565b505050505050565b606061037682610f86565b6001600160a01b0381166000908152600460205260408120610376906111bd565b6107e3610c7d565b6107ed60006111c7565b565b8451845181141580610802575083518114155b8061080e575082518114155b8061081a575081518114155b15610838576040516393a8311960e01b815260040160405180910390fd5b60005b818110156108d5576108cd8782815181106108585761085861216e565b60200260200101518783815181106108725761087261216e565b602002602001015187848151811061088c5761088c61216e565b60200260200101518785815181106108a6576108a661216e565b60200260200101518786815181106108c0576108c061216e565b6020026020010151610760565b60010161083b565b50505050505050565b6108e6610c7d565b6106878282610cde565b6001600160a01b03811660009081526004602052604090206060906103769061123d565b600061091f826105f8565b9050336001600160a01b038216811461096557604051632d938f5160e11b81526001600160a01b0380841660048301526024820185905282166044820152606401610415565b6001600160a01b03841661098c57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036109ab5750505050565b60008381526005602052604081206109c39086611248565b9050806109f5576040516314ec4d6d60e31b81526001600160a01b038616600482015260248101859052604401610415565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b610a45610c7d565b6001600160a01b038116610aaa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610415565b6104c7816111c7565b60006001600160e01b03198216631c537ddf60e21b148061037657506301ffc9a760e01b6001600160e01b0319831614610376565b600054610100900460ff16610b0f5760405162461bcd60e51b815260040161041590612184565b6105f383838361125d565b6000610b25836105f8565b905033610b348260008661132a565b600160026000828254610b4791906121e5565b90915550610b57905082856113e4565b6001600160a01b0382166000908152600460205260409020610b79908561142b565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610bd790869085908a906121f8565b60405180910390a46104928260008686611437565b6000818152600560205260408120610c04908561150b565b905080610c36576040516312a8c6a360e21b81526001600160a01b038516600482015260248101839052604401610415565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b03620100009091041633146107ed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610415565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610d1e576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610d5e57604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610d7682826122a7565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610db757610db2836000610100611520565b610db9565b825b604051610dc69190611f44565b60405180910390a25050565b6000818152600360205260409020546001600160a01b03166104c757604051635747cd1b60e11b815260048101829052602401610415565b600080610e16836105f8565b9050806001600160a01b0316846001600160a01b03161480610e4b57506000838152600560205260409020610e4b908561162d565b949350505050565b6001600160a01b038416610e7a576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b031615610eb3576040516334c7b51160e01b815260048101849052602401610415565b33610ec06000868661132a565b600160026000828254610ed39190612366565b90915550506001600160a01b0385166000908152600460205260409020610efa908561164f565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610f5c908690899089906121f8565b60405180910390a4610f7260008686868661165b565b5050505050565b6060600061064683611793565b6000818152600160205260409020805460609190610fa39061222d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fcf9061222d565b801561101c5780601f10610ff15761010080835404028352916020019161101c565b820191906000526020600020905b815481529060010190602001808311610fff57829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b03160361105a57604051635d67d6c160e01b815260040160405180910390fd5b6000611065846105f8565b9050856001600160a01b0316816001600160a01b0316146110b357604051632d938f5160e11b81526001600160a01b0380831660048301526024820186905287166044820152606401610415565b6001600160a01b0385166110da576040516324ecef4d60e01b815260040160405180910390fd5b336110e687878761132a565b6110f087866113e4565b6001600160a01b0387166000908152600460205260409020611112908661142b565b506001600160a01b0386166000908152600460205260409020611135908661164f565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061119c9086908a908a906121f8565b60405180910390a46111b087878786611437565b6108d5878787878761165b565b6000610376825490565b6000546001600160a01b038281166201000090920416146104c757600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b606061037682611793565b6000610646836001600160a01b0384166117ee565b600054610100900460ff166112845760405162461bcd60e51b815260040161041590612184565b61128d8161183d565b6112d67feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611864565b6113007fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611864565b6105f37f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611864565b6001600160a01b03831661135f5760025460008181526007602090815260408083208590558483526008909152902055505050565b6001600160a01b0382166105f3576000600160025461137e91906121e5565b600083815260086020526040902054909150818110156113c0576000828152600760209081526040808320548484528184208190558352600890915290208190555b50600090815260076020908152604080832083905592825260089052908120555050565b6000818152600560205260408120906113fc826111bd565b905060005b81811015610f7257600061141584826118ad565b9050611422818787610bec565b50600101611401565b600061064683836118b9565b61144884631aed5a8560e21b6119ac565b15610492576000848484846040516020016114669493929190612379565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906114c4907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab009085906004016123c6565b6000604051808303816000875af11580156114e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a791908101906123df565b6000610646836001600160a01b0384166118b9565b60608161152e81601f612366565b101561156d5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610415565b6115778284612366565b845110156115bb5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610415565b6060821580156115da5760405191506000825260208201604052611624565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156116135780518352602092830192016115fb565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b03811660009081526001830160205260408120541515610646565b600061064683836117ee565b61166c84631aed5a8560e21b6119ac565b156117365760008585858460405160200161168a9493929190612379565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906116e8907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d9085906004016123c6565b6000604051808303816000875af1158015611707573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261172f91908101906123df565b5050610f72565b81610f72576001600160a01b0384163b1561176f57604051634349776d60e01b81526001600160a01b0385166004820152602401610415565b604051630317313760e01b81526001600160a01b0385166004820152602401610415565b60608160000180548060200260200160405190810160405280929190818152602001828054801561101c57602002820191906000526020600020905b8154815260200190600101908083116117cf5750505050509050919050565b600081815260018301602052604081205461183557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610376565b506000610376565b600054610100900460ff16610a455760405162461bcd60e51b815260040161041590612184565b600082815260016020526040902061187c82826122a7565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610dc69190611f44565b60006106468383611a35565b600081815260018301602052604081205480156119a25760006118dd6001836121e5565b85549091506000906118f1906001906121e5565b90508181146119565760008660000182815481106119115761191161216e565b90600052602060002001549050808760000184815481106119345761193461216e565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806119675761196761244c565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610376565b6000915050610376565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611a1e575060208210155b8015611a2a5750600081115b979650505050505050565b6000826000018281548110611a4c57611a4c61216e565b9060005260206000200154905092915050565b600060208284031215611a7157600080fd5b81356001600160e01b03198116811461064657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ac757611ac7611a89565b604052919050565b60006001600160401b03821115611ae857611ae8611a89565b50601f01601f191660200190565b600082601f830112611b0757600080fd5b8135611b1a611b1582611acf565b611a9f565b818152846020838601011115611b2f57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114611b6357600080fd5b919050565b600080600060608486031215611b7d57600080fd5b83356001600160401b0380821115611b9457600080fd5b611ba087838801611af6565b94506020860135915080821115611bb657600080fd5b50611bc386828701611af6565b925050611bd260408501611b4c565b90509250925092565b600060208284031215611bed57600080fd5b5035919050565b60008060408385031215611c0757600080fd5b611c1083611b4c565b946020939093013593505050565b60006001600160401b03821115611c3757611c37611a89565b5060051b60200190565b600082601f830112611c5257600080fd5b81356020611c62611b1583611c1e565b82815260059290921b84018101918181019086841115611c8157600080fd5b8286015b84811015611c9c5780358352918301918301611c85565b509695505050505050565b600082601f830112611cb857600080fd5b81356020611cc8611b1583611c1e565b82815260059290921b84018101918181019086841115611ce757600080fd5b8286015b84811015611c9c5780356001600160401b03811115611d0a5760008081fd5b611d188986838b0101611af6565b845250918301918301611ceb565b60008060408385031215611d3957600080fd5b82356001600160401b0380821115611d5057600080fd5b611d5c86838701611c41565b93506020850135915080821115611d7257600080fd5b50611d7f85828601611ca7565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611dca5783516001600160a01b031683529284019291840191600101611da5565b50909695505050505050565b600060208284031215611de857600080fd5b81356001600160401b03811115611dfe57600080fd5b610e4b84828501611c41565b60005b83811015611e25578181015183820152602001611e0d565b50506000910152565b60008151808452611e46816020860160208601611e0a565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611eaf57603f19888603018452611e9d858351611e2e565b94509285019290850190600101611e81565b5092979650505050505050565b80358015158114611b6357600080fd5b600080600080600060a08688031215611ee457600080fd5b611eed86611b4c565b9450611efb60208701611b4c565b935060408601359250611f1060608701611ebc565b915060808601356001600160401b03811115611f2b57600080fd5b611f3788828901611af6565b9150509295509295909350565b6020815260006106466020830184611e2e565b600060208284031215611f6957600080fd5b61064682611b4c565b600082601f830112611f8357600080fd5b81356020611f93611b1583611c1e565b82815260059290921b84018101918181019086841115611fb257600080fd5b8286015b84811015611c9c57611fc781611b4c565b8352918301918301611fb6565b600082601f830112611fe557600080fd5b81356020611ff5611b1583611c1e565b82815260059290921b8401810191818101908684111561201457600080fd5b8286015b84811015611c9c5761202981611ebc565b8352918301918301612018565b600080600080600060a0868803121561204e57600080fd5b85356001600160401b038082111561206557600080fd5b61207189838a01611f72565b9650602088013591508082111561208757600080fd5b61209389838a01611f72565b955060408801359150808211156120a957600080fd5b6120b589838a01611c41565b945060608801359150808211156120cb57600080fd5b6120d789838a01611fd4565b935060808801359150808211156120ed57600080fd5b50611f3788828901611ca7565b6000806040838503121561210d57600080fd5b8235915060208301356001600160401b0381111561212a57600080fd5b611d7f85828601611af6565b6020808252825182820181905260009190848201906040850190845b81811015611dca57835183529284019291840191600101612152565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610376576103766121cf565b6001600160a01b0384168152821515602082015260606040820181905260009061222490830184611e2e565b95945050505050565b600181811c9082168061224157607f821691505b60208210810361075a57634e487b7160e01b600052602260045260246000fd5b601f8211156105f357600081815260208120601f850160051c810160208610156122885750805b601f850160051c820191505b818110156107a757828155600101612294565b81516001600160401b038111156122c0576122c0611a89565b6122d4816122ce845461222d565b84612261565b602080601f83116001811461230957600084156122f15750858301515b600019600386901b1c1916600185901b1785556107a7565b600085815260208120601f198616915b8281101561233857888601518255948401946001909101908401612319565b50858210156123565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610376576103766121cf565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083602883015282516123b6816048850160208701611e0a565b9190910160480195945050505050565b828152604060208201526000610e4b6040830184611e2e565b6000602082840312156123f157600080fd5b81516001600160401b0381111561240757600080fd5b8201601f8101841361241857600080fd5b8051612426611b1582611acf565b81815285602083850101111561243b57600080fd5b612224826020830160208601611e0a565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203370c2a1c6bc532b557b310b77713240e350b0c668d8289f1305c54adf27cb8864736f6c63430008110033",
    "sourceMap": "341:520:138:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:253:67;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1140:253:67;;;;;;;;411:230:138;;;;;;:::i;:::-;;:::i;:::-;;771:88;;;;;;:::i;:::-;;:::i;3461:587:66:-;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;5314:25:202;;;5302:2;5287:18;1690:92:66;5168:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5514:32:202;;;5496:51;;5484:2;5469:18;2082:259:66;5350:203:202;4119:188:66;;;;;;:::i;:::-;;:::i;647:118:138:-;;;;;;:::i;:::-;;:::i;4378:174:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;1058:133:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1885:126:66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;;;;-1:-1:-1;;;;;673:6:177;601:85;;772:104:75;;;;;;:::i;:::-;825:7;851:18;;;:11;:18;;;;;;;772:104;2412:136:66;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2654:736::-;;;;;;:::i;:::-;;:::i;1419:189:177:-;;;;;;:::i;:::-;;:::i;1140:253:67:-;1287:4;-1:-1:-1;;;;;;1314:32:67;;-1:-1:-1;;;1314:32:67;;:72;;;1350:36;1374:11;1350:23;:36::i;:::-;1307:79;1140:253;-1:-1:-1;;1140:253:67:o;411:230:138:-;3111:19:181;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:181;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:181;1476:19:182;:23;;;3219:66:181;;-1:-1:-1;3268:12:181;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:181;;13320:2:202;3157:201:181;;;13302:21:202;13359:2;13339:18;;;13332:30;13398:34;13378:18;;;13371:62;-1:-1:-1;;;13449:18:202;;;13442:44;13503:19;;3157:201:181;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:181;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:181;;;;;3394:65;558:76:138::1;611:4;617:6;625:8;558:52;:76::i;:::-;3483:14:181::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:181;;;3553:14;;-1:-1:-1;13685:36:202;;3553:14:181;;13673:2:202;13658:18;3553:14:181;;;;;;;3479:99;3101:483;411:230:138;;;:::o;771:88::-;821:31;827:7;821:31;;;;;;;;;;;;;-1:-1:-1;;;821:31:138;;;:5;:31::i;:::-;771:88;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;13990:15:202;;;3682:46:66;;;13972:34:202;14022:18;;;14015:34;;;14085:15;;14065:18;;;14058:43;13907:18;;3682:46:66;13732:375:202;3635:104:66;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;14286:25:202::0;;;;14327:18;;;14320:34;14259:18;;2036:72:174::1;14112:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;5314:25:202;;;5287:18;;2265:31:66;5168:177:202;4119:188:66;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;647:118:138:-;709:49;715:2;719:7;728:4;709:49;;;;;;;;;;;;;-1:-1:-1;;;709:49:138;;;:5;:49::i;:::-;647:118;;:::o;4378:174:66:-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;14671:25:202;;;-1:-1:-1;;;;;14732:32:202;;14712:18;;;14705:60;14644:18;;5357:39:66;14497:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;2412:136:66:-:0;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;2654:736::-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;13990:15:202;;;2878:46:66;;;13972:34:202;14022:18;;;14015:34;;;14085:15;;14065:18;;;14058:43;13907:18;;2878:46:66;13732:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;14968:32:202;;3270:48:66;;;14950:51:202;15017:18;;;15010:34;;;14923:18;;3270:48:66;14776:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;15257:2:202;1499:73:177::1;::::0;::::1;15239:21:202::0;15296:2;15276:18;;;15269:30;15335:34;15315:18;;;15308:62;-1:-1:-1;;;15386:18:202;;;15379:36;15432:19;;1499:73:177::1;15055:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;2907:251:174:-:0;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;824:249:67;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;991:75:67::1;1040:5;1047:7;1056:9;991:48;:75::i;9316:575:66:-:0;9394:18;9415:21;9428:7;9415:12;:21::i;:::-;9394:42;-1:-1:-1;9465:10:66;9486:53;9394:42;9446:16;9531:7;9486:20;:53::i;:::-;9599:1;9580:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;9611:36:66;;-1:-1:-1;9627:10:66;9639:7;9611:15;:36::i;:::-;-1:-1:-1;;;;;9658:24:66;;;;;;:12;:24;;;;;:40;;9690:7;9658:31;:40::i;:::-;-1:-1:-1;9715:21:66;;;;:12;:21;;;;;;9708:28;;-1:-1:-1;;;;;;9708:28:66;;;9752:64;9728:7;;9715:21;-1:-1:-1;;;;;9752:64:66;;;;;;;9761:8;;9715:21;;9811:4;;9752:64;:::i;:::-;;;;;;;;9827:57;9846:10;9866:1;9870:7;9879:4;9827:18;:57::i;6284:333::-;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;14968:32:202;;6507:42:66;;;14950:51:202;15017:18;;;15010:34;;;14923:18;;6507:42:66;14776:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;;;;;1755:10;1744:21;1736:66;;;;-1:-1:-1;;;1736:66:177;;16741:2:202;1736:66:177;;;16723:21:202;;;16760:18;;;16753:30;16819:34;16799:18;;;16792:62;16871:18;;1736:66:177;16539:356:202;1464:517:31;1563:31;;;1559:416;;1617:26;;-1:-1:-1;;;1617:26:31;;;;;;;;;;;1559:416;1664:33;;;1660:315;;1720:28;;-1:-1:-1;;;1720:28:31;;;;;;;;;;;1660:315;1779:15;;;;:6;:15;;;;;:27;1797:9;1779:15;:27;:::i;:::-;;1854:7;1825:139;1899:3;1879:9;:16;:23;;:71;;1917:33;1932:9;1943:1;1946:3;1917:14;:33::i;:::-;1879:71;;;1905:9;1879:71;1825:139;;;;;;:::i;:::-;;;;;;;;1464:517;;:::o;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;5314:25:202;;;5287:18;;8149:31:66;5168:177:202;4710:273:66;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;8425:700::-;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;5314:25:202;;;5287:18;;8701:33:66;5168:177:202;8658:87:66;8774:10;8795:45;8755:16;8828:2;8832:7;8795:20;:45::i;:::-;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;:::-;8555:570;8425:700;;;;:::o;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;13990:15:202;;;10476:44:66;;;13972:34:202;14022:18;;;14015:34;;;14085:15;;14065:18;;;14058:43;13907:18;;10476:44:66;13732:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10674:39;10695:4;10701:2;10705:7;10674:20;:39::i;:::-;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;6538:115:199:-;6601:7;6627:19;6635:3;4444:18;;4362:107;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;;;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;2070:6;2090:17;;;-1:-1:-1;;;;;;2090:17:177;;;;;2126:40;;2070:6;;;;;;;2090:17;;2070:6;;2126:40;;;2037:140;1948:235;:::o;7664:124:199:-;7727:16;7762:19;7770:3;7762:7;:19::i;8028:150::-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;694:472:31:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;852:42:31::1;884:9;852:31;:42::i;:::-;956:78;231:66:29;971:29:31;;1002:31;;;;;;;;;;;;;-1:-1:-1::0;;;1002:31:31::1;;::::0;956:14:::1;:78::i;:::-;1045:50;476:66:29;1088:5:31::0;1045:14:::1;:50::i;:::-;1105:54;619:66:29;1150:7:31::0;1105:14:::1;:54::i;882:837:75:-:0;-1:-1:-1;;;;;1059:18:75;;1055:603;;1109:15;;1093:13;1138:18;;;:11;:18;;;;;;;;:28;;;1180:20;;;:11;:20;;;;;:28;2129:137:174::1;1839:433:::0;;:::o;1055:603:75:-;-1:-1:-1;;;;;1229:16:75;;1225:433;;1261:17;1299:1;1281:15;;:19;;;;:::i;:::-;1314:13;1330:20;;;:11;:20;;;;;;1261:39;;-1:-1:-1;1368:17:75;;;1364:200;;;1405:19;1427:22;;;:11;:22;;;;;;;;;1467:18;;;;;;:32;;;1517:24;;:11;:24;;;;;:32;;;1364:200;-1:-1:-1;1584:22:75;;;;:11;:22;;;;;;;;1577:29;;;1627:20;;;:11;:20;;;;;1620:27;-1:-1:-1;;1839:433:174:o;6693:933:66:-;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;8346:156:199:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;21343:2:202;9631:50:200;;;21325:21:202;21382:2;21362:18;;;21355:30;-1:-1:-1;;;21401:18:202;;;21394:44;21455:18;;9631:50:200;21141:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;21686:2:202;9691:63:200;;;21668:21:202;21725:2;21705:18;;;21698:30;-1:-1:-1;;;21744:18:202;;;21737:47;21801:18;;9691:63:200;21484:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;5818:123;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;12480:681:66:-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;5514:32:202;;12997:55:66;;;5496:51:202;5469:18;;12997:55:66;5350:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;5514:32:202;;13098::66;;;5496:51:202;5469:18;;13098:32:66;5350:203:202;5469:109:199;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;743:233:175;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;9286:156:199:-;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;4680:811:1;4846:105;;;-1:-1:-1;;;;;;22124:33:202;;4846:105:1;;;;22106:52:202;;;;4846:105:1;;;;;;;;;;22079:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;4811:118:199:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:127;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:275;700:2;694:9;765:2;746:13;;-1:-1:-1;;742:27:202;730:40;;-1:-1:-1;;;;;785:34:202;;821:22;;;782:62;779:88;;;847:18;;:::i;:::-;883:2;876:22;629:275;;-1:-1:-1;629:275:202:o;909:187::-;958:4;-1:-1:-1;;;;;983:6:202;980:30;977:56;;;1013:18;;:::i;:::-;-1:-1:-1;1079:2:202;1058:15;-1:-1:-1;;1054:29:202;1085:4;1050:40;;909:187::o;1101:464::-;1144:5;1197:3;1190:4;1182:6;1178:17;1174:27;1164:55;;1215:1;1212;1205:12;1164:55;1251:6;1238:20;1282:49;1298:32;1327:2;1298:32;:::i;:::-;1282:49;:::i;:::-;1356:2;1347:7;1340:19;1402:3;1395:4;1390:2;1382:6;1378:15;1374:26;1371:35;1368:55;;;1419:1;1416;1409:12;1368:55;1484:2;1477:4;1469:6;1465:17;1458:4;1449:7;1445:18;1432:55;1532:1;1507:16;;;1525:4;1503:27;1496:38;;;;1511:7;1101:464;-1:-1:-1;;;1101:464:202:o;1570:173::-;1638:20;;-1:-1:-1;;;;;1687:31:202;;1677:42;;1667:70;;1733:1;1730;1723:12;1667:70;1570:173;;;:::o;1748:617::-;1845:6;1853;1861;1914:2;1902:9;1893:7;1889:23;1885:32;1882:52;;;1930:1;1927;1920:12;1882:52;1970:9;1957:23;-1:-1:-1;;;;;2040:2:202;2032:6;2029:14;2026:34;;;2056:1;2053;2046:12;2026:34;2079:50;2121:7;2112:6;2101:9;2097:22;2079:50;:::i;:::-;2069:60;;2182:2;2171:9;2167:18;2154:32;2138:48;;2211:2;2201:8;2198:16;2195:36;;;2227:1;2224;2217:12;2195:36;;2250:52;2294:7;2283:8;2272:9;2268:24;2250:52;:::i;:::-;2240:62;;;2321:38;2355:2;2344:9;2340:18;2321:38;:::i;:::-;2311:48;;1748:617;;;;;:::o;2370:180::-;2429:6;2482:2;2470:9;2461:7;2457:23;2453:32;2450:52;;;2498:1;2495;2488:12;2450:52;-1:-1:-1;2521:23:202;;2370:180;-1:-1:-1;2370:180:202:o;2555:254::-;2623:6;2631;2684:2;2672:9;2663:7;2659:23;2655:32;2652:52;;;2700:1;2697;2690:12;2652:52;2723:29;2742:9;2723:29;:::i;:::-;2713:39;2799:2;2784:18;;;;2771:32;;-1:-1:-1;;;2555:254:202:o;2814:183::-;2874:4;-1:-1:-1;;;;;2899:6:202;2896:30;2893:56;;;2929:18;;:::i;:::-;-1:-1:-1;2974:1:202;2970:14;2986:4;2966:25;;2814:183::o;3002:662::-;3056:5;3109:3;3102:4;3094:6;3090:17;3086:27;3076:55;;3127:1;3124;3117:12;3076:55;3163:6;3150:20;3189:4;3213:60;3229:43;3269:2;3229:43;:::i;3213:60::-;3307:15;;;3393:1;3389:10;;;;3377:23;;3373:32;;;3338:12;;;;3417:15;;;3414:35;;;3445:1;3442;3435:12;3414:35;3481:2;3473:6;3469:15;3493:142;3509:6;3504:3;3501:15;3493:142;;;3575:17;;3563:30;;3613:12;;;;3526;;3493:142;;;-1:-1:-1;3653:5:202;3002:662;-1:-1:-1;;;;;;3002:662:202:o;3669:887::-;3721:5;3774:3;3767:4;3759:6;3755:17;3751:27;3741:55;;3792:1;3789;3782:12;3741:55;3828:6;3815:20;3854:4;3878:60;3894:43;3934:2;3894:43;:::i;3878:60::-;3972:15;;;4058:1;4054:10;;;;4042:23;;4038:32;;;4003:12;;;;4082:15;;;4079:35;;;4110:1;4107;4100:12;4079:35;4146:2;4138:6;4134:15;4158:369;4174:6;4169:3;4166:15;4158:369;;;4260:3;4247:17;-1:-1:-1;;;;;4283:11:202;4280:35;4277:125;;;4356:1;4385:2;4381;4374:14;4277:125;4427:57;4480:3;4475:2;4461:11;4453:6;4449:24;4445:33;4427:57;:::i;:::-;4415:70;;-1:-1:-1;4505:12:202;;;;4191;;4158:369;;4561:602;4688:6;4696;4749:2;4737:9;4728:7;4724:23;4720:32;4717:52;;;4765:1;4762;4755:12;4717:52;4805:9;4792:23;-1:-1:-1;;;;;4875:2:202;4867:6;4864:14;4861:34;;;4891:1;4888;4881:12;4861:34;4914:61;4967:7;4958:6;4947:9;4943:22;4914:61;:::i;:::-;4904:71;;5028:2;5017:9;5013:18;5000:32;4984:48;;5057:2;5047:8;5044:16;5041:36;;;5073:1;5070;5063:12;5041:36;;5096:61;5149:7;5138:8;5127:9;5123:24;5096:61;:::i;:::-;5086:71;;;4561:602;;;;;:::o;5558:658::-;5729:2;5781:21;;;5851:13;;5754:18;;;5873:22;;;5700:4;;5729:2;5952:15;;;;5926:2;5911:18;;;5700:4;5995:195;6009:6;6006:1;6003:13;5995:195;;;6074:13;;-1:-1:-1;;;;;6070:39:202;6058:52;;6165:15;;;;6130:12;;;;6106:1;6024:9;5995:195;;;-1:-1:-1;6207:3:202;;5558:658;-1:-1:-1;;;;;;5558:658:202:o;6221:348::-;6305:6;6358:2;6346:9;6337:7;6333:23;6329:32;6326:52;;;6374:1;6371;6364:12;6326:52;6414:9;6401:23;-1:-1:-1;;;;;6439:6:202;6436:30;6433:50;;;6479:1;6476;6469:12;6433:50;6502:61;6555:7;6546:6;6535:9;6531:22;6502:61;:::i;6574:250::-;6659:1;6669:113;6683:6;6680:1;6677:13;6669:113;;;6759:11;;;6753:18;6740:11;;;6733:39;6705:2;6698:10;6669:113;;;-1:-1:-1;;6816:1:202;6798:16;;6791:27;6574:250::o;6829:270::-;6870:3;6908:5;6902:12;6935:6;6930:3;6923:19;6951:76;7020:6;7013:4;7008:3;7004:14;6997:4;6990:5;6986:16;6951:76;:::i;:::-;7081:2;7060:15;-1:-1:-1;;7056:29:202;7047:39;;;;7088:4;7043:50;;6829:270;-1:-1:-1;;6829:270:202:o;7104:800::-;7264:4;7293:2;7333;7322:9;7318:18;7363:2;7352:9;7345:21;7386:6;7421;7415:13;7452:6;7444;7437:22;7490:2;7479:9;7475:18;7468:25;;7552:2;7542:6;7539:1;7535:14;7524:9;7520:30;7516:39;7502:53;;7590:2;7582:6;7578:15;7611:1;7621:254;7635:6;7632:1;7629:13;7621:254;;;7728:2;7724:7;7712:9;7704:6;7700:22;7696:36;7691:3;7684:49;7756:39;7788:6;7779;7773:13;7756:39;:::i;:::-;7746:49;-1:-1:-1;7853:12:202;;;;7818:15;;;;7657:1;7650:9;7621:254;;;-1:-1:-1;7892:6:202;;7104:800;-1:-1:-1;;;;;;;7104:800:202:o;7909:160::-;7974:20;;8030:13;;8023:21;8013:32;;8003:60;;8059:1;8056;8049:12;8074:607;8175:6;8183;8191;8199;8207;8260:3;8248:9;8239:7;8235:23;8231:33;8228:53;;;8277:1;8274;8267:12;8228:53;8300:29;8319:9;8300:29;:::i;:::-;8290:39;;8348:38;8382:2;8371:9;8367:18;8348:38;:::i;:::-;8338:48;;8433:2;8422:9;8418:18;8405:32;8395:42;;8456:35;8487:2;8476:9;8472:18;8456:35;:::i;:::-;8446:45;;8542:3;8531:9;8527:19;8514:33;-1:-1:-1;;;;;8562:6:202;8559:30;8556:50;;;8602:1;8599;8592:12;8556:50;8625;8667:7;8658:6;8647:9;8643:22;8625:50;:::i;:::-;8615:60;;;8074:607;;;;;;;;:::o;8686:217::-;8833:2;8822:9;8815:21;8796:4;8853:44;8893:2;8882:9;8878:18;8870:6;8853:44;:::i;8908:186::-;8967:6;9020:2;9008:9;8999:7;8995:23;8991:32;8988:52;;;9036:1;9033;9026:12;8988:52;9059:29;9078:9;9059:29;:::i;9099:668::-;9153:5;9206:3;9199:4;9191:6;9187:17;9183:27;9173:55;;9224:1;9221;9214:12;9173:55;9260:6;9247:20;9286:4;9310:60;9326:43;9366:2;9326:43;:::i;9310:60::-;9404:15;;;9490:1;9486:10;;;;9474:23;;9470:32;;;9435:12;;;;9514:15;;;9511:35;;;9542:1;9539;9532:12;9511:35;9578:2;9570:6;9566:15;9590:148;9606:6;9601:3;9598:15;9590:148;;;9672:23;9691:3;9672:23;:::i;:::-;9660:36;;9716:12;;;;9623;;9590:148;;9772:662;9823:5;9876:3;9869:4;9861:6;9857:17;9853:27;9843:55;;9894:1;9891;9884:12;9843:55;9930:6;9917:20;9956:4;9980:60;9996:43;10036:2;9996:43;:::i;9980:60::-;10074:15;;;10160:1;10156:10;;;;10144:23;;10140:32;;;10105:12;;;;10184:15;;;10181:35;;;10212:1;10209;10202:12;10181:35;10248:2;10240:6;10236:15;10260:145;10276:6;10271:3;10268:15;10260:145;;;10342:20;10358:3;10342:20;:::i;:::-;10330:33;;10383:12;;;;10293;;10260:145;;10439:1276;10665:6;10673;10681;10689;10697;10750:3;10738:9;10729:7;10725:23;10721:33;10718:53;;;10767:1;10764;10757:12;10718:53;10807:9;10794:23;-1:-1:-1;;;;;10877:2:202;10869:6;10866:14;10863:34;;;10893:1;10890;10883:12;10863:34;10916:61;10969:7;10960:6;10949:9;10945:22;10916:61;:::i;:::-;10906:71;;11030:2;11019:9;11015:18;11002:32;10986:48;;11059:2;11049:8;11046:16;11043:36;;;11075:1;11072;11065:12;11043:36;11098:63;11153:7;11142:8;11131:9;11127:24;11098:63;:::i;:::-;11088:73;;11214:2;11203:9;11199:18;11186:32;11170:48;;11243:2;11233:8;11230:16;11227:36;;;11259:1;11256;11249:12;11227:36;11282:63;11337:7;11326:8;11315:9;11311:24;11282:63;:::i;:::-;11272:73;;11398:2;11387:9;11383:18;11370:32;11354:48;;11427:2;11417:8;11414:16;11411:36;;;11443:1;11440;11433:12;11411:36;11466:60;11518:7;11507:8;11496:9;11492:24;11466:60;:::i;:::-;11456:70;;11579:3;11568:9;11564:19;11551:33;11535:49;;11609:2;11599:8;11596:16;11593:36;;;11625:1;11622;11615:12;11593:36;;11648:61;11701:7;11690:8;11679:9;11675:24;11648:61;:::i;11720:389::-;11797:6;11805;11858:2;11846:9;11837:7;11833:23;11829:32;11826:52;;;11874:1;11871;11864:12;11826:52;11910:9;11897:23;11887:33;;11971:2;11960:9;11956:18;11943:32;-1:-1:-1;;;;;11990:6:202;11987:30;11984:50;;;12030:1;12027;12020:12;11984:50;12053;12095:7;12086:6;12075:9;12071:22;12053:50;:::i;12481:632::-;12652:2;12704:21;;;12774:13;;12677:18;;;12796:22;;;12623:4;;12652:2;12875:15;;;;12849:2;12834:18;;;12623:4;12918:169;12932:6;12929:1;12926:13;12918:169;;;12993:13;;12981:26;;13062:15;;;;13027:12;;;;12954:1;12947:9;12918:169;;14365:127;14426:10;14421:3;14417:20;14414:1;14407:31;14457:4;14454:1;14447:15;14481:4;14478:1;14471:15;15462:407;15664:2;15646:21;;;15703:2;15683:18;;;15676:30;15742:34;15737:2;15722:18;;15715:62;-1:-1:-1;;;15808:2:202;15793:18;;15786:41;15859:3;15844:19;;15462:407::o;15874:127::-;15935:10;15930:3;15926:20;15923:1;15916:31;15966:4;15963:1;15956:15;15990:4;15987:1;15980:15;16006:128;16073:9;;;16094:11;;;16091:37;;;16108:18;;:::i;16139:395::-;-1:-1:-1;;;;;16336:32:202;;16318:51;;16412:14;;16405:22;16400:2;16385:18;;16378:50;16464:2;16459;16444:18;;16437:30;;;-1:-1:-1;;16484:44:202;;16509:18;;16501:6;16484:44;:::i;:::-;16476:52;16139:395;-1:-1:-1;;;;;16139:395:202:o;16900:380::-;16979:1;16975:12;;;;17022;;;17043:61;;17097:4;17089:6;17085:17;17075:27;;17043:61;17150:2;17142:6;17139:14;17119:18;17116:38;17113:161;;17196:10;17191:3;17187:20;17184:1;17177:31;17231:4;17228:1;17221:15;17259:4;17256:1;17249:15;17410:544;17511:2;17506:3;17503:11;17500:448;;;17547:1;17572:5;17568:2;17561:17;17617:4;17613:2;17603:19;17687:2;17675:10;17671:19;17668:1;17664:27;17658:4;17654:38;17723:4;17711:10;17708:20;17705:47;;;-1:-1:-1;17746:4:202;17705:47;17801:2;17796:3;17792:12;17789:1;17785:20;17779:4;17775:31;17765:41;;17856:82;17874:2;17867:5;17864:13;17856:82;;;17919:17;;;17900:1;17889:13;17856:82;;18130:1348;18254:3;18248:10;-1:-1:-1;;;;;18273:6:202;18270:30;18267:56;;;18303:18;;:::i;:::-;18332:96;18421:6;18381:38;18413:4;18407:11;18381:38;:::i;:::-;18375:4;18332:96;:::i;:::-;18483:4;;18547:2;18536:14;;18564:1;18559:662;;;;19265:1;19282:6;19279:89;;;-1:-1:-1;19334:19:202;;;19328:26;19279:89;-1:-1:-1;;18087:1:202;18083:11;;;18079:24;18075:29;18065:40;18111:1;18107:11;;;18062:57;19381:81;;18529:943;;18559:662;17357:1;17350:14;;;17394:4;17381:18;;-1:-1:-1;;18595:20:202;;;18712:236;18726:7;18723:1;18720:14;18712:236;;;18815:19;;;18809:26;18794:42;;18907:27;;;;18875:1;18863:14;;;;18742:19;;18712:236;;;18716:3;18976:6;18967:7;18964:19;18961:201;;;19037:19;;;19031:26;-1:-1:-1;;19120:1:202;19116:14;;;19132:3;19112:24;19108:37;19104:42;19089:58;19074:74;;18961:201;-1:-1:-1;;;;;19208:1:202;19192:14;;;19188:22;19175:36;;-1:-1:-1;18130:1348:202:o;19483:125::-;19548:9;;;19569:10;;;19566:36;;;19582:18;;:::i;19613:577::-;19826:3;19858:26;19854:31;19927:2;19918:6;19914:2;19910:15;19906:24;19901:3;19894:37;19982:2;19973:6;19969:2;19965:15;19961:24;19956:2;19951:3;19947:12;19940:46;;20016:6;20011:2;20006:3;20002:12;19995:28;20052:6;20046:13;20068:75;20136:6;20131:2;20126:3;20122:12;20115:4;20107:6;20103:17;20068:75;:::i;:::-;20163:16;;;;20181:2;20159:25;;19613:577;-1:-1:-1;;;;;19613:577:202:o;20195:288::-;20370:6;20359:9;20352:25;20413:2;20408;20397:9;20393:18;20386:30;20333:4;20433:44;20473:2;20462:9;20458:18;20450:6;20433:44;:::i;20488:648::-;20567:6;20620:2;20608:9;20599:7;20595:23;20591:32;20588:52;;;20636:1;20633;20626:12;20588:52;20669:9;20663:16;-1:-1:-1;;;;;20694:6:202;20691:30;20688:50;;;20734:1;20731;20724:12;20688:50;20757:22;;20810:4;20802:13;;20798:27;-1:-1:-1;20788:55:202;;20839:1;20836;20829:12;20788:55;20868:2;20862:9;20893:49;20909:32;20938:2;20909:32;:::i;20893:49::-;20965:2;20958:5;20951:17;21005:7;21000:2;20995;20991;20987:11;20983:20;20980:33;20977:53;;;21026:1;21023;21016:12;20977:53;21039:67;21103:2;21098;21091:5;21087:14;21082:2;21078;21074:11;21039:67;:::i;21830:127::-;21891:10;21886:3;21882:20;21879:1;21872:31;21922:4;21919:1;21912:15;21946:4;21943:1;21936:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "burn(bytes32)": "08a1eee1",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "initialize(string,string,address)": "077f224a",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,bytes32)": "2cfd3005",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenAt(uint256)": "92a91a3a",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32)\":{\"details\":\"Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"tokenId\":\"The tokenId operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenAt(uint256)\":{\"details\":\"Returns a token id at index. See totalSupply() to get total number of minted tokens.\",\"returns\":{\"_0\":\"TokenId or 0x00 if no token exist at the index `index`\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/Tokens/LSP8EnumerableInitTester.sol\":\"LSP8EnumerableInitTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol\":{\"keccak256\":\"0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2\",\"dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol\":{\"keccak256\":\"0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338\",\"dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8EnumerableInitAbstract.sol\":{\"keccak256\":\"0x19fcf0f8210667e5699443e869d96e8285ab27452fdb93c6625f3256f5ac609e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1ae1c8c4ffdf2458ffddae2b37c95d10a959316a6a854a70915ad72e6e12e46\",\"dweb:/ipfs/QmZdTX32xQA1EHES33SL6KxEutWgS75HGP1TVToXvyAjXG\"]},\"contracts/Mocks/Tokens/LSP8EnumerableInitTester.sol\":{\"keccak256\":\"0x361e41e4970e6551efa77840a579ecea17a7b3464cb618f11d573b9aa7ecf1a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21af3039ec56c6d771c1486970bd305952c6b8ecc31296afe7531e3c4820b507\",\"dweb:/ipfs/Qmb6SAnKSCanmFC4M22TS1Ga2UebJmDPGd4d76STxMAtUD\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol\":{\"keccak256\":\"0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551\",\"dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenAt",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeOperator(address,bytes32)": {
            "details": "Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.",
            "params": {
              "operator": "The address to authorize as an operator.",
              "tokenId": "The tokenId operator has access to."
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenAt(uint256)": {
            "details": "Returns a token id at index. See totalSupply() to get total number of minted tokens.",
            "returns": {
              "_0": "TokenId or 0x00 if no token exist at the index `index`"
            }
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Mocks/Tokens/LSP8EnumerableInitTester.sol": "LSP8EnumerableInitTester"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol": {
        "keccak256": "0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792",
        "urls": [
          "bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2",
          "dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol": {
        "keccak256": "0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968",
        "urls": [
          "bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338",
          "dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8EnumerableInitAbstract.sol": {
        "keccak256": "0x19fcf0f8210667e5699443e869d96e8285ab27452fdb93c6625f3256f5ac609e",
        "urls": [
          "bzz-raw://d1ae1c8c4ffdf2458ffddae2b37c95d10a959316a6a854a70915ad72e6e12e46",
          "dweb:/ipfs/QmZdTX32xQA1EHES33SL6KxEutWgS75HGP1TVToXvyAjXG"
        ],
        "license": "MIT"
      },
      "contracts/Mocks/Tokens/LSP8EnumerableInitTester.sol": {
        "keccak256": "0x361e41e4970e6551efa77840a579ecea17a7b3464cb618f11d573b9aa7ecf1a1",
        "urls": [
          "bzz-raw://21af3039ec56c6d771c1486970bd305952c6b8ecc31296afe7531e3c4820b507",
          "dweb:/ipfs/Qmb6SAnKSCanmFC4M22TS1Ga2UebJmDPGd4d76STxMAtUD"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol": {
        "keccak256": "0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45",
        "urls": [
          "bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551",
          "dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Mocks/Tokens/LSP8EnumerableInitTester.sol",
    "id": 16962,
    "exportedSymbols": {
      "LSP8EnumerableInitAbstract": [
        12726
      ],
      "LSP8EnumerableInitTester": [
        16961
      ],
      "LSP8IdentifiableDigitalAssetInitAbstract": [
        11104
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:829:138",
    "nodes": [
      {
        "id": 16908,
        "nodeType": "PragmaDirective",
        "src": "33:23:138",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16910,
        "nodeType": "ImportDirective",
        "src": "69:143:138",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16962,
        "sourceUnit": 11105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16909,
              "name": "LSP8IdentifiableDigitalAssetInitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11104,
              "src": "82:40:138",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16912,
        "nodeType": "ImportDirective",
        "src": "213:126:138",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8EnumerableInitAbstract.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/extensions/LSP8EnumerableInitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16962,
        "sourceUnit": 12727,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16911,
              "name": "LSP8EnumerableInitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12726,
              "src": "226:26:138",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16961,
        "nodeType": "ContractDefinition",
        "src": "341:520:138",
        "nodes": [
          {
            "id": 16934,
            "nodeType": "FunctionDefinition",
            "src": "411:230:138",
            "nodes": [],
            "body": {
              "id": 16933,
              "nodeType": "Block",
              "src": "548:93:138",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16928,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16916,
                        "src": "611:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 16929,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16918,
                        "src": "617:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 16930,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16920,
                        "src": "625:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16925,
                        "name": "LSP8IdentifiableDigitalAssetInitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11104,
                        "src": "558:40:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP8IdentifiableDigitalAssetInitAbstract_$11104_$",
                          "typeString": "type(contract LSP8IdentifiableDigitalAssetInitAbstract)"
                        }
                      },
                      "id": 16927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "599:11:138",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11082,
                      "src": "558:52:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address)"
                      }
                    },
                    "id": 16931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "558:76:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16932,
                  "nodeType": "ExpressionStatement",
                  "src": "558:76:138"
                }
              ]
            },
            "functionSelector": "077f224a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16923,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16922,
                  "name": "initializer",
                  "nameLocations": [
                    "536:11:138"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43911,
                  "src": "536:11:138"
                },
                "nodeType": "ModifierInvocation",
                "src": "536:11:138"
              }
            ],
            "name": "initialize",
            "nameLocation": "420:10:138",
            "parameters": {
              "id": 16921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16916,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "454:4:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 16934,
                  "src": "440:18:138",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16915,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:6:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16918,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "482:6:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 16934,
                  "src": "468:20:138",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16917,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:6:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16920,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "506:8:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 16934,
                  "src": "498:16:138",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:138",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:90:138"
            },
            "returnParameters": {
              "id": 16924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:0:138"
            },
            "scope": 16961,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 16949,
            "nodeType": "FunctionDefinition",
            "src": "647:118:138",
            "nodes": [],
            "body": {
              "id": 16948,
              "nodeType": "Block",
              "src": "699:66:138",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16942,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16936,
                        "src": "715:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16943,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16938,
                        "src": "719:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "746f6b656e207072696e74657220676f2062727272",
                        "id": 16945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "734:23:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        },
                        "value": "token printer go brrr"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        }
                      ],
                      "id": 16941,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10751,
                      "src": "709:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 16946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "709:49:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16947,
                  "nodeType": "ExpressionStatement",
                  "src": "709:49:138"
                }
              ]
            },
            "functionSelector": "2cfd3005",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "656:4:138",
            "parameters": {
              "id": 16939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16936,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "669:2:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 16949,
                  "src": "661:10:138",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:138",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16938,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "681:7:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 16949,
                  "src": "673:15:138",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16937,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "660:29:138"
            },
            "returnParameters": {
              "id": 16940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "699:0:138"
            },
            "scope": 16961,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16960,
            "nodeType": "FunctionDefinition",
            "src": "771:88:138",
            "nodes": [],
            "body": {
              "id": 16959,
              "nodeType": "Block",
              "src": "811:48:138",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16955,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16951,
                        "src": "827:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6665656c20746865206275726e",
                        "id": 16956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:15:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        },
                        "value": "feel the burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        }
                      ],
                      "id": 16954,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10823,
                      "src": "821:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory)"
                      }
                    },
                    "id": 16957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:31:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16958,
                  "nodeType": "ExpressionStatement",
                  "src": "821:31:138"
                }
              ]
            },
            "functionSelector": "08a1eee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "780:4:138",
            "parameters": {
              "id": 16952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16951,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "793:7:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 16960,
                  "src": "785:15:138",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16950,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:17:138"
            },
            "returnParameters": {
              "id": 16953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "811:0:138"
            },
            "scope": 16961,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16913,
              "name": "LSP8EnumerableInitAbstract",
              "nameLocations": [
                "378:26:138"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12726,
              "src": "378:26:138"
            },
            "id": 16914,
            "nodeType": "InheritanceSpecifier",
            "src": "378:26:138"
          }
        ],
        "canonicalName": "LSP8EnumerableInitTester",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16961,
          12726,
          11104,
          11044,
          9968,
          4296,
          43546,
          43508,
          43840,
          46531,
          46594,
          43687,
          43991
        ],
        "name": "LSP8EnumerableInitTester",
        "nameLocation": "350:24:138",
        "scope": 16962,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 138
}