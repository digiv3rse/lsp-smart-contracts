{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620024eb380380620024eb833981016040819052620000349162000322565b828282828282806001600160a01b038116620000a55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840160405180910390fd5b620000bb816200019560201b620008e01760201c565b50620001127feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250620001fc60201b620009451760201c565b6200014c7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b84620001fc60201b620009451760201c565b620001867f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b83620001fc60201b620009451760201c565b5050505050505050506200053f565b6000546001600160a01b03828116911614620001f957600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505b50565b60008281526001602052604090206200021682826200043e565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516200024991906200050a565b60405180910390a25050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002885781810151838201526020016200026e565b50506000910152565b600082601f830112620002a357600080fd5b81516001600160401b0380821115620002c057620002c062000255565b604051601f8301601f19908116603f01168101908282118183101715620002eb57620002eb62000255565b816040528381528660208588010111156200030557600080fd5b620003188460208301602089016200026b565b9695505050505050565b6000806000606084860312156200033857600080fd5b83516001600160401b03808211156200035057600080fd5b6200035e8783880162000291565b945060208601519150808211156200037557600080fd5b50620003848682870162000291565b604086015190935090506001600160a01b0381168114620003a457600080fd5b809150509250925092565b600181811c90821680620003c457607f821691505b602082108103620003e557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200043957600081815260208120601f850160051c81016020861015620004145750805b601f850160051c820191505b81811015620004355782815560010162000420565b5050505b505050565b81516001600160401b038111156200045a576200045a62000255565b62000472816200046b8454620003af565b84620003eb565b602080601f831160018114620004aa5760008415620004915750858301515b600019600386901b1c1916600185901b17855562000435565b600085815260208120601f198616915b82811015620004db57888601518255948401946001909101908401620004ba565b5085821015620004fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200052b8160408501602087016200026b565b601f01601f19169190910160400192915050565b611f9c806200054f6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806354f6127f116100ad5780638da5cb5b116100715780638da5cb5b1461027a578063a3b261f21461028b578063af255b61146102ab578063cf5182ba146102be578063f2fde38b146102d157600080fd5b806354f6127f1461021957806370a0823114610239578063715018a61461024c5780637e87632c146102545780637f23690c1461026757600080fd5b8063217b2270116100f4578063217b2270146101885780632a3654a4146101b357806349a6078d146101c65780634e3e6e9c146101e6578063511b69521461020657600080fd5b806301ffc9a7146101265780630b0c6d821461014e57806314a6e2931461016357806318160ddd14610176575b600080fd5b6101396101343660046115ba565b6102e4565b60405190151581526020015b60405180910390f35b61016161015c366004611600565b61030f565b005b6101616101713660046117f5565b6103bc565b6002545b604051908152602001610145565b61019b610196366004611858565b610448565b6040516001600160a01b039091168152602001610145565b6101396101c1366004611600565b610481565b6101d96101d4366004611858565b61049d565b6040516101459190611871565b6101f96101f43660046118be565b6104bf565b6040516101459190611942565b6101616102143660046119b4565b610572565b61022c610227366004611858565b6105c1565b6040516101459190611a2c565b61017a610247366004611a3f565b6105cc565b6101616105ed565b610161610262366004611b1e565b610601565b610161610275366004611be2565b6106f0565b6000546001600160a01b031661019b565b61029e610299366004611a3f565b610706565b6040516101459190611c1e565b6101616102b9366004611c56565b61072a565b6101616102cc366004611600565b61073e565b6101616102df366004611a3f565b610867565b60006001600160e01b0319821663622e7a0160e01b148061030957506103098261099a565b92915050565b600061031a82610448565b9050336001600160a01b038216811461036557604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661038c57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036103ab5750505050565b6103b68483856109cf565b50505050565b6103c4610a60565b80518251146103f357815181516040516321d1e13360e11b81526004810192909252602482015260440161035c565b60005b82518110156104435761043b83828151811061041457610414611cbd565b602002602001015183838151811061042e5761042e611cbd565b6020026020010151610ac9565b6001016103f6565b505050565b6000818152600360205260408120546001600160a01b03168061030957604051635747cd1b60e11b81526004810184905260240161035c565b600061048c82610bb1565b6104968383610be9565b9392505050565b60606104a882610bb1565b600082815260056020526040902061030990610c32565b606081516001600160401b038111156104da576104da61162a565b60405190808252806020026020018201604052801561050d57816020015b60608152602001906001900390816104f85790505b50905060005b825181101561056c5761053e83828151811061053157610531611cbd565b6020026020010151610c3f565b82828151811061055057610550611cbd565b60200260200101819052506105658160010190565b9050610513565b50919050565b3361057d8185610be9565b6105ac57604051631294d2a960e01b8152600481018590526001600160a01b038216602482015260440161035c565b6105b98686868686610ce1565b505050505050565b606061030982610c3f565b6001600160a01b038116600090815260046020526040812061030990610e6b565b6105f5610a60565b6105ff60006108e0565b565b8451845181141580610614575083518114155b80610620575082518114155b8061062c575081518114155b1561064a576040516393a8311960e01b815260040160405180910390fd5b60005b818110156106e7576106df87828151811061066a5761066a611cbd565b602002602001015187838151811061068457610684611cbd565b602002602001015187848151811061069e5761069e611cbd565b60200260200101518785815181106106b8576106b8611cbd565b60200260200101518786815181106106d2576106d2611cbd565b6020026020010151610572565b60010161064d565b50505050505050565b6106f8610a60565b6107028282610ac9565b5050565b6001600160a01b038116600090815260046020526040902060609061030990610e75565b610732610a60565b6103b684848484610e80565b600061074982610448565b9050336001600160a01b038216811461078f57604051632d938f5160e11b81526001600160a01b038084166004830152602482018590528216604482015260640161035c565b6001600160a01b0384166107b657604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036107d55750505050565b60008381526005602052604081206107ed9086610f9a565b90508061081f576040516314ec4d6d60e31b81526001600160a01b03861660048201526024810185905260440161035c565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b61086f610a60565b6001600160a01b0381166108d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035c565b6108dd816108e0565b50565b6000546001600160a01b038281169116146108dd57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260016020526040902061095d8282611d4d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161098e9190611a2c565b60405180910390a25050565b60006001600160e01b03198216631c537ddf60e21b148061030957506301ffc9a760e01b6001600160e01b0319831614610309565b60008181526005602052604081206109e79085610faf565b905080610a19576040516312a8c6a360e21b81526001600160a01b03851660048201526024810183905260440161035c565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b33610a736000546001600160a01b031690565b6001600160a01b0316146105ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035c565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610b09576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610b4957604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610b618282611d4d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610ba257610b9d836000610100610fc4565b610ba4565b825b60405161098e9190611a2c565b6000818152600360205260409020546001600160a01b03166108dd57604051635747cd1b60e11b81526004810182905260240161035c565b600080610bf583610448565b9050806001600160a01b0316846001600160a01b03161480610c2a57506000838152600560205260409020610c2a90856110d1565b949350505050565b60606000610496836110f3565b6000818152600160205260409020805460609190610c5c90611cd3565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8890611cd3565b8015610cd55780601f10610caa57610100808354040283529160200191610cd5565b820191906000526020600020905b815481529060010190602001808311610cb857829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610d1357604051635d67d6c160e01b815260040160405180910390fd5b6000610d1e84610448565b9050856001600160a01b0316816001600160a01b031614610d6c57604051632d938f5160e11b81526001600160a01b038083166004830152602482018690528716604482015260640161035c565b6001600160a01b038516610d93576040516324ecef4d60e01b815260040160405180910390fd5b33610d9e878661114e565b6001600160a01b0387166000908152600460205260409020610dc09086611195565b506001600160a01b0386166000908152600460205260409020610de390866111a1565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610e4a9086908a908a90611e0c565b60405180910390a4610e5e878787866111ad565b6106e78787878787611281565b6000610309825490565b6060610309826110f3565b6001600160a01b038416610ea7576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b031615610ee0576040516334c7b51160e01b81526004810184905260240161035c565b33600160026000828254610ef49190611e57565b90915550506001600160a01b0385166000908152600460205260409020610f1b90856111a1565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610f7d90869089908990611e0c565b60405180910390a4610f93600086868686611281565b5050505050565b6000610496836001600160a01b0384166113b9565b6000610496836001600160a01b038416611408565b606081610fd281601f611e57565b10156110115760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161035c565b61101b8284611e57565b8451101561105f5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161035c565b60608215801561107e57604051915060008252602082016040526110c8565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156110b757805183526020928301920161109f565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b03811660009081526001830160205260408120541515610496565b606081600001805480602002602001604051908101604052809291908181526020018280548015610cd557602002820191906000526020600020905b81548152602001906001019080831161112f5750505050509050919050565b60008181526005602052604081209061116682610e6b565b905060005b81811015610f9357600061117f84826114fb565b905061118c8187876109cf565b5060010161116b565b60006104968383611408565b600061049683836113b9565b6111be84631aed5a8560e21b611507565b156103b6576000848484846040516020016111dc9493929190611e6a565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a149061123a907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401611eb7565b6000604051808303816000875af1158015611259573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105b99190810190611ed0565b61129284631aed5a8560e21b611507565b1561135c576000858585846040516020016112b09493929190611e6a565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a149061130e907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401611eb7565b6000604051808303816000875af115801561132d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113559190810190611ed0565b5050610f93565b81610f93576001600160a01b0384163b1561139557604051634349776d60e01b81526001600160a01b038516600482015260240161035c565b604051630317313760e01b81526001600160a01b038516600482015260240161035c565b600081815260018301602052604081205461140057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610309565b506000610309565b600081815260018301602052604081205480156114f157600061142c600183611f3d565b855490915060009061144090600190611f3d565b90508181146114a557600086600001828154811061146057611460611cbd565b906000526020600020015490508087600001848154811061148357611483611cbd565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806114b6576114b6611f50565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610309565b6000915050610309565b60006104968383611590565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611579575060208210155b80156115855750600081115b979650505050505050565b60008260000182815481106115a7576115a7611cbd565b9060005260206000200154905092915050565b6000602082840312156115cc57600080fd5b81356001600160e01b03198116811461049657600080fd5b80356001600160a01b03811681146115fb57600080fd5b919050565b6000806040838503121561161357600080fd5b61161c836115e4565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156116685761166861162a565b604052919050565b60006001600160401b038211156116895761168961162a565b5060051b60200190565b600082601f8301126116a457600080fd5b813560206116b96116b483611670565b611640565b82815260059290921b840181019181810190868411156116d857600080fd5b8286015b848110156116f357803583529183019183016116dc565b509695505050505050565b60006001600160401b038211156117175761171761162a565b50601f01601f191660200190565b600082601f83011261173657600080fd5b81356117446116b4826116fe565b81815284602083860101111561175957600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261178757600080fd5b813560206117976116b483611670565b82815260059290921b840181019181810190868411156117b657600080fd5b8286015b848110156116f35780356001600160401b038111156117d95760008081fd5b6117e78986838b0101611725565b8452509183019183016117ba565b6000806040838503121561180857600080fd5b82356001600160401b038082111561181f57600080fd5b61182b86838701611693565b9350602085013591508082111561184157600080fd5b5061184e85828601611776565b9150509250929050565b60006020828403121561186a57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156118b25783516001600160a01b03168352928401929184019160010161188d565b50909695505050505050565b6000602082840312156118d057600080fd5b81356001600160401b038111156118e657600080fd5b610c2a84828501611693565b60005b8381101561190d5781810151838201526020016118f5565b50506000910152565b6000815180845261192e8160208601602086016118f2565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561199757603f19888603018452611985858351611916565b94509285019290850190600101611969565b5092979650505050505050565b803580151581146115fb57600080fd5b600080600080600060a086880312156119cc57600080fd5b6119d5866115e4565b94506119e3602087016115e4565b9350604086013592506119f8606087016119a4565b915060808601356001600160401b03811115611a1357600080fd5b611a1f88828901611725565b9150509295509295909350565b6020815260006104966020830184611916565b600060208284031215611a5157600080fd5b610496826115e4565b600082601f830112611a6b57600080fd5b81356020611a7b6116b483611670565b82815260059290921b84018101918181019086841115611a9a57600080fd5b8286015b848110156116f357611aaf816115e4565b8352918301918301611a9e565b600082601f830112611acd57600080fd5b81356020611add6116b483611670565b82815260059290921b84018101918181019086841115611afc57600080fd5b8286015b848110156116f357611b11816119a4565b8352918301918301611b00565b600080600080600060a08688031215611b3657600080fd5b85356001600160401b0380821115611b4d57600080fd5b611b5989838a01611a5a565b96506020880135915080821115611b6f57600080fd5b611b7b89838a01611a5a565b95506040880135915080821115611b9157600080fd5b611b9d89838a01611693565b94506060880135915080821115611bb357600080fd5b611bbf89838a01611abc565b93506080880135915080821115611bd557600080fd5b50611a1f88828901611776565b60008060408385031215611bf557600080fd5b8235915060208301356001600160401b03811115611c1257600080fd5b61184e85828601611725565b6020808252825182820181905260009190848201906040850190845b818110156118b257835183529284019291840191600101611c3a565b60008060008060808587031215611c6c57600080fd5b611c75856115e4565b935060208501359250611c8a604086016119a4565b915060608501356001600160401b03811115611ca557600080fd5b611cb187828801611725565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611ce757607f821691505b60208210810361056c57634e487b7160e01b600052602260045260246000fd5b601f82111561044357600081815260208120601f850160051c81016020861015611d2e5750805b601f850160051c820191505b818110156105b957828155600101611d3a565b81516001600160401b03811115611d6657611d6661162a565b611d7a81611d748454611cd3565b84611d07565b602080601f831160018114611daf5760008415611d975750858301515b600019600386901b1c1916600185901b1785556105b9565b600085815260208120601f198616915b82811015611dde57888601518255948401946001909101908401611dbf565b5085821015611dfc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03841681528215156020820152606060408201819052600090611e3890830184611916565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561030957610309611e41565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251611ea78160488501602087016118f2565b9190910160480195945050505050565b828152604060208201526000610c2a6040830184611916565b600060208284031215611ee257600080fd5b81516001600160401b03811115611ef857600080fd5b8201601f81018413611f0957600080fd5b8051611f176116b4826116fe565b818152856020838501011115611f2c57600080fd5b611e388260208301602086016118f2565b8181038181111561030957610309611e41565b634e487b7160e01b600052603160045260246000fdfea26469706673582212204fea00f8e7066a080dacad731f42060c62334fd023046d92097c93d0a31964de64736f6c63430008110033",
    "sourceMap": "250:712:80:-:0;;;557:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;691:5;698:7;707:9;691:5;698:7;707:9;;-1:-1:-1;;;;;812:22:173;;804:73;;;;-1:-1:-1;;;804:73:173;;2041:2:202;804:73:173;;;2023:21:202;2080:2;2060:18;;;2053:30;2119:34;2099:18;;;2092:62;-1:-1:-1;;;2170:18:202;;;2163:36;2216:19;;804:73:173;;;;;;;;887:32;910:8;887:22;;;;;:32;;:::i;:::-;764:162;1016:78:30::1;231:66:29;1031:29:30;;1062:31;;;;;;;;;;;;;-1:-1:-1::0;;;1062:31:30::1;;::::0;1016:14:::1;;;;;:78;;:::i;:::-;1105:50;476:66:29;1120:20:30;;1148:5;1105:14;;;;;:50;;:::i;:::-;1165:54;619:66:29;1180:22:30;;1210:7;1165:14;;;;;:54;;:::i;:::-;827:399:::0;;;967:159:65;;;557:163:80;;;250:712;;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;2012:165;1948:235;:::o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;14:127:202:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:202;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:202;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:202;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:202:o;1105:729::-;1213:6;1221;1229;1282:2;1270:9;1261:7;1257:23;1253:32;1250:52;;;1298:1;1295;1288:12;1250:52;1325:16;;-1:-1:-1;;;;;1390:14:202;;;1387:34;;;1417:1;1414;1407:12;1387:34;1440:61;1493:7;1484:6;1473:9;1469:22;1440:61;:::i;:::-;1430:71;;1547:2;1536:9;1532:18;1526:25;1510:41;;1576:2;1566:8;1563:16;1560:36;;;1592:1;1589;1582:12;1560:36;;1615:63;1670:7;1659:8;1648:9;1644:24;1615:63;:::i;:::-;1721:2;1706:18;;1700:25;1605:73;;-1:-1:-1;1700:25:202;-1:-1:-1;;;;;;1754:31:202;;1744:42;;1734:70;;1800:1;1797;1790:12;1734:70;1823:5;1813:15;;;1105:729;;;;;:::o;2246:380::-;2325:1;2321:12;;;;2368;;;2389:61;;2443:4;2435:6;2431:17;2421:27;;2389:61;2496:2;2488:6;2485:14;2465:18;2462:38;2459:161;;2542:10;2537:3;2533:20;2530:1;2523:31;2577:4;2574:1;2567:15;2605:4;2602:1;2595:15;2459:161;;2246:380;;;:::o;2756:544::-;2857:2;2852:3;2849:11;2846:448;;;2893:1;2918:5;2914:2;2907:17;2963:4;2959:2;2949:19;3033:2;3021:10;3017:19;3014:1;3010:27;3004:4;3000:38;3069:4;3057:10;3054:20;3051:47;;;-1:-1:-1;3092:4:202;3051:47;3147:2;3142:3;3138:12;3135:1;3131:20;3125:4;3121:31;3111:41;;3202:82;3220:2;3213:5;3210:13;3202:82;;;3265:17;;;3246:1;3235:13;3202:82;;;3206:3;;;2846:448;2756:544;;;:::o;3476:1348::-;3594:10;;-1:-1:-1;;;;;3616:30:202;;3613:56;;;3649:18;;:::i;:::-;3678:96;3767:6;3727:38;3759:4;3753:11;3727:38;:::i;:::-;3721:4;3678:96;:::i;:::-;3829:4;;3893:2;3882:14;;3910:1;3905:662;;;;4611:1;4628:6;4625:89;;;-1:-1:-1;4680:19:202;;;4674:26;4625:89;-1:-1:-1;;3433:1:202;3429:11;;;3425:24;3421:29;3411:40;3457:1;3453:11;;;3408:57;4727:81;;3875:943;;3905:662;2703:1;2696:14;;;2740:4;2727:18;;-1:-1:-1;;3941:20:202;;;4058:236;4072:7;4069:1;4066:14;4058:236;;;4161:19;;;4155:26;4140:42;;4253:27;;;;4221:1;4209:14;;;;4088:19;;4058:236;;;4062:3;4322:6;4313:7;4310:19;4307:201;;;4383:19;;;4377:26;-1:-1:-1;;4466:1:202;4462:14;;;4478:3;4458:24;4454:37;4450:42;4435:58;4420:74;;4307:201;-1:-1:-1;;;;;4554:1:202;4538:14;;;4534:22;4521:36;;-1:-1:-1;3476:1348:202:o;4829:394::-;4976:2;4965:9;4958:21;4939:4;5008:6;5002:13;5051:6;5046:2;5035:9;5031:18;5024:34;5067:79;5139:6;5134:2;5123:9;5119:18;5114:2;5106:6;5102:15;5067:79;:::i;:::-;5207:2;5186:15;-1:-1:-1;;5182:29:202;5167:45;;;;5214:2;5163:54;;4829:394;-1:-1:-1;;4829:394:202:o;:::-;250:712:80;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "250:712:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:253:65;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1193:253:65;;;;;;;;3461:587:66;;;;;;:::i;:::-;;:::i;:::-;;1839:433:174;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;4503:25:202;;;4491:2;4476:18;1690:92:66;4357:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4888:32:202;;;4870:51;;4858:2;4843:18;2082:259:66;4724:203:202;4119:188:66;;;;;;:::i;:::-;;:::i;4378:174::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;1058:133:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1885:126:66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;601:85;;2412:136:66;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;775:185:80:-;;;;;;:::i;:::-;;:::i;2654:736:66:-;;;;;;:::i;:::-;;:::i;1419:189:177:-;;;;;;:::i;:::-;;:::i;1193:253:65:-;1340:4;-1:-1:-1;;;;;;1367:32:65;;-1:-1:-1;;;1367:32:65;;:72;;;1403:36;1427:11;1403:23;:36::i;:::-;1360:79;1193:253;-1:-1:-1;;1193:253:65:o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;12917:15:202;;;3682:46:66;;;12899:34:202;12949:18;;;12942:34;;;13012:15;;12992:18;;;12985:43;12834:18;;3682:46:66;;;;;;;;3635:104;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;:::-;3535:513;;3461:587;;:::o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;13213:25:202::0;;;;13254:18;;;13247:34;13186:18;;2036:72:174::1;13039:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;4503:25:202;;;4476:18;;2265:31:66;4357:177:202;4119:188:66;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;4378:174::-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;13780:25:202;;;-1:-1:-1;;;;;13841:32:202;;13821:18;;;13814:60;13753:18;;5357:39:66;13606:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;:::-;1661:128:::0;;:::o;2412:136:66:-;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;775:185:80:-;805:13:177;:11;:13::i;:::-;922:31:80::1;928:2;932:7;941:5;948:4;922:5;:31::i;2654:736:66:-:0;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;12917:15:202;;;2878:46:66;;;12899:34:202;12949:18;;;12942:34;;;13012:15;;12992:18;;;12985:43;12834:18;;2878:46:66;12659:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;14077:32:202;;3270:48:66;;;14059:51:202;14126:18;;;14119:34;;;14032:18;;3270:48:66;13885:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;14366:2:202;1499:73:177::1;::::0;::::1;14348:21:202::0;14405:2;14385:18;;;14378:30;14444:34;14424:18;;;14417:62;-1:-1:-1;;;14495:18:202;;;14488:36;14541:19;;1499:73:177::1;14164:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;1948:235::-;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;1948:235;:::o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;2907:251::-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;6284:333:66;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;14077:32:202;;6507:42:66;;;14059:51:202;14126:18;;;14119:34;;;14032:18;;6507:42:66;13885:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;1755:10;1744:7;647;673:6;-1:-1:-1;;;;;673:6:177;;601:85;1744:7;-1:-1:-1;;;;;1744:21:177;;1736:66;;;;-1:-1:-1;;;1736:66:177;;17356:2:202;1736:66:177;;;17338:21:202;;;17375:18;;;17368:30;17434:34;17414:18;;;17407:62;17486:18;;1736:66:177;17154:356:202;1524:517:30;1623:31;;;1619:416;;1677:26;;-1:-1:-1;;;1677:26:30;;;;;;;;;;;1619:416;1724:33;;;1720:315;;1780:28;;-1:-1:-1;;;1780:28:30;;;;;;;;;;;1720:315;1839:15;;;;:6;:15;;;;;:27;1857:9;1839:15;:27;:::i;:::-;;1914:7;1885:139;1959:3;1939:9;:16;:23;;:71;;1977:33;1992:9;2003:1;2006:3;1977:14;:33::i;:::-;1939:71;;;1965:9;1939:71;1885:139;;;;;;:::i;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;4503:25:202;;;4476:18;;8149:31:66;4357:177:202;4710:273:66;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;12917:15:202;;;10476:44:66;;;12899:34:202;12949:18;;;12942:34;;;13012:15;;12992:18;;;12985:43;12834:18;;10476:44:66;12659:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;6538:115:199:-;6601:7;6627:19;6635:3;4444:18;;4362:107;7664:124;7727:16;7762:19;7770:3;7762:7;:19::i;8425:700:66:-;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;4503:25:202;;;4476:18;;8701:33:66;4357:177:202;8658:87:66;8774:10;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;:::-;8555:570;8425:700;;;;:::o;8028:150:199:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;18379:2:202;9631:50:200;;;18361:21:202;18418:2;18398:18;;;18391:30;-1:-1:-1;;;18437:18:202;;;18430:44;18491:18;;9631:50:200;18177:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;18722:2:202;9691:63:200;;;18704:21:202;18761:2;18741:18;;;18734:30;-1:-1:-1;;;18780:18:202;;;18773:47;18837:18;;9691:63:200;18520:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;6693:933:66:-;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;5818:123::-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;12480:681::-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;4888:32:202;;12997:55:66;;;4870:51:202;4843:18;;12997:55:66;4724:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;4888:32:202;;13098::66;;;4870:51:202;4843:18;;13098:32:66;4724:203:202;2113:404:199;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;2685:1388;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;4680:811:1:-;4846:105;;;-1:-1:-1;;;;;;20820:33:202;;4846:105:1;;;;20802:52:202;;;;4846:105:1;;;;;;;;;;20775:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;4811:118:199:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:202;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:254::-;743:6;751;804:2;792:9;783:7;779:23;775:32;772:52;;;820:1;817;810:12;772:52;843:29;862:9;843:29;:::i;:::-;833:39;919:2;904:18;;;;891:32;;-1:-1:-1;;;675:254:202:o;934:127::-;995:10;990:3;986:20;983:1;976:31;1026:4;1023:1;1016:15;1050:4;1047:1;1040:15;1066:275;1137:2;1131:9;1202:2;1183:13;;-1:-1:-1;;1179:27:202;1167:40;;-1:-1:-1;;;;;1222:34:202;;1258:22;;;1219:62;1216:88;;;1284:18;;:::i;:::-;1320:2;1313:22;1066:275;;-1:-1:-1;1066:275:202:o;1346:183::-;1406:4;-1:-1:-1;;;;;1431:6:202;1428:30;1425:56;;;1461:18;;:::i;:::-;-1:-1:-1;1506:1:202;1502:14;1518:4;1498:25;;1346:183::o;1534:662::-;1588:5;1641:3;1634:4;1626:6;1622:17;1618:27;1608:55;;1659:1;1656;1649:12;1608:55;1695:6;1682:20;1721:4;1745:60;1761:43;1801:2;1761:43;:::i;:::-;1745:60;:::i;:::-;1839:15;;;1925:1;1921:10;;;;1909:23;;1905:32;;;1870:12;;;;1949:15;;;1946:35;;;1977:1;1974;1967:12;1946:35;2013:2;2005:6;2001:15;2025:142;2041:6;2036:3;2033:15;2025:142;;;2107:17;;2095:30;;2145:12;;;;2058;;2025:142;;;-1:-1:-1;2185:5:202;1534:662;-1:-1:-1;;;;;;1534:662:202:o;2201:186::-;2249:4;-1:-1:-1;;;;;2274:6:202;2271:30;2268:56;;;2304:18;;:::i;:::-;-1:-1:-1;2370:2:202;2349:15;-1:-1:-1;;2345:29:202;2376:4;2341:40;;2201:186::o;2392:462::-;2434:5;2487:3;2480:4;2472:6;2468:17;2464:27;2454:55;;2505:1;2502;2495:12;2454:55;2541:6;2528:20;2572:48;2588:31;2616:2;2588:31;:::i;2572:48::-;2645:2;2636:7;2629:19;2691:3;2684:4;2679:2;2671:6;2667:15;2663:26;2660:35;2657:55;;;2708:1;2705;2698:12;2657:55;2773:2;2766:4;2758:6;2754:17;2747:4;2738:7;2734:18;2721:55;2821:1;2796:16;;;2814:4;2792:27;2785:38;;;;2800:7;2392:462;-1:-1:-1;;;2392:462:202:o;2859:886::-;2911:5;2964:3;2957:4;2949:6;2945:17;2941:27;2931:55;;2982:1;2979;2972:12;2931:55;3018:6;3005:20;3044:4;3068:60;3084:43;3124:2;3084:43;:::i;3068:60::-;3162:15;;;3248:1;3244:10;;;;3232:23;;3228:32;;;3193:12;;;;3272:15;;;3269:35;;;3300:1;3297;3290:12;3269:35;3336:2;3328:6;3324:15;3348:368;3364:6;3359:3;3356:15;3348:368;;;3450:3;3437:17;-1:-1:-1;;;;;3473:11:202;3470:35;3467:125;;;3546:1;3575:2;3571;3564:14;3467:125;3617:56;3669:3;3664:2;3650:11;3642:6;3638:24;3634:33;3617:56;:::i;:::-;3605:69;;-1:-1:-1;3694:12:202;;;;3381;;3348:368;;3750:602;3877:6;3885;3938:2;3926:9;3917:7;3913:23;3909:32;3906:52;;;3954:1;3951;3944:12;3906:52;3994:9;3981:23;-1:-1:-1;;;;;4064:2:202;4056:6;4053:14;4050:34;;;4080:1;4077;4070:12;4050:34;4103:61;4156:7;4147:6;4136:9;4132:22;4103:61;:::i;:::-;4093:71;;4217:2;4206:9;4202:18;4189:32;4173:48;;4246:2;4236:8;4233:16;4230:36;;;4262:1;4259;4252:12;4230:36;;4285:61;4338:7;4327:8;4316:9;4312:24;4285:61;:::i;:::-;4275:71;;;3750:602;;;;;:::o;4539:180::-;4598:6;4651:2;4639:9;4630:7;4626:23;4622:32;4619:52;;;4667:1;4664;4657:12;4619:52;-1:-1:-1;4690:23:202;;4539:180;-1:-1:-1;4539:180:202:o;4932:658::-;5103:2;5155:21;;;5225:13;;5128:18;;;5247:22;;;5074:4;;5103:2;5326:15;;;;5300:2;5285:18;;;5074:4;5369:195;5383:6;5380:1;5377:13;5369:195;;;5448:13;;-1:-1:-1;;;;;5444:39:202;5432:52;;5539:15;;;;5504:12;;;;5480:1;5398:9;5369:195;;;-1:-1:-1;5581:3:202;;4932:658;-1:-1:-1;;;;;;4932:658:202:o;5595:348::-;5679:6;5732:2;5720:9;5711:7;5707:23;5703:32;5700:52;;;5748:1;5745;5738:12;5700:52;5788:9;5775:23;-1:-1:-1;;;;;5813:6:202;5810:30;5807:50;;;5853:1;5850;5843:12;5807:50;5876:61;5929:7;5920:6;5909:9;5905:22;5876:61;:::i;5948:250::-;6033:1;6043:113;6057:6;6054:1;6051:13;6043:113;;;6133:11;;;6127:18;6114:11;;;6107:39;6079:2;6072:10;6043:113;;;-1:-1:-1;;6190:1:202;6172:16;;6165:27;5948:250::o;6203:270::-;6244:3;6282:5;6276:12;6309:6;6304:3;6297:19;6325:76;6394:6;6387:4;6382:3;6378:14;6371:4;6364:5;6360:16;6325:76;:::i;:::-;6455:2;6434:15;-1:-1:-1;;6430:29:202;6421:39;;;;6462:4;6417:50;;6203:270;-1:-1:-1;;6203:270:202:o;6478:800::-;6638:4;6667:2;6707;6696:9;6692:18;6737:2;6726:9;6719:21;6760:6;6795;6789:13;6826:6;6818;6811:22;6864:2;6853:9;6849:18;6842:25;;6926:2;6916:6;6913:1;6909:14;6898:9;6894:30;6890:39;6876:53;;6964:2;6956:6;6952:15;6985:1;6995:254;7009:6;7006:1;7003:13;6995:254;;;7102:2;7098:7;7086:9;7078:6;7074:22;7070:36;7065:3;7058:49;7130:39;7162:6;7153;7147:13;7130:39;:::i;:::-;7120:49;-1:-1:-1;7227:12:202;;;;7192:15;;;;7031:1;7024:9;6995:254;;;-1:-1:-1;7266:6:202;;6478:800;-1:-1:-1;;;;;;;6478:800:202:o;7283:160::-;7348:20;;7404:13;;7397:21;7387:32;;7377:60;;7433:1;7430;7423:12;7448:606;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7830:35;7861:2;7850:9;7846:18;7830:35;:::i;:::-;7820:45;;7916:3;7905:9;7901:19;7888:33;-1:-1:-1;;;;;7936:6:202;7933:30;7930:50;;;7976:1;7973;7966:12;7930:50;7999:49;8040:7;8031:6;8020:9;8016:22;7999:49;:::i;:::-;7989:59;;;7448:606;;;;;;;;:::o;8059:217::-;8206:2;8195:9;8188:21;8169:4;8226:44;8266:2;8255:9;8251:18;8243:6;8226:44;:::i;8281:186::-;8340:6;8393:2;8381:9;8372:7;8368:23;8364:32;8361:52;;;8409:1;8406;8399:12;8361:52;8432:29;8451:9;8432:29;:::i;8472:668::-;8526:5;8579:3;8572:4;8564:6;8560:17;8556:27;8546:55;;8597:1;8594;8587:12;8546:55;8633:6;8620:20;8659:4;8683:60;8699:43;8739:2;8699:43;:::i;8683:60::-;8777:15;;;8863:1;8859:10;;;;8847:23;;8843:32;;;8808:12;;;;8887:15;;;8884:35;;;8915:1;8912;8905:12;8884:35;8951:2;8943:6;8939:15;8963:148;8979:6;8974:3;8971:15;8963:148;;;9045:23;9064:3;9045:23;:::i;:::-;9033:36;;9089:12;;;;8996;;8963:148;;9145:662;9196:5;9249:3;9242:4;9234:6;9230:17;9226:27;9216:55;;9267:1;9264;9257:12;9216:55;9303:6;9290:20;9329:4;9353:60;9369:43;9409:2;9369:43;:::i;9353:60::-;9447:15;;;9533:1;9529:10;;;;9517:23;;9513:32;;;9478:12;;;;9557:15;;;9554:35;;;9585:1;9582;9575:12;9554:35;9621:2;9613:6;9609:15;9633:145;9649:6;9644:3;9641:15;9633:145;;;9715:20;9731:3;9715:20;:::i;:::-;9703:33;;9756:12;;;;9666;;9633:145;;9812:1276;10038:6;10046;10054;10062;10070;10123:3;10111:9;10102:7;10098:23;10094:33;10091:53;;;10140:1;10137;10130:12;10091:53;10180:9;10167:23;-1:-1:-1;;;;;10250:2:202;10242:6;10239:14;10236:34;;;10266:1;10263;10256:12;10236:34;10289:61;10342:7;10333:6;10322:9;10318:22;10289:61;:::i;:::-;10279:71;;10403:2;10392:9;10388:18;10375:32;10359:48;;10432:2;10422:8;10419:16;10416:36;;;10448:1;10445;10438:12;10416:36;10471:63;10526:7;10515:8;10504:9;10500:24;10471:63;:::i;:::-;10461:73;;10587:2;10576:9;10572:18;10559:32;10543:48;;10616:2;10606:8;10603:16;10600:36;;;10632:1;10629;10622:12;10600:36;10655:63;10710:7;10699:8;10688:9;10684:24;10655:63;:::i;:::-;10645:73;;10771:2;10760:9;10756:18;10743:32;10727:48;;10800:2;10790:8;10787:16;10784:36;;;10816:1;10813;10806:12;10784:36;10839:60;10891:7;10880:8;10869:9;10865:24;10839:60;:::i;:::-;10829:70;;10952:3;10941:9;10937:19;10924:33;10908:49;;10982:2;10972:8;10969:16;10966:36;;;10998:1;10995;10988:12;10966:36;;11021:61;11074:7;11063:8;11052:9;11048:24;11021:61;:::i;11093:388::-;11170:6;11178;11231:2;11219:9;11210:7;11206:23;11202:32;11199:52;;;11247:1;11244;11237:12;11199:52;11283:9;11270:23;11260:33;;11344:2;11333:9;11329:18;11316:32;-1:-1:-1;;;;;11363:6:202;11360:30;11357:50;;;11403:1;11400;11393:12;11357:50;11426:49;11467:7;11458:6;11447:9;11443:22;11426:49;:::i;11486:632::-;11657:2;11709:21;;;11779:13;;11682:18;;;11801:22;;;11628:4;;11657:2;11880:15;;;;11854:2;11839:18;;;11628:4;11923:169;11937:6;11934:1;11931:13;11923:169;;;11998:13;;11986:26;;12067:15;;;;12032:12;;;;11959:1;11952:9;11923:169;;12123:531;12215:6;12223;12231;12239;12292:3;12280:9;12271:7;12267:23;12263:33;12260:53;;;12309:1;12306;12299:12;12260:53;12332:29;12351:9;12332:29;:::i;:::-;12322:39;;12408:2;12397:9;12393:18;12380:32;12370:42;;12431:35;12462:2;12451:9;12447:18;12431:35;:::i;:::-;12421:45;;12517:2;12506:9;12502:18;12489:32;-1:-1:-1;;;;;12536:6:202;12533:30;12530:50;;;12576:1;12573;12566:12;12530:50;12599:49;12640:7;12631:6;12620:9;12616:22;12599:49;:::i;:::-;12589:59;;;12123:531;;;;;;;:::o;13292:127::-;13353:10;13348:3;13344:20;13341:1;13334:31;13384:4;13381:1;13374:15;13408:4;13405:1;13398:15;14571:380;14650:1;14646:12;;;;14693;;;14714:61;;14768:4;14760:6;14756:17;14746:27;;14714:61;14821:2;14813:6;14810:14;14790:18;14787:38;14784:161;;14867:10;14862:3;14858:20;14855:1;14848:31;14902:4;14899:1;14892:15;14930:4;14927:1;14920:15;15081:544;15182:2;15177:3;15174:11;15171:448;;;15218:1;15243:5;15239:2;15232:17;15288:4;15284:2;15274:19;15358:2;15346:10;15342:19;15339:1;15335:27;15329:4;15325:38;15394:4;15382:10;15379:20;15376:47;;;-1:-1:-1;15417:4:202;15376:47;15472:2;15467:3;15463:12;15460:1;15456:20;15450:4;15446:31;15436:41;;15527:82;15545:2;15538:5;15535:13;15527:82;;;15590:17;;;15571:1;15560:13;15527:82;;15801:1348;15925:3;15919:10;-1:-1:-1;;;;;15944:6:202;15941:30;15938:56;;;15974:18;;:::i;:::-;16003:96;16092:6;16052:38;16084:4;16078:11;16052:38;:::i;:::-;16046:4;16003:96;:::i;:::-;16154:4;;16218:2;16207:14;;16235:1;16230:662;;;;16936:1;16953:6;16950:89;;;-1:-1:-1;17005:19:202;;;16999:26;16950:89;-1:-1:-1;;15758:1:202;15754:11;;;15750:24;15746:29;15736:40;15782:1;15778:11;;;15733:57;17052:81;;16200:943;;16230:662;15028:1;15021:14;;;15065:4;15052:18;;-1:-1:-1;;16266:20:202;;;16383:236;16397:7;16394:1;16391:14;16383:236;;;16486:19;;;16480:26;16465:42;;16578:27;;;;16546:1;16534:14;;;;16413:19;;16383:236;;;16387:3;16647:6;16638:7;16635:19;16632:201;;;16708:19;;;16702:26;-1:-1:-1;;16791:1:202;16787:14;;;16803:3;16783:24;16779:37;16775:42;16760:58;16745:74;;16632:201;-1:-1:-1;;;;;16879:1:202;16863:14;;;16859:22;16846:36;;-1:-1:-1;15801:1348:202:o;17515:395::-;-1:-1:-1;;;;;17712:32:202;;17694:51;;17788:14;;17781:22;17776:2;17761:18;;17754:50;17840:2;17835;17820:18;;17813:30;;;-1:-1:-1;;17860:44:202;;17885:18;;17877:6;17860:44;:::i;:::-;17852:52;17515:395;-1:-1:-1;;;;;17515:395:202:o;17915:127::-;17976:10;17971:3;17967:20;17964:1;17957:31;18007:4;18004:1;17997:15;18031:4;18028:1;18021:15;18047:125;18112:9;;;18133:10;;;18130:36;;;18146:18;;:::i;18866:577::-;19079:3;19111:26;19107:31;19180:2;19171:6;19167:2;19163:15;19159:24;19154:3;19147:37;19235:2;19226:6;19222:2;19218:15;19214:24;19209:2;19204:3;19200:12;19193:46;;19269:6;19264:2;19259:3;19255:12;19248:28;19305:6;19299:13;19321:75;19389:6;19384:2;19379:3;19375:12;19368:4;19360:6;19356:17;19321:75;:::i;:::-;19416:16;;;;19434:2;19412:25;;18866:577;-1:-1:-1;;;;;18866:577:202:o;19448:288::-;19623:6;19612:9;19605:25;19666:2;19661;19650:9;19646:18;19639:30;19586:4;19686:44;19726:2;19715:9;19711:18;19703:6;19686:44;:::i;19741:647::-;19820:6;19873:2;19861:9;19852:7;19848:23;19844:32;19841:52;;;19889:1;19886;19879:12;19841:52;19922:9;19916:16;-1:-1:-1;;;;;19947:6:202;19944:30;19941:50;;;19987:1;19984;19977:12;19941:50;20010:22;;20063:4;20055:13;;20051:27;-1:-1:-1;20041:55:202;;20092:1;20089;20082:12;20041:55;20121:2;20115:9;20146:48;20162:31;20190:2;20162:31;:::i;20146:48::-;20217:2;20210:5;20203:17;20257:7;20252:2;20247;20243;20239:11;20235:20;20232:33;20229:53;;;20278:1;20275;20268:12;20229:53;20291:67;20355:2;20350;20343:5;20339:14;20334:2;20330;20326:11;20291:67;:::i;20393:128::-;20460:9;;;20481:11;;;20478:37;;;20495:18;;:::i;20526:127::-;20587:10;20582:3;20578:20;20575:1;20568:31;20618:4;20615:1;20608:15;20642:4;20639:1;20632:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,bytes32,bool,bytes)": "af255b61",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP8 extension.\",\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32)\":{\"details\":\"Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"tokenId\":\"The tokenId operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"constructor\":{\"params\":{\"name_\":\"The name of the token\",\"newOwner_\":\"The owner of the the token-Metadata\",\"symbol_\":\"The symbol of the token\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"mint(address,bytes32,bool,bytes)\":{\"details\":\"Mints `amount` tokens and transfers it to `to`. Requirements: - `to` cannot be the zero address. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"to\":\"The address to mint tokens\",\"tokenId\":\"The tokenId to mint\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets the token-Metadata and register LSP8InterfaceId\"},\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol\":\"LSP8Mintable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d\",\"dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5\",\"dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol\":{\"keccak256\":\"0xcb7925f2caa325d0984b741256f761b3771c6206c97ad285a71ea00477056953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c51a9b6179066a970b1149b1964b138f94da092b448a4b0fecb823f12873706f\",\"dweb:/ipfs/QmV4NkcAyprSrEQRMmDfBkJrrGwDmcnEYVWHrhRKpwTMXY\"]},\"contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol\":{\"keccak256\":\"0xbc20baa224b0711c6fe28acf2e93089487680919aa3756be4be38e76490f1ab6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb565cfa29fe24750068485d04f763159aadc087be7993b8962fe4077030c\",\"dweb:/ipfs/QmVvsfr5E5xr2KVDoEw3hnvKv1nJ2P3R5btptcZiwwn8M6\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeOperator(address,bytes32)": {
            "details": "Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.",
            "params": {
              "operator": "The address to authorize as an operator.",
              "tokenId": "The tokenId operator has access to."
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "constructor": {
            "params": {
              "name_": "The name of the token",
              "newOwner_": "The owner of the the token-Metadata",
              "symbol_": "The symbol of the token"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "mint(address,bytes32,bool,bytes)": {
            "details": "Mints `amount` tokens and transfers it to `to`. Requirements: - `to` cannot be the zero address. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "to": "The address to mint tokens",
              "tokenId": "The tokenId to mint"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Sets the token-Metadata and register LSP8InterfaceId"
          },
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol": "LSP8Mintable"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol": {
        "keccak256": "0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274",
        "urls": [
          "bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d",
          "dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552",
        "urls": [
          "bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5",
          "dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol": {
        "keccak256": "0xcb7925f2caa325d0984b741256f761b3771c6206c97ad285a71ea00477056953",
        "urls": [
          "bzz-raw://c51a9b6179066a970b1149b1964b138f94da092b448a4b0fecb823f12873706f",
          "dweb:/ipfs/QmV4NkcAyprSrEQRMmDfBkJrrGwDmcnEYVWHrhRKpwTMXY"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol": {
        "keccak256": "0xbc20baa224b0711c6fe28acf2e93089487680919aa3756be4be38e76490f1ab6",
        "urls": [
          "bzz-raw://383fb565cfa29fe24750068485d04f763159aadc087be7993b8962fe4077030c",
          "dweb:/ipfs/QmVvsfr5E5xr2KVDoEw3hnvKv1nJ2P3R5btptcZiwwn8M6"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol",
    "id": 12926,
    "exportedSymbols": {
      "ILSP8Mintable": [
        12746
      ],
      "LSP8IdentifiableDigitalAsset": [
        10104
      ],
      "LSP8Mintable": [
        12925
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:930:80",
    "nodes": [
      {
        "id": 12877,
        "nodeType": "PragmaDirective",
        "src": "33:23:80",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 12879,
        "nodeType": "ImportDirective",
        "src": "72:50:80",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol",
        "file": "./ILSP8Mintable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12926,
        "sourceUnit": 12747,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12878,
              "name": "ILSP8Mintable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12746,
              "src": "80:13:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12881,
        "nodeType": "ImportDirective",
        "src": "135:81:80",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "file": "../LSP8IdentifiableDigitalAsset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12926,
        "sourceUnit": 10105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12880,
              "name": "LSP8IdentifiableDigitalAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10104,
              "src": "143:28:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12925,
        "nodeType": "ContractDefinition",
        "src": "250:712:80",
        "nodes": [
          {
            "id": 12902,
            "nodeType": "FunctionDefinition",
            "src": "557:163:80",
            "nodes": [],
            "body": {
              "id": 12901,
              "nodeType": "Block",
              "src": "718:2:80",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 12887,
              "nodeType": "StructuredDocumentation",
              "src": "325:227:80",
              "text": " @notice Sets the token-Metadata and register LSP8InterfaceId\n @param name_ The name of the token\n @param symbol_ The symbol of the token\n @param newOwner_ The owner of the the token-Metadata"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12896,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12889,
                    "src": "691:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 12897,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12891,
                    "src": "698:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 12898,
                    "name": "newOwner_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12893,
                    "src": "707:9:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12899,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12895,
                  "name": "LSP8IdentifiableDigitalAsset",
                  "nameLocations": [
                    "662:28:80"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10104,
                  "src": "662:28:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "662:55:80"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12889,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "592:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 12902,
                  "src": "578:19:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12888,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12891,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "621:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 12902,
                  "src": "607:21:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12890,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12893,
                  "mutability": "mutable",
                  "name": "newOwner_",
                  "nameLocation": "646:9:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 12902,
                  "src": "638:17:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "568:93:80"
            },
            "returnParameters": {
              "id": 12900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:80"
            },
            "scope": 12925,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12924,
            "nodeType": "FunctionDefinition",
            "src": "775:185:80",
            "nodes": [],
            "body": {
              "id": 12923,
              "nodeType": "Block",
              "src": "912:48:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12917,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12905,
                        "src": "928:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12918,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12907,
                        "src": "932:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 12919,
                        "name": "force",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12909,
                        "src": "941:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 12920,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12911,
                        "src": "948:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 12916,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10751,
                      "src": "922:5:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 12921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:31:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12922,
                  "nodeType": "ExpressionStatement",
                  "src": "922:31:80"
                }
              ]
            },
            "baseFunctions": [
              12745
            ],
            "documentation": {
              "id": 12903,
              "nodeType": "StructuredDocumentation",
              "src": "726:44:80",
              "text": " @inheritdoc ILSP8Mintable"
            },
            "functionSelector": "af255b61",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12914,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12913,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "902:9:80"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43609,
                  "src": "902:9:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "902:9:80"
              }
            ],
            "name": "mint",
            "nameLocation": "784:4:80",
            "parameters": {
              "id": 12912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12905,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "806:2:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 12924,
                  "src": "798:10:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12907,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "826:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 12924,
                  "src": "818:15:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12906,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12909,
                  "mutability": "mutable",
                  "name": "force",
                  "nameLocation": "848:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 12924,
                  "src": "843:10:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12908,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12911,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "876:4:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 12924,
                  "src": "863:17:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12910,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:98:80"
            },
            "returnParameters": {
              "id": 12915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:0:80"
            },
            "scope": 12925,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12883,
              "name": "LSP8IdentifiableDigitalAsset",
              "nameLocations": [
                "275:28:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10104,
              "src": "275:28:80"
            },
            "id": 12884,
            "nodeType": "InheritanceSpecifier",
            "src": "275:28:80"
          },
          {
            "baseName": {
              "id": 12885,
              "name": "ILSP8Mintable",
              "nameLocations": [
                "305:13:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12746,
              "src": "305:13:80"
            },
            "id": 12886,
            "nodeType": "InheritanceSpecifier",
            "src": "305:13:80"
          }
        ],
        "canonicalName": "LSP8Mintable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12882,
          "nodeType": "StructuredDocumentation",
          "src": "218:31:80",
          "text": " @dev LSP8 extension."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12925,
          12746,
          10104,
          11044,
          9968,
          4186,
          43285,
          43508,
          43840,
          46531,
          46594,
          43687
        ],
        "name": "LSP8Mintable",
        "nameLocation": "259:12:80",
        "scope": 12926,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 80
}