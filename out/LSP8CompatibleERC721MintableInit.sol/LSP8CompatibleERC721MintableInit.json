{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61299080620000f46000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806354f6127f1161010f578063a22cb465116100a2578063c87b56dd11610071578063c87b56dd14610430578063cf5182ba14610443578063e985e9c514610456578063f2fde38b1461049257600080fd5b8063a22cb465146103d7578063a3b261f2146103ea578063af255b611461040a578063b88d4fde1461041d57600080fd5b80637e87632c116100de5780637e87632c146103925780637f23690c146103a55780638da5cb5b146103b857806395d89b41146103cf57600080fd5b806354f6127f146103515780636352211e1461036457806370a0823114610377578063715018a61461038a57600080fd5b806318160ddd1161018757806342842e0e1161015657806342842e0e146102eb57806349a6078d146102fe5780634e3e6e9c1461031e578063511b69521461033e57600080fd5b806318160ddd146102a0578063217b2270146102b257806323b872dd146102c55780632a3654a4146102d857600080fd5b8063081812fc116101c3578063081812fc1461023c578063095ea7b3146102675780630b0c6d821461027a57806314a6e2931461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063077f224a14610227575b600080fd5b6101fd6101f8366004611e11565b6104a5565b60405190151581526020015b60405180910390f35b61021a6104eb565b6040516102099190611e8b565b61023a610235366004611f7d565b610518565b005b61024f61024a366004611ff0565b610634565b6040516001600160a01b039091168152602001610209565b61023a610275366004612009565b61068b565b61023a610288366004612009565b6106e2565b61023a61029b36600461213b565b610784565b6002545b604051908152602001610209565b61024f6102c0366004611ff0565b610810565b61023a6102d336600461219e565b610849565b6101fd6102e6366004612009565b610869565b61023a6102f936600461219e565b610885565b61031161030c366004611ff0565b6108a5565b60405161020991906121da565b61033161032c366004612227565b6108c7565b604051610209919061225b565b61023a61034c3660046122cd565b61097a565b61021a61035f366004611ff0565b6109c9565b61024f610372366004611ff0565b6109d4565b6102a4610385366004612345565b6109df565b61023a610a00565b61023a6103a0366004612424565b610a14565b61023a6103b33660046124e8565b610b03565b6000546201000090046001600160a01b031661024f565b61021a610b19565b61023a6103e5366004612524565b610b46565b6103fd6103f8366004612345565b610b51565b6040516102099190612557565b61023a61041836600461258f565b610b75565b61023a61042b3660046125f6565b610b89565b61021a61043e366004611ff0565b610b97565b61023a610451366004612009565b610be5565b6101fd610464366004612645565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61023a6104a0366004612345565b610bef565b60006001600160e01b031982166380ac58cd60e01b14806104d657506001600160e01b03198216635b5e139f60e01b145b806104e557506104e582610c68565b92915050565b606060006104e57fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1610c8d565b600054610100900460ff16158080156105385750600054600160ff909116105b806105525750303b158015610552575060005460ff166001145b6105ba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156105dd576000805461ff0019166101001790555b6105e8848484610d2f565b801561062e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60008161064081610d61565b60008181526005602052604081209061065882610d99565b90508060000361066d57506000949350505050565b61068261067b600183612685565b8390610da3565b95945050505050565b6106958282610be5565b806001600160a01b0383166106a982610810565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006106ed82610810565b9050336001600160a01b038216811461073357604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016105b1565b6001600160a01b03841661075a57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036107795750505050565b61062e848385610daf565b61078c610e40565b80518251146107bb57815181516040516321d1e13360e11b8152600481019290925260248201526044016105b1565b60005b825181101561080b576108038382815181106107dc576107dc612698565b60200260200101518383815181106107f6576107f6612698565b6020026020010151610ea1565b6001016107be565b505050565b6000818152600360205260408120546001600160a01b0316806104e557604051635747cd1b60e11b8152600481018490526024016105b1565b61080b83838360001b600160405180602001604052806000815250610eab565b600061087482610d61565b61087e8383610f67565b9392505050565b61080b83838360001b600060405180602001604052806000815250610eab565b60606108b082610d61565b60008281526005602052604090206104e590610fb0565b606081516001600160401b038111156108e2576108e2611e9e565b60405190808252806020026020018201604052801561091557816020015b60608152602001906001900390816109005790505b50905060005b82518110156109745761094683828151811061093957610939612698565b6020026020010151610c8d565b82828151811061095857610958612698565b602002602001018190525061096d8160010190565b905061091b565b50919050565b336109858185610f67565b6109b457604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016105b1565b6109c18686868686610eab565b505050505050565b60606104e582610c8d565b60006104e582610810565b6001600160a01b03811660009081526004602052604081206104e590610d99565b610a08610e40565b610a126000610fbd565b565b8451845181141580610a27575083518114155b80610a33575082518114155b80610a3f575081518114155b15610a5d576040516393a8311960e01b815260040160405180910390fd5b60005b81811015610afa57610af2878281518110610a7d57610a7d612698565b6020026020010151878381518110610a9757610a97612698565b6020026020010151878481518110610ab157610ab1612698565b6020026020010151878581518110610acb57610acb612698565b6020026020010151878681518110610ae557610ae5612698565b602002602001015161097a565b600101610a60565b50505050505050565b610b0b610e40565b610b158282610ea1565b5050565b606060006104e57f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756610c8d565b610b15338383611033565b6001600160a01b03811660009081526004602052604090206060906104e590611111565b610b7d610e40565b61062e8484848461111c565b61062e848484600085610eab565b60606000610bc47f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e610c8d565b905060006024905060006106828383848651610be09190612685565b611166565b6106958282611273565b610bf7610e40565b6001600160a01b038116610c5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b1565b610c6581610fbd565b50565b60006001600160e01b0319821663622e7a0160e01b14806104e557506104e58261139c565b6000818152600160205260409020805460609190610caa906126ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd6906126ae565b8015610d235780601f10610cf857610100808354040283529160200191610d23565b820191906000526020600020905b815481529060010190602001808311610d0657829003601f168201915b50505050509050919050565b600054610100900460ff16610d565760405162461bcd60e51b81526004016105b1906126e2565b61080b8383836113d1565b6000818152600360205260409020546001600160a01b0316610c6557604051635747cd1b60e11b8152600481018290526024016105b1565b60006104e5825490565b600061087e8383611403565b6000818152600560205260408120610dc7908561142d565b905080610df9576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016105b1565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b0362010000909104163314610a125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b1565b610b158282611442565b6001600160a01b03851660009081526007602090815260408083203380855292529091205460ff16158015610ee75750610ee58185610f67565b155b15610f1757604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016105b1565b610f248686868686611536565b60405184906001600160a01b0380881691908916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050505050565b600080610f7383610810565b9050806001600160a01b0316846001600160a01b03161480610fa857506000838152600560205260409020610fa890856116c0565b949350505050565b6060600061087e836116e2565b6000546001600160a01b03828116620100009092041614610c6557600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b816001600160a01b0316836001600160a01b0316036110a45760405162461bcd60e51b815260206004820152602760248201527f4c535038436f6d70617469626c654552433732313a20617070726f766520746f6044820152661031b0b63632b960c91b60648201526084016105b1565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606104e5826116e2565b6111288484848461173d565b60405183906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b60608161117481601f61272d565b10156111b35760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016105b1565b6111bd828461272d565b845110156112015760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016105b1565b606082158015611220576040519150600082526020820160405261126a565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611259578051835260209283019201611241565b5050858452601f01601f1916604052505b50949350505050565b600061127e82610810565b9050336001600160a01b03821681146112c457604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016105b1565b6001600160a01b0384166112eb57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361130a5750505050565b60008381526005602052604081206113229086611857565b905080611354576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016105b1565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b60006001600160e01b03198216631c537ddf60e21b14806104e557506301ffc9a760e01b6001600160e01b03198316146104e5565b600054610100900460ff166113f85760405162461bcd60e51b81526004016105b1906126e2565b61080b83838361186c565b600082600001828154811061141a5761141a612698565b9060005260206000200154905092915050565b600061087e836001600160a01b03841661189e565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201611482576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa82016114c257604051630eceab6760e31b815260040160405180910390fd5b60008281526001602052604090206114da8282612786565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b26101008351111561151b57611516836000610100611166565b61151d565b825b60405161152a9190611e8b565b60405180910390a25050565b836001600160a01b0316856001600160a01b03160361156857604051635d67d6c160e01b815260040160405180910390fd5b600061157384610810565b9050856001600160a01b0316816001600160a01b0316146115c157604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016105b1565b6001600160a01b0385166115e8576040516324ecef4d60e01b815260040160405180910390fd5b336115f38786611991565b6001600160a01b038716600090815260046020526040902061161590866119d8565b506001600160a01b038616600090815260046020526040902061163890866119e4565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061169f9086908a908a90612845565b60405180910390a46116b3878787866119f0565b610afa8787878787611ac4565b6001600160a01b0381166000908152600183016020526040812054151561087e565b606081600001805480602002602001604051908101604052809291908181526020018280548015610d2357602002820191906000526020600020905b81548152602001906001019080831161171e5750505050509050919050565b6001600160a01b038416611764576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561179d576040516334c7b51160e01b8152600481018490526024016105b1565b336001600260008282546117b1919061272d565b90915550506001600160a01b03851660009081526004602052604090206117d890856119e4565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061183a90869089908990612845565b60405180910390a4611850600086868686611ac4565b5050505050565b600061087e836001600160a01b038416611bfc565b600054610100900460ff166118935760405162461bcd60e51b81526004016105b1906126e2565b61080b838383611c4b565b600081815260018301602052604081205480156119875760006118c2600183612685565b85549091506000906118d690600190612685565b905081811461193b5760008660000182815481106118f6576118f6612698565b906000526020600020015490508087600001848154811061191957611919612698565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061194c5761194c612871565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104e5565b60009150506104e5565b6000818152600560205260408120906119a982610d99565b905060005b818110156118505760006119c28482610da3565b90506119cf818787610daf565b506001016119ae565b600061087e838361189e565b600061087e8383611bfc565b611a0184631aed5a8560e21b611d18565b1561062e57600084848484604051602001611a1f9493929190612887565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611a7d907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab009085906004016128d4565b6000604051808303816000875af1158015611a9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c191908101906128ed565b611ad584631aed5a8560e21b611d18565b15611b9f57600085858584604051602001611af39493929190612887565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611b51907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d9085906004016128d4565b6000604051808303816000875af1158015611b70573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b9891908101906128ed565b5050611850565b81611850576001600160a01b0384163b15611bd857604051634349776d60e01b81526001600160a01b03851660048201526024016105b1565b604051630317313760e01b81526001600160a01b03851660048201526024016105b1565b6000818152600183016020526040812054611c43575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104e5565b5060006104e5565b600054610100900460ff16611c725760405162461bcd60e51b81526004016105b1906126e2565b611c7b81611da1565b611cc47feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611dc8565b611cee7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611dc8565b61080b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611dc8565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611d8a575060208210155b8015611d965750600081115b979650505050505050565b600054610100900460ff16610bf75760405162461bcd60e51b81526004016105b1906126e2565b6000828152600160205260409020611de08282612786565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161152a9190611e8b565b600060208284031215611e2357600080fd5b81356001600160e01b03198116811461087e57600080fd5b60005b83811015611e56578181015183820152602001611e3e565b50506000910152565b60008151808452611e77816020860160208601611e3b565b601f01601f19169290920160200192915050565b60208152600061087e6020830184611e5f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611edc57611edc611e9e565b604052919050565b60006001600160401b03821115611efd57611efd611e9e565b50601f01601f191660200190565b600082601f830112611f1c57600080fd5b8135611f2f611f2a82611ee4565b611eb4565b818152846020838601011115611f4457600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114611f7857600080fd5b919050565b600080600060608486031215611f9257600080fd5b83356001600160401b0380821115611fa957600080fd5b611fb587838801611f0b565b94506020860135915080821115611fcb57600080fd5b50611fd886828701611f0b565b925050611fe760408501611f61565b90509250925092565b60006020828403121561200257600080fd5b5035919050565b6000806040838503121561201c57600080fd5b61202583611f61565b946020939093013593505050565b60006001600160401b0382111561204c5761204c611e9e565b5060051b60200190565b600082601f83011261206757600080fd5b81356020612077611f2a83612033565b82815260059290921b8401810191818101908684111561209657600080fd5b8286015b848110156120b1578035835291830191830161209a565b509695505050505050565b600082601f8301126120cd57600080fd5b813560206120dd611f2a83612033565b82815260059290921b840181019181810190868411156120fc57600080fd5b8286015b848110156120b15780356001600160401b0381111561211f5760008081fd5b61212d8986838b0101611f0b565b845250918301918301612100565b6000806040838503121561214e57600080fd5b82356001600160401b038082111561216557600080fd5b61217186838701612056565b9350602085013591508082111561218757600080fd5b50612194858286016120bc565b9150509250929050565b6000806000606084860312156121b357600080fd5b6121bc84611f61565b92506121ca60208501611f61565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561221b5783516001600160a01b0316835292840192918401916001016121f6565b50909695505050505050565b60006020828403121561223957600080fd5b81356001600160401b0381111561224f57600080fd5b610fa884828501612056565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156122b057603f1988860301845261229e858351611e5f565b94509285019290850190600101612282565b5092979650505050505050565b80358015158114611f7857600080fd5b600080600080600060a086880312156122e557600080fd5b6122ee86611f61565b94506122fc60208701611f61565b935060408601359250612311606087016122bd565b915060808601356001600160401b0381111561232c57600080fd5b61233888828901611f0b565b9150509295509295909350565b60006020828403121561235757600080fd5b61087e82611f61565b600082601f83011261237157600080fd5b81356020612381611f2a83612033565b82815260059290921b840181019181810190868411156123a057600080fd5b8286015b848110156120b1576123b581611f61565b83529183019183016123a4565b600082601f8301126123d357600080fd5b813560206123e3611f2a83612033565b82815260059290921b8401810191818101908684111561240257600080fd5b8286015b848110156120b157612417816122bd565b8352918301918301612406565b600080600080600060a0868803121561243c57600080fd5b85356001600160401b038082111561245357600080fd5b61245f89838a01612360565b9650602088013591508082111561247557600080fd5b61248189838a01612360565b9550604088013591508082111561249757600080fd5b6124a389838a01612056565b945060608801359150808211156124b957600080fd5b6124c589838a016123c2565b935060808801359150808211156124db57600080fd5b50612338888289016120bc565b600080604083850312156124fb57600080fd5b8235915060208301356001600160401b0381111561251857600080fd5b61219485828601611f0b565b6000806040838503121561253757600080fd5b61254083611f61565b915061254e602084016122bd565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561221b57835183529284019291840191600101612573565b600080600080608085870312156125a557600080fd5b6125ae85611f61565b9350602085013592506125c3604086016122bd565b915060608501356001600160401b038111156125de57600080fd5b6125ea87828801611f0b565b91505092959194509250565b6000806000806080858703121561260c57600080fd5b61261585611f61565b935061262360208601611f61565b92506040850135915060608501356001600160401b038111156125de57600080fd5b6000806040838503121561265857600080fd5b61266183611f61565b915061254e60208401611f61565b634e487b7160e01b600052601160045260246000fd5b818103818111156104e5576104e561266f565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806126c257607f821691505b60208210810361097457634e487b7160e01b600052602260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b808201808211156104e5576104e561266f565b601f82111561080b57600081815260208120601f850160051c810160208610156127675750805b601f850160051c820191505b818110156109c157828155600101612773565b81516001600160401b0381111561279f5761279f611e9e565b6127b3816127ad84546126ae565b84612740565b602080601f8311600181146127e857600084156127d05750858301515b600019600386901b1c1916600185901b1785556109c1565b600085815260208120601f198616915b82811015612817578886015182559484019460019091019084016127f8565b50858210156128355787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152821515602082015260606040820181905260009061068290830184611e5f565b634e487b7160e01b600052603160045260246000fd5b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083602883015282516128c4816048850160208701611e3b565b9190910160480195945050505050565b828152604060208201526000610fa86040830184611e5f565b6000602082840312156128ff57600080fd5b81516001600160401b0381111561291557600080fd5b8201601f8101841361292657600080fd5b8051612934611f2a82611ee4565b81815285602083850101111561294957600080fd5b610682826020830160208601611e3b56fea26469706673582212208feaf9580686cdf819318b0caa3c00bae28956ae5ee0826b580035df646984d664736f6c63430008110033",
    "sourceMap": "181:701:78:-:0;;;364:53;;;;;;;;;-1:-1:-1;388:22:78;:20;:22::i;:::-;181:701;;5388:279:181;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:181;;216:2:202;5447:66:181;;;198:21:202;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:202;;;338:37;392:19;;5447:66:181;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:181;5588:15;5573:30;;;;;;5622:28;;564:36:202;;;5622:28:181;;552:2:202;537:18;5622:28:181;;;;;;;5523:138;5388:279::o;422:184:202:-;181:701:78;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c806354f6127f1161010f578063a22cb465116100a2578063c87b56dd11610071578063c87b56dd14610430578063cf5182ba14610443578063e985e9c514610456578063f2fde38b1461049257600080fd5b8063a22cb465146103d7578063a3b261f2146103ea578063af255b611461040a578063b88d4fde1461041d57600080fd5b80637e87632c116100de5780637e87632c146103925780637f23690c146103a55780638da5cb5b146103b857806395d89b41146103cf57600080fd5b806354f6127f146103515780636352211e1461036457806370a0823114610377578063715018a61461038a57600080fd5b806318160ddd1161018757806342842e0e1161015657806342842e0e146102eb57806349a6078d146102fe5780634e3e6e9c1461031e578063511b69521461033e57600080fd5b806318160ddd146102a0578063217b2270146102b257806323b872dd146102c55780632a3654a4146102d857600080fd5b8063081812fc116101c3578063081812fc1461023c578063095ea7b3146102675780630b0c6d821461027a57806314a6e2931461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063077f224a14610227575b600080fd5b6101fd6101f8366004611e11565b6104a5565b60405190151581526020015b60405180910390f35b61021a6104eb565b6040516102099190611e8b565b61023a610235366004611f7d565b610518565b005b61024f61024a366004611ff0565b610634565b6040516001600160a01b039091168152602001610209565b61023a610275366004612009565b61068b565b61023a610288366004612009565b6106e2565b61023a61029b36600461213b565b610784565b6002545b604051908152602001610209565b61024f6102c0366004611ff0565b610810565b61023a6102d336600461219e565b610849565b6101fd6102e6366004612009565b610869565b61023a6102f936600461219e565b610885565b61031161030c366004611ff0565b6108a5565b60405161020991906121da565b61033161032c366004612227565b6108c7565b604051610209919061225b565b61023a61034c3660046122cd565b61097a565b61021a61035f366004611ff0565b6109c9565b61024f610372366004611ff0565b6109d4565b6102a4610385366004612345565b6109df565b61023a610a00565b61023a6103a0366004612424565b610a14565b61023a6103b33660046124e8565b610b03565b6000546201000090046001600160a01b031661024f565b61021a610b19565b61023a6103e5366004612524565b610b46565b6103fd6103f8366004612345565b610b51565b6040516102099190612557565b61023a61041836600461258f565b610b75565b61023a61042b3660046125f6565b610b89565b61021a61043e366004611ff0565b610b97565b61023a610451366004612009565b610be5565b6101fd610464366004612645565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61023a6104a0366004612345565b610bef565b60006001600160e01b031982166380ac58cd60e01b14806104d657506001600160e01b03198216635b5e139f60e01b145b806104e557506104e582610c68565b92915050565b606060006104e57fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1610c8d565b600054610100900460ff16158080156105385750600054600160ff909116105b806105525750303b158015610552575060005460ff166001145b6105ba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156105dd576000805461ff0019166101001790555b6105e8848484610d2f565b801561062e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60008161064081610d61565b60008181526005602052604081209061065882610d99565b90508060000361066d57506000949350505050565b61068261067b600183612685565b8390610da3565b95945050505050565b6106958282610be5565b806001600160a01b0383166106a982610810565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006106ed82610810565b9050336001600160a01b038216811461073357604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016105b1565b6001600160a01b03841661075a57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036107795750505050565b61062e848385610daf565b61078c610e40565b80518251146107bb57815181516040516321d1e13360e11b8152600481019290925260248201526044016105b1565b60005b825181101561080b576108038382815181106107dc576107dc612698565b60200260200101518383815181106107f6576107f6612698565b6020026020010151610ea1565b6001016107be565b505050565b6000818152600360205260408120546001600160a01b0316806104e557604051635747cd1b60e11b8152600481018490526024016105b1565b61080b83838360001b600160405180602001604052806000815250610eab565b600061087482610d61565b61087e8383610f67565b9392505050565b61080b83838360001b600060405180602001604052806000815250610eab565b60606108b082610d61565b60008281526005602052604090206104e590610fb0565b606081516001600160401b038111156108e2576108e2611e9e565b60405190808252806020026020018201604052801561091557816020015b60608152602001906001900390816109005790505b50905060005b82518110156109745761094683828151811061093957610939612698565b6020026020010151610c8d565b82828151811061095857610958612698565b602002602001018190525061096d8160010190565b905061091b565b50919050565b336109858185610f67565b6109b457604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016105b1565b6109c18686868686610eab565b505050505050565b60606104e582610c8d565b60006104e582610810565b6001600160a01b03811660009081526004602052604081206104e590610d99565b610a08610e40565b610a126000610fbd565b565b8451845181141580610a27575083518114155b80610a33575082518114155b80610a3f575081518114155b15610a5d576040516393a8311960e01b815260040160405180910390fd5b60005b81811015610afa57610af2878281518110610a7d57610a7d612698565b6020026020010151878381518110610a9757610a97612698565b6020026020010151878481518110610ab157610ab1612698565b6020026020010151878581518110610acb57610acb612698565b6020026020010151878681518110610ae557610ae5612698565b602002602001015161097a565b600101610a60565b50505050505050565b610b0b610e40565b610b158282610ea1565b5050565b606060006104e57f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756610c8d565b610b15338383611033565b6001600160a01b03811660009081526004602052604090206060906104e590611111565b610b7d610e40565b61062e8484848461111c565b61062e848484600085610eab565b60606000610bc47f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e610c8d565b905060006024905060006106828383848651610be09190612685565b611166565b6106958282611273565b610bf7610e40565b6001600160a01b038116610c5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b1565b610c6581610fbd565b50565b60006001600160e01b0319821663622e7a0160e01b14806104e557506104e58261139c565b6000818152600160205260409020805460609190610caa906126ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd6906126ae565b8015610d235780601f10610cf857610100808354040283529160200191610d23565b820191906000526020600020905b815481529060010190602001808311610d0657829003601f168201915b50505050509050919050565b600054610100900460ff16610d565760405162461bcd60e51b81526004016105b1906126e2565b61080b8383836113d1565b6000818152600360205260409020546001600160a01b0316610c6557604051635747cd1b60e11b8152600481018290526024016105b1565b60006104e5825490565b600061087e8383611403565b6000818152600560205260408120610dc7908561142d565b905080610df9576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016105b1565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b0362010000909104163314610a125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b1565b610b158282611442565b6001600160a01b03851660009081526007602090815260408083203380855292529091205460ff16158015610ee75750610ee58185610f67565b155b15610f1757604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016105b1565b610f248686868686611536565b60405184906001600160a01b0380881691908916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050505050565b600080610f7383610810565b9050806001600160a01b0316846001600160a01b03161480610fa857506000838152600560205260409020610fa890856116c0565b949350505050565b6060600061087e836116e2565b6000546001600160a01b03828116620100009092041614610c6557600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b816001600160a01b0316836001600160a01b0316036110a45760405162461bcd60e51b815260206004820152602760248201527f4c535038436f6d70617469626c654552433732313a20617070726f766520746f6044820152661031b0b63632b960c91b60648201526084016105b1565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606104e5826116e2565b6111288484848461173d565b60405183906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b60608161117481601f61272d565b10156111b35760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016105b1565b6111bd828461272d565b845110156112015760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016105b1565b606082158015611220576040519150600082526020820160405261126a565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611259578051835260209283019201611241565b5050858452601f01601f1916604052505b50949350505050565b600061127e82610810565b9050336001600160a01b03821681146112c457604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016105b1565b6001600160a01b0384166112eb57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361130a5750505050565b60008381526005602052604081206113229086611857565b905080611354576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016105b1565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b60006001600160e01b03198216631c537ddf60e21b14806104e557506301ffc9a760e01b6001600160e01b03198316146104e5565b600054610100900460ff166113f85760405162461bcd60e51b81526004016105b1906126e2565b61080b83838361186c565b600082600001828154811061141a5761141a612698565b9060005260206000200154905092915050565b600061087e836001600160a01b03841661189e565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201611482576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa82016114c257604051630eceab6760e31b815260040160405180910390fd5b60008281526001602052604090206114da8282612786565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b26101008351111561151b57611516836000610100611166565b61151d565b825b60405161152a9190611e8b565b60405180910390a25050565b836001600160a01b0316856001600160a01b03160361156857604051635d67d6c160e01b815260040160405180910390fd5b600061157384610810565b9050856001600160a01b0316816001600160a01b0316146115c157604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016105b1565b6001600160a01b0385166115e8576040516324ecef4d60e01b815260040160405180910390fd5b336115f38786611991565b6001600160a01b038716600090815260046020526040902061161590866119d8565b506001600160a01b038616600090815260046020526040902061163890866119e4565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061169f9086908a908a90612845565b60405180910390a46116b3878787866119f0565b610afa8787878787611ac4565b6001600160a01b0381166000908152600183016020526040812054151561087e565b606081600001805480602002602001604051908101604052809291908181526020018280548015610d2357602002820191906000526020600020905b81548152602001906001019080831161171e5750505050509050919050565b6001600160a01b038416611764576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b03161561179d576040516334c7b51160e01b8152600481018490526024016105b1565b336001600260008282546117b1919061272d565b90915550506001600160a01b03851660009081526004602052604090206117d890856119e4565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061183a90869089908990612845565b60405180910390a4611850600086868686611ac4565b5050505050565b600061087e836001600160a01b038416611bfc565b600054610100900460ff166118935760405162461bcd60e51b81526004016105b1906126e2565b61080b838383611c4b565b600081815260018301602052604081205480156119875760006118c2600183612685565b85549091506000906118d690600190612685565b905081811461193b5760008660000182815481106118f6576118f6612698565b906000526020600020015490508087600001848154811061191957611919612698565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061194c5761194c612871565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104e5565b60009150506104e5565b6000818152600560205260408120906119a982610d99565b905060005b818110156118505760006119c28482610da3565b90506119cf818787610daf565b506001016119ae565b600061087e838361189e565b600061087e8383611bfc565b611a0184631aed5a8560e21b611d18565b1561062e57600084848484604051602001611a1f9493929190612887565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611a7d907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab009085906004016128d4565b6000604051808303816000875af1158015611a9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c191908101906128ed565b611ad584631aed5a8560e21b611d18565b15611b9f57600085858584604051602001611af39493929190612887565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611b51907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d9085906004016128d4565b6000604051808303816000875af1158015611b70573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b9891908101906128ed565b5050611850565b81611850576001600160a01b0384163b15611bd857604051634349776d60e01b81526001600160a01b03851660048201526024016105b1565b604051630317313760e01b81526001600160a01b03851660048201526024016105b1565b6000818152600183016020526040812054611c43575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104e5565b5060006104e5565b600054610100900460ff16611c725760405162461bcd60e51b81526004016105b1906126e2565b611c7b81611da1565b611cc47feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611dc8565b611cee7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611dc8565b61080b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611dc8565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611d8a575060208210155b8015611d965750600081115b979650505050505050565b600054610100900460ff16610bf75760405162461bcd60e51b81526004016105b1906126e2565b6000828152600160205260409020611de08282612786565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161152a9190611e8b565b600060208284031215611e2357600080fd5b81356001600160e01b03198116811461087e57600080fd5b60005b83811015611e56578181015183820152602001611e3e565b50506000910152565b60008151808452611e77816020860160208601611e3b565b601f01601f19169290920160200192915050565b60208152600061087e6020830184611e5f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611edc57611edc611e9e565b604052919050565b60006001600160401b03821115611efd57611efd611e9e565b50601f01601f191660200190565b600082601f830112611f1c57600080fd5b8135611f2f611f2a82611ee4565b611eb4565b818152846020838601011115611f4457600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114611f7857600080fd5b919050565b600080600060608486031215611f9257600080fd5b83356001600160401b0380821115611fa957600080fd5b611fb587838801611f0b565b94506020860135915080821115611fcb57600080fd5b50611fd886828701611f0b565b925050611fe760408501611f61565b90509250925092565b60006020828403121561200257600080fd5b5035919050565b6000806040838503121561201c57600080fd5b61202583611f61565b946020939093013593505050565b60006001600160401b0382111561204c5761204c611e9e565b5060051b60200190565b600082601f83011261206757600080fd5b81356020612077611f2a83612033565b82815260059290921b8401810191818101908684111561209657600080fd5b8286015b848110156120b1578035835291830191830161209a565b509695505050505050565b600082601f8301126120cd57600080fd5b813560206120dd611f2a83612033565b82815260059290921b840181019181810190868411156120fc57600080fd5b8286015b848110156120b15780356001600160401b0381111561211f5760008081fd5b61212d8986838b0101611f0b565b845250918301918301612100565b6000806040838503121561214e57600080fd5b82356001600160401b038082111561216557600080fd5b61217186838701612056565b9350602085013591508082111561218757600080fd5b50612194858286016120bc565b9150509250929050565b6000806000606084860312156121b357600080fd5b6121bc84611f61565b92506121ca60208501611f61565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561221b5783516001600160a01b0316835292840192918401916001016121f6565b50909695505050505050565b60006020828403121561223957600080fd5b81356001600160401b0381111561224f57600080fd5b610fa884828501612056565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156122b057603f1988860301845261229e858351611e5f565b94509285019290850190600101612282565b5092979650505050505050565b80358015158114611f7857600080fd5b600080600080600060a086880312156122e557600080fd5b6122ee86611f61565b94506122fc60208701611f61565b935060408601359250612311606087016122bd565b915060808601356001600160401b0381111561232c57600080fd5b61233888828901611f0b565b9150509295509295909350565b60006020828403121561235757600080fd5b61087e82611f61565b600082601f83011261237157600080fd5b81356020612381611f2a83612033565b82815260059290921b840181019181810190868411156123a057600080fd5b8286015b848110156120b1576123b581611f61565b83529183019183016123a4565b600082601f8301126123d357600080fd5b813560206123e3611f2a83612033565b82815260059290921b8401810191818101908684111561240257600080fd5b8286015b848110156120b157612417816122bd565b8352918301918301612406565b600080600080600060a0868803121561243c57600080fd5b85356001600160401b038082111561245357600080fd5b61245f89838a01612360565b9650602088013591508082111561247557600080fd5b61248189838a01612360565b9550604088013591508082111561249757600080fd5b6124a389838a01612056565b945060608801359150808211156124b957600080fd5b6124c589838a016123c2565b935060808801359150808211156124db57600080fd5b50612338888289016120bc565b600080604083850312156124fb57600080fd5b8235915060208301356001600160401b0381111561251857600080fd5b61219485828601611f0b565b6000806040838503121561253757600080fd5b61254083611f61565b915061254e602084016122bd565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561221b57835183529284019291840191600101612573565b600080600080608085870312156125a557600080fd5b6125ae85611f61565b9350602085013592506125c3604086016122bd565b915060608501356001600160401b038111156125de57600080fd5b6125ea87828801611f0b565b91505092959194509250565b6000806000806080858703121561260c57600080fd5b61261585611f61565b935061262360208601611f61565b92506040850135915060608501356001600160401b038111156125de57600080fd5b6000806040838503121561265857600080fd5b61266183611f61565b915061254e60208401611f61565b634e487b7160e01b600052601160045260246000fd5b818103818111156104e5576104e561266f565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806126c257607f821691505b60208210810361097457634e487b7160e01b600052602260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b808201808211156104e5576104e561266f565b601f82111561080b57600081815260208120601f850160051c810160208610156127675750805b601f850160051c820191505b818110156109c157828155600101612773565b81516001600160401b0381111561279f5761279f611e9e565b6127b3816127ad84546126ae565b84612740565b602080601f8311600181146127e857600084156127d05750858301515b600019600386901b1c1916600185901b1785556109c1565b600085815260208120601f198616915b82811015612817578886015182559484019460019091019084016127f8565b50858210156128355787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152821515602082015260606040820181905260009061068290830184611e5f565b634e487b7160e01b600052603160045260246000fd5b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083602883015282516128c4816048850160208701611e3b565b9190910160480195945050505050565b828152604060208201526000610fa86040830184611e5f565b6000602082840312156128ff57600080fd5b81516001600160401b0381111561291557600080fd5b8201601f8101841361292657600080fd5b8051612934611f2a82611ee4565b81815285602083850101111561294957600080fd5b610682826020830160208601611e3b56fea26469706673582212208feaf9580686cdf819318b0caa3c00bae28956ae5ee0826b580035df646984d664736f6c63430008110033",
    "sourceMap": "181:701:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:379:73;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1882:379:73;;;;;;;;616:165:28;;;:::i;:::-;;;;;;;:::i;642:238:78:-;;;;;;:::i;:::-;;:::i;:::-;;2961:1058:73;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3475:32:202;;;3457:51;;3445:2;3430:18;2961:1058:73;3311:203:202;4343::73;;;;;;:::i;:::-;;:::i;3461:587:66:-;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;6537:25:202;;;6525:2;6510:18;1690:92:66;6391:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;4884:181:73:-;;;;;;:::i;:::-;;:::i;4119:188:66:-;;;;;;:::i;:::-;;:::i;5291:186:73:-;;;;;;:::i;:::-;;:::i;4378:174:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;1058:133:174:-;;;;;;:::i;:::-;;:::i;2772:126:73:-;;;;;;:::i;:::-;;:::i;1885::66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;;;;-1:-1:-1;;;;;673:6:177;601:85;;926:169:28;;;:::i;4552:142:73:-;;;;;;:::i;:::-;;:::i;2412:136:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;582:177:79:-;;;;;;:::i;:::-;;:::i;5661:215:73:-;;;;;;:::i;:::-;;:::i;2323:386::-;;;;;;:::i;:::-;;:::i;5904:312::-;;;;;;:::i;:::-;;:::i;4081:199::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4233:30:73;;;4206:4;4233:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;4081:199;1419:189:177;;;;;;:::i;:::-;;:::i;1882:379:73:-;2071:4;-1:-1:-1;;;;;;2110:34:73;;-1:-1:-1;;;2110:34:73;;:92;;-1:-1:-1;;;;;;;2160:42:73;;-1:-1:-1;;;2160:42:73;2110:92;:144;;;;2218:36;2242:11;2218:23;:36::i;:::-;2091:163;1882:379;-1:-1:-1;;1882:379:73:o;616:165:28:-;670:13;695:17;715:30;476:66:29;715:8:28;:30::i;642:238:78:-;3111:19:181;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:181;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:181;1476:19:182;:23;;;3219:66:181;;-1:-1:-1;3268:12:181;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:181;;15562:2:202;3157:201:181;;;15544:21:202;15601:2;15581:18;;;15574:30;15640:34;15620:18;;;15613:62;-1:-1:-1;;;15691:18:202;;;15684:44;15745:19;;3157:201:181;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:181;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:181;;;;;3394:65;794:79:78::1;847:5;854:7;863:9;794:52;:79::i;:::-;3483:14:181::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:181;;;3553:14;;-1:-1:-1;15927:36:202;;3553:14:181;;15915:2:202;15900:18;3553:14:181;;;;;;;3479:99;3101:483;642:238:78;;;:::o;2961:1058:73:-;3028:7;3082;3100:32;3082:7;3100:14;:32::i;:::-;3143:52;3198:28;;;:10;:28;;;;;;3265;3198;3265:26;:28::i;:::-;3236:57;;3308:18;3330:1;3308:23;3304:709;;-1:-1:-1;3362:1:73;;2961:1058;-1:-1:-1;;;;2961:1058:73:o;3304:709::-;3956:46;3979:22;4000:1;3979:18;:22;:::i;:::-;3956:19;;:22;:46::i;:::-;3949:53;2961:1058;-1:-1:-1;;;;;2961:1058:73:o;4343:203::-;4420:45;4438:8;4456:7;4420:17;:45::i;:::-;4531:7;-1:-1:-1;;;;;4480:59:73;;4489:30;4531:7;4489:12;:30::i;:::-;-1:-1:-1;;;;;4480:59:73;;;;;;;;;;;4343:203;;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;16497:15:202;;;3682:46:66;;;16479:34:202;16529:18;;;16522:34;;;16592:15;;16572:18;;;16565:43;16414:18;;3682:46:66;16239:375:202;3635:104:66;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;16793:25:202::0;;;;16834:18;;;16827:34;16766:18;;2036:72:174::1;16619:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;6537:25:202;;;6510:18;;2265:31:66;6391:177:202;4884:181:73;5011:47;5021:4;5027:2;5039:7;5031:16;;5049:4;5011:47;;;;;;;;;;;;:9;:47::i;4119:188:66:-;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;5291:186:73:-;5422:48;5432:4;5438:2;5450:7;5442:16;;5460:5;5422:48;;;;;;;;;;;;:9;:48::i;4378:174:66:-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;17360:25:202;;;-1:-1:-1;;;;;17421:32:202;;17401:18;;;17394:60;17333:18;;5357:39:66;17186:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;2772:126:73:-;2835:7;2861:30;2882:7;2861:12;:30::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;:::-;1661:128:::0;;:::o;926:169:28:-;982:13;1007:17;1027:32;619:66:29;1027:8:28;:32::i;4552:142:73:-;4637:50;4656:10;4668:8;4678;4637:18;:50::i;2412:136:66:-;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;582:177:79:-;805:13:177;:11;:13::i;:::-;721:31:79::1;727:2;731:7;740:5;747:4;721:5;:31::i;5661:215:73:-:0;5819:50;5829:4;5835:2;5847:7;5839:16;5864:4;5819:9;:50::i;2323:386::-;2407:13;2432:17;2452:28;1030:66:29;2452:8:73;:28::i;:::-;2432:48;;2565:14;2582:2;2565:19;;2595:21;2619:50;2634:4;2640:6;2662;2648:4;:11;:20;;;;:::i;:::-;2619:14;:50::i;5904:312::-;6093:42;6117:8;6127:7;6093:23;:42::i;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;17667:2:202;1499:73:177::1;::::0;::::1;17649:21:202::0;17706:2;17686:18;;;17679:30;17745:34;17725:18;;;17718:62;-1:-1:-1;;;17796:18:202;;;17789:36;17842:19;;1499:73:177::1;17465:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;1140:253:67:-;1287:4;-1:-1:-1;;;;;;1314:32:67;;-1:-1:-1;;;1314:32:67;;:72;;;1350:36;1374:11;1350:23;:36::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;331:245:79:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;498:71:79::1;543:5;550:7;559:9;498:44;:71::i;8040:157:66:-:0;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;6537:25:202;;;6510:18;;8149:31:66;6391:177:202;8829:115:199;8892:7;8918:19;8926:3;4444:18;;4362:107;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;6284:333:66:-;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;18861:32:202;;6507:42:66;;;18843:51:202;18910:18;;;18903:34;;;18816:18;;6507:42:66;18669:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;;;;;1755:10;1744:21;1736:66;;;;-1:-1:-1;;;1736:66:177;;19150:2:202;1736:66:177;;;19132:21:202;;;19169:18;;;19162:30;19228:34;19208:18;;;19201:62;19280:18;;1736:66:177;18948:356:202;7691:199:73;7857:26;7872:3;7877:5;7857:14;:26::i;6222:482::-;-1:-1:-1;;;;;4233:30:73;;4206:4;4233:30;;;:18;:30;;;;;;;;6416:10;4233:40;;;;;;;;;;;6441:33;:75;;;;;6479:37;6498:8;6508:7;6479:18;:37::i;:::-;6478:38;6441:75;6437:152;;;6539:39;;-1:-1:-1;;;6539:39:73;;;;;17360:25:202;;;-1:-1:-1;;;;;17421:32:202;;17401:18;;;17394:60;17333:18;;6539:39:73;17186:274:202;6437:152:73;6599:47;6615:4;6621:2;6625:7;6634:5;6641:4;6599:15;:47::i;:::-;6661:36;;6688:7;;-1:-1:-1;;;;;6661:36:73;;;;;;;;;;6680:16;;6661:36;6387:317;6222:482;;;;;:::o;4710:273:66:-;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;1948:235:177:-;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;;;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;2070:6;2090:17;;;-1:-1:-1;;;;;;2090:17:177;;;;;2126:40;;2070:6;;;;;;;2090:17;;2070:6;;2126:40;;;2037:140;1948:235;:::o;7340:345:73:-;7502:8;-1:-1:-1;;;;;7487:23:73;:11;-1:-1:-1;;;;;7487:23:73;;7479:75;;;;-1:-1:-1;;;7479:75:73;;19511:2:202;7479:75:73;;;19493:21:202;19550:2;19530:18;;;19523:30;19589:34;19569:18;;;19562:62;-1:-1:-1;;;19640:18:202;;;19633:37;19687:19;;7479:75:73;19309:403:202;7479:75:73;-1:-1:-1;;;;;7564:31:73;;;;;;;:18;:31;;;;;;;;:41;;;;;;;;;;;;;:52;;-1:-1:-1;;7564:52:73;;;;;;;;;;7631:47;;445:41:202;;;7631:47:73;;418:18:202;7631:47:73;;;;;;;7340:345;;;:::o;7664:124:199:-;7727:16;7762:19;7770:3;7762:7;:19::i;6710:250:73:-;6859:37;6871:2;6875:7;6884:5;6891:4;6859:11;:37::i;:::-;6911:42;;6944:7;;-1:-1:-1;;;;;6911:42:73;;;6936:16;;6911:42;;6936:16;;6911:42;6710:250;;;;:::o;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;20049:2:202;9631:50:200;;;20031:21:202;20088:2;20068:18;;;20061:30;-1:-1:-1;;;20107:18:202;;;20100:44;20161:18;;9631:50:200;19847:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;20392:2:202;9691:63:200;;;20374:21:202;20431:2;20411:18;;;20404:30;-1:-1:-1;;;20450:18:202;;;20443:47;20507:18;;9691:63:200;20190:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;2654:736:66:-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;16497:15:202;;;2878:46:66;;;16479:34:202;16529:18;;;16522:34;;;16592:15;;16572:18;;;16565:43;16414:18;;2878:46:66;16239:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;18861:32:202;;3270:48:66;;;18843:51:202;18910:18;;;18903:34;;;18816:18;;3270:48:66;18669:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;1562:253:73;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;1729:79:73::1;1782:5;1789:7;1798:9;1729:52;:79::i;4811:118:199:-:0;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;1464:517:31:-;1563:31;;;1559:416;;1617:26;;-1:-1:-1;;;1617:26:31;;;;;;;;;;;1559:416;1664:33;;;1660:315;;1720:28;;-1:-1:-1;;;1720:28:31;;;;;;;;;;;1660:315;1779:15;;;;:6;:15;;;;;:27;1797:9;1779:15;:27;:::i;:::-;;1854:7;1825:139;1899:3;1879:9;:16;:23;;:71;;1917:33;1932:9;1943:1;1946:3;1917:14;:33::i;:::-;1879:71;;;1905:9;1879:71;1825:139;;;;;;:::i;:::-;;;;;;;;1464:517;;:::o;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;16497:15:202;;;10476:44:66;;;16479:34:202;16529:18;;;16522:34;;;16592:15;;16572:18;;;16565:43;16414:18;;10476:44:66;16239:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;8425:700:66:-;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;6537:25:202;;;6510:18;;8701:33:66;6391:177:202;8658:87:66;8774:10;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;:::-;8555:570;8425:700;;;;:::o;8028:150:199:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;824:249:67:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;991:75:67::1;1040:5;1047:7;1056:9;991:48;:75::i;2685:1388:199:-:0;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;6693:933:66;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;5818:123::-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;12480:681::-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;3475:32:202;;12997:55:66;;;3457:51:202;3430:18;;12997:55:66;3311:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;3475:32:202;;13098::66;;;3457:51:202;3430:18;;13098:32:66;3311:203:202;2113:404:199;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;694:472:31;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;852:42:31::1;884:9;852:31;:42::i;:::-;956:78;231:66:29;971:29:31;;1002:31;;;;;;;;;;;;;-1:-1:-1::0;;;1002:31:31::1;;::::0;956:14:::1;:78::i;:::-;1045:50;476:66:29;1088:5:31::0;1045:14:::1;:50::i;:::-;1105:54;619:66:29;1150:7:31::0;1105:14:::1;:54::i;4680:811:1:-:0;4846:105;;;-1:-1:-1;;;;;;24958:33:202;;4846:105:1;;;;24940:52:202;;;;4846:105:1;;;;;;;;;;24913:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;743:233:175:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:202;721:16;;714:27;497:250::o;752:271::-;794:3;832:5;826:12;859:6;854:3;847:19;875:76;944:6;937:4;932:3;928:14;921:4;914:5;910:16;875:76;:::i;:::-;1005:2;984:15;-1:-1:-1;;980:29:202;971:39;;;;1012:4;967:50;;752:271;-1:-1:-1;;752:271:202:o;1028:220::-;1177:2;1166:9;1159:21;1140:4;1197:45;1238:2;1227:9;1223:18;1215:6;1197:45;:::i;1253:127::-;1314:10;1309:3;1305:20;1302:1;1295:31;1345:4;1342:1;1335:15;1369:4;1366:1;1359:15;1385:275;1456:2;1450:9;1521:2;1502:13;;-1:-1:-1;;1498:27:202;1486:40;;-1:-1:-1;;;;;1541:34:202;;1577:22;;;1538:62;1535:88;;;1603:18;;:::i;:::-;1639:2;1632:22;1385:275;;-1:-1:-1;1385:275:202:o;1665:187::-;1714:4;-1:-1:-1;;;;;1739:6:202;1736:30;1733:56;;;1769:18;;:::i;:::-;-1:-1:-1;1835:2:202;1814:15;-1:-1:-1;;1810:29:202;1841:4;1806:40;;1665:187::o;1857:464::-;1900:5;1953:3;1946:4;1938:6;1934:17;1930:27;1920:55;;1971:1;1968;1961:12;1920:55;2007:6;1994:20;2038:49;2054:32;2083:2;2054:32;:::i;:::-;2038:49;:::i;:::-;2112:2;2103:7;2096:19;2158:3;2151:4;2146:2;2138:6;2134:15;2130:26;2127:35;2124:55;;;2175:1;2172;2165:12;2124:55;2240:2;2233:4;2225:6;2221:17;2214:4;2205:7;2201:18;2188:55;2288:1;2263:16;;;2281:4;2259:27;2252:38;;;;2267:7;1857:464;-1:-1:-1;;;1857:464:202:o;2326:173::-;2394:20;;-1:-1:-1;;;;;2443:31:202;;2433:42;;2423:70;;2489:1;2486;2479:12;2423:70;2326:173;;;:::o;2504:617::-;2601:6;2609;2617;2670:2;2658:9;2649:7;2645:23;2641:32;2638:52;;;2686:1;2683;2676:12;2638:52;2726:9;2713:23;-1:-1:-1;;;;;2796:2:202;2788:6;2785:14;2782:34;;;2812:1;2809;2802:12;2782:34;2835:50;2877:7;2868:6;2857:9;2853:22;2835:50;:::i;:::-;2825:60;;2938:2;2927:9;2923:18;2910:32;2894:48;;2967:2;2957:8;2954:16;2951:36;;;2983:1;2980;2973:12;2951:36;;3006:52;3050:7;3039:8;3028:9;3024:24;3006:52;:::i;:::-;2996:62;;;3077:38;3111:2;3100:9;3096:18;3077:38;:::i;:::-;3067:48;;2504:617;;;;;:::o;3126:180::-;3185:6;3238:2;3226:9;3217:7;3213:23;3209:32;3206:52;;;3254:1;3251;3244:12;3206:52;-1:-1:-1;3277:23:202;;3126:180;-1:-1:-1;3126:180:202:o;3519:254::-;3587:6;3595;3648:2;3636:9;3627:7;3623:23;3619:32;3616:52;;;3664:1;3661;3654:12;3616:52;3687:29;3706:9;3687:29;:::i;:::-;3677:39;3763:2;3748:18;;;;3735:32;;-1:-1:-1;;;3519:254:202:o;4037:183::-;4097:4;-1:-1:-1;;;;;4122:6:202;4119:30;4116:56;;;4152:18;;:::i;:::-;-1:-1:-1;4197:1:202;4193:14;4209:4;4189:25;;4037:183::o;4225:662::-;4279:5;4332:3;4325:4;4317:6;4313:17;4309:27;4299:55;;4350:1;4347;4340:12;4299:55;4386:6;4373:20;4412:4;4436:60;4452:43;4492:2;4452:43;:::i;4436:60::-;4530:15;;;4616:1;4612:10;;;;4600:23;;4596:32;;;4561:12;;;;4640:15;;;4637:35;;;4668:1;4665;4658:12;4637:35;4704:2;4696:6;4692:15;4716:142;4732:6;4727:3;4724:15;4716:142;;;4798:17;;4786:30;;4836:12;;;;4749;;4716:142;;;-1:-1:-1;4876:5:202;4225:662;-1:-1:-1;;;;;;4225:662:202:o;4892:887::-;4944:5;4997:3;4990:4;4982:6;4978:17;4974:27;4964:55;;5015:1;5012;5005:12;4964:55;5051:6;5038:20;5077:4;5101:60;5117:43;5157:2;5117:43;:::i;5101:60::-;5195:15;;;5281:1;5277:10;;;;5265:23;;5261:32;;;5226:12;;;;5305:15;;;5302:35;;;5333:1;5330;5323:12;5302:35;5369:2;5361:6;5357:15;5381:369;5397:6;5392:3;5389:15;5381:369;;;5483:3;5470:17;-1:-1:-1;;;;;5506:11:202;5503:35;5500:125;;;5579:1;5608:2;5604;5597:14;5500:125;5650:57;5703:3;5698:2;5684:11;5676:6;5672:24;5668:33;5650:57;:::i;:::-;5638:70;;-1:-1:-1;5728:12:202;;;;5414;;5381:369;;5784:602;5911:6;5919;5972:2;5960:9;5951:7;5947:23;5943:32;5940:52;;;5988:1;5985;5978:12;5940:52;6028:9;6015:23;-1:-1:-1;;;;;6098:2:202;6090:6;6087:14;6084:34;;;6114:1;6111;6104:12;6084:34;6137:61;6190:7;6181:6;6170:9;6166:22;6137:61;:::i;:::-;6127:71;;6251:2;6240:9;6236:18;6223:32;6207:48;;6280:2;6270:8;6267:16;6264:36;;;6296:1;6293;6286:12;6264:36;;6319:61;6372:7;6361:8;6350:9;6346:24;6319:61;:::i;:::-;6309:71;;;5784:602;;;;;:::o;6758:328::-;6835:6;6843;6851;6904:2;6892:9;6883:7;6879:23;6875:32;6872:52;;;6920:1;6917;6910:12;6872:52;6943:29;6962:9;6943:29;:::i;:::-;6933:39;;6991:38;7025:2;7014:9;7010:18;6991:38;:::i;:::-;6981:48;;7076:2;7065:9;7061:18;7048:32;7038:42;;6758:328;;;;;:::o;7091:658::-;7262:2;7314:21;;;7384:13;;7287:18;;;7406:22;;;7233:4;;7262:2;7485:15;;;;7459:2;7444:18;;;7233:4;7528:195;7542:6;7539:1;7536:13;7528:195;;;7607:13;;-1:-1:-1;;;;;7603:39:202;7591:52;;7698:15;;;;7663:12;;;;7639:1;7557:9;7528:195;;;-1:-1:-1;7740:3:202;;7091:658;-1:-1:-1;;;;;;7091:658:202:o;7754:348::-;7838:6;7891:2;7879:9;7870:7;7866:23;7862:32;7859:52;;;7907:1;7904;7897:12;7859:52;7947:9;7934:23;-1:-1:-1;;;;;7972:6:202;7969:30;7966:50;;;8012:1;8009;8002:12;7966:50;8035:61;8088:7;8079:6;8068:9;8064:22;8035:61;:::i;8107:801::-;8267:4;8296:2;8336;8325:9;8321:18;8366:2;8355:9;8348:21;8389:6;8424;8418:13;8455:6;8447;8440:22;8493:2;8482:9;8478:18;8471:25;;8555:2;8545:6;8542:1;8538:14;8527:9;8523:30;8519:39;8505:53;;8593:2;8585:6;8581:15;8614:1;8624:255;8638:6;8635:1;8632:13;8624:255;;;8731:2;8727:7;8715:9;8707:6;8703:22;8699:36;8694:3;8687:49;8759:40;8792:6;8783;8777:13;8759:40;:::i;:::-;8749:50;-1:-1:-1;8857:12:202;;;;8822:15;;;;8660:1;8653:9;8624:255;;;-1:-1:-1;8896:6:202;;8107:801;-1:-1:-1;;;;;;;8107:801:202:o;8913:160::-;8978:20;;9034:13;;9027:21;9017:32;;9007:60;;9063:1;9060;9053:12;9078:607;9179:6;9187;9195;9203;9211;9264:3;9252:9;9243:7;9239:23;9235:33;9232:53;;;9281:1;9278;9271:12;9232:53;9304:29;9323:9;9304:29;:::i;:::-;9294:39;;9352:38;9386:2;9375:9;9371:18;9352:38;:::i;:::-;9342:48;;9437:2;9426:9;9422:18;9409:32;9399:42;;9460:35;9491:2;9480:9;9476:18;9460:35;:::i;:::-;9450:45;;9546:3;9535:9;9531:19;9518:33;-1:-1:-1;;;;;9566:6:202;9563:30;9560:50;;;9606:1;9603;9596:12;9560:50;9629;9671:7;9662:6;9651:9;9647:22;9629:50;:::i;:::-;9619:60;;;9078:607;;;;;;;;:::o;9913:186::-;9972:6;10025:2;10013:9;10004:7;10000:23;9996:32;9993:52;;;10041:1;10038;10031:12;9993:52;10064:29;10083:9;10064:29;:::i;10104:668::-;10158:5;10211:3;10204:4;10196:6;10192:17;10188:27;10178:55;;10229:1;10226;10219:12;10178:55;10265:6;10252:20;10291:4;10315:60;10331:43;10371:2;10331:43;:::i;10315:60::-;10409:15;;;10495:1;10491:10;;;;10479:23;;10475:32;;;10440:12;;;;10519:15;;;10516:35;;;10547:1;10544;10537:12;10516:35;10583:2;10575:6;10571:15;10595:148;10611:6;10606:3;10603:15;10595:148;;;10677:23;10696:3;10677:23;:::i;:::-;10665:36;;10721:12;;;;10628;;10595:148;;10777:662;10828:5;10881:3;10874:4;10866:6;10862:17;10858:27;10848:55;;10899:1;10896;10889:12;10848:55;10935:6;10922:20;10961:4;10985:60;11001:43;11041:2;11001:43;:::i;10985:60::-;11079:15;;;11165:1;11161:10;;;;11149:23;;11145:32;;;11110:12;;;;11189:15;;;11186:35;;;11217:1;11214;11207:12;11186:35;11253:2;11245:6;11241:15;11265:145;11281:6;11276:3;11273:15;11265:145;;;11347:20;11363:3;11347:20;:::i;:::-;11335:33;;11388:12;;;;11298;;11265:145;;11444:1276;11670:6;11678;11686;11694;11702;11755:3;11743:9;11734:7;11730:23;11726:33;11723:53;;;11772:1;11769;11762:12;11723:53;11812:9;11799:23;-1:-1:-1;;;;;11882:2:202;11874:6;11871:14;11868:34;;;11898:1;11895;11888:12;11868:34;11921:61;11974:7;11965:6;11954:9;11950:22;11921:61;:::i;:::-;11911:71;;12035:2;12024:9;12020:18;12007:32;11991:48;;12064:2;12054:8;12051:16;12048:36;;;12080:1;12077;12070:12;12048:36;12103:63;12158:7;12147:8;12136:9;12132:24;12103:63;:::i;:::-;12093:73;;12219:2;12208:9;12204:18;12191:32;12175:48;;12248:2;12238:8;12235:16;12232:36;;;12264:1;12261;12254:12;12232:36;12287:63;12342:7;12331:8;12320:9;12316:24;12287:63;:::i;:::-;12277:73;;12403:2;12392:9;12388:18;12375:32;12359:48;;12432:2;12422:8;12419:16;12416:36;;;12448:1;12445;12438:12;12416:36;12471:60;12523:7;12512:8;12501:9;12497:24;12471:60;:::i;:::-;12461:70;;12584:3;12573:9;12569:19;12556:33;12540:49;;12614:2;12604:8;12601:16;12598:36;;;12630:1;12627;12620:12;12598:36;;12653:61;12706:7;12695:8;12684:9;12680:24;12653:61;:::i;12725:389::-;12802:6;12810;12863:2;12851:9;12842:7;12838:23;12834:32;12831:52;;;12879:1;12876;12869:12;12831:52;12915:9;12902:23;12892:33;;12976:2;12965:9;12961:18;12948:32;-1:-1:-1;;;;;12995:6:202;12992:30;12989:50;;;13035:1;13032;13025:12;12989:50;13058;13100:7;13091:6;13080:9;13076:22;13058:50;:::i;13119:254::-;13184:6;13192;13245:2;13233:9;13224:7;13220:23;13216:32;13213:52;;;13261:1;13258;13251:12;13213:52;13284:29;13303:9;13284:29;:::i;:::-;13274:39;;13332:35;13363:2;13352:9;13348:18;13332:35;:::i;:::-;13322:45;;13119:254;;;;;:::o;13378:632::-;13549:2;13601:21;;;13671:13;;13574:18;;;13693:22;;;13520:4;;13549:2;13772:15;;;;13746:2;13731:18;;;13520:4;13815:169;13829:6;13826:1;13823:13;13815:169;;;13890:13;;13878:26;;13959:15;;;;13924:12;;;;13851:1;13844:9;13815:169;;14015:532;14107:6;14115;14123;14131;14184:3;14172:9;14163:7;14159:23;14155:33;14152:53;;;14201:1;14198;14191:12;14152:53;14224:29;14243:9;14224:29;:::i;:::-;14214:39;;14300:2;14289:9;14285:18;14272:32;14262:42;;14323:35;14354:2;14343:9;14339:18;14323:35;:::i;:::-;14313:45;;14409:2;14398:9;14394:18;14381:32;-1:-1:-1;;;;;14428:6:202;14425:30;14422:50;;;14468:1;14465;14458:12;14422:50;14491;14533:7;14524:6;14513:9;14509:22;14491:50;:::i;:::-;14481:60;;;14015:532;;;;;;;:::o;14552:538::-;14647:6;14655;14663;14671;14724:3;14712:9;14703:7;14699:23;14695:33;14692:53;;;14741:1;14738;14731:12;14692:53;14764:29;14783:9;14764:29;:::i;:::-;14754:39;;14812:38;14846:2;14835:9;14831:18;14812:38;:::i;:::-;14802:48;;14897:2;14886:9;14882:18;14869:32;14859:42;;14952:2;14941:9;14937:18;14924:32;-1:-1:-1;;;;;14971:6:202;14968:30;14965:50;;;15011:1;15008;15001:12;15095:260;15163:6;15171;15224:2;15212:9;15203:7;15199:23;15195:32;15192:52;;;15240:1;15237;15230:12;15192:52;15263:29;15282:9;15263:29;:::i;:::-;15253:39;;15311:38;15345:2;15334:9;15330:18;15311:38;:::i;15974:127::-;16035:10;16030:3;16026:20;16023:1;16016:31;16066:4;16063:1;16056:15;16090:4;16087:1;16080:15;16106:128;16173:9;;;16194:11;;;16191:37;;;16208:18;;:::i;16872:127::-;16933:10;16928:3;16924:20;16921:1;16914:31;16964:4;16961:1;16954:15;16988:4;16985:1;16978:15;17872:380;17951:1;17947:12;;;;17994;;;18015:61;;18069:4;18061:6;18057:17;18047:27;;18015:61;18122:2;18114:6;18111:14;18091:18;18088:38;18085:161;;18168:10;18163:3;18159:20;18156:1;18149:31;18203:4;18200:1;18193:15;18231:4;18228:1;18221:15;18257:407;18459:2;18441:21;;;18498:2;18478:18;;;18471:30;18537:34;18532:2;18517:18;;18510:62;-1:-1:-1;;;18603:2:202;18588:18;;18581:41;18654:3;18639:19;;18257:407::o;19717:125::-;19782:9;;;19803:10;;;19800:36;;;19816:18;;:::i;20661:544::-;20762:2;20757:3;20754:11;20751:448;;;20798:1;20823:5;20819:2;20812:17;20868:4;20864:2;20854:19;20938:2;20926:10;20922:19;20919:1;20915:27;20909:4;20905:38;20974:4;20962:10;20959:20;20956:47;;;-1:-1:-1;20997:4:202;20956:47;21052:2;21047:3;21043:12;21040:1;21036:20;21030:4;21026:31;21016:41;;21107:82;21125:2;21118:5;21115:13;21107:82;;;21170:17;;;21151:1;21140:13;21107:82;;21381:1348;21505:3;21499:10;-1:-1:-1;;;;;21524:6:202;21521:30;21518:56;;;21554:18;;:::i;:::-;21583:96;21672:6;21632:38;21664:4;21658:11;21632:38;:::i;:::-;21626:4;21583:96;:::i;:::-;21734:4;;21798:2;21787:14;;21815:1;21810:662;;;;22516:1;22533:6;22530:89;;;-1:-1:-1;22585:19:202;;;22579:26;22530:89;-1:-1:-1;;21338:1:202;21334:11;;;21330:24;21326:29;21316:40;21362:1;21358:11;;;21313:57;22632:81;;21780:943;;21810:662;20608:1;20601:14;;;20645:4;20632:18;;-1:-1:-1;;21846:20:202;;;21963:236;21977:7;21974:1;21971:14;21963:236;;;22066:19;;;22060:26;22045:42;;22158:27;;;;22126:1;22114:14;;;;21993:19;;21963:236;;;21967:3;22227:6;22218:7;22215:19;22212:201;;;22288:19;;;22282:26;-1:-1:-1;;22371:1:202;22367:14;;;22383:3;22363:24;22359:37;22355:42;22340:58;22325:74;;22212:201;-1:-1:-1;;;;;22459:1:202;22443:14;;;22439:22;22426:36;;-1:-1:-1;21381:1348:202:o;22734:396::-;-1:-1:-1;;;;;22931:32:202;;22913:51;;23007:14;;23000:22;22995:2;22980:18;;22973:50;23059:2;23054;23039:18;;23032:30;;;-1:-1:-1;;23079:45:202;;23105:18;;23097:6;23079:45;:::i;23135:127::-;23196:10;23191:3;23187:20;23184:1;23177:31;23227:4;23224:1;23217:15;23251:4;23248:1;23241:15;23267:577;23480:3;23512:26;23508:31;23581:2;23572:6;23568:2;23564:15;23560:24;23555:3;23548:37;23636:2;23627:6;23623:2;23619:15;23615:24;23610:2;23605:3;23601:12;23594:46;;23670:6;23665:2;23660:3;23656:12;23649:28;23706:6;23700:13;23722:75;23790:6;23785:2;23780:3;23776:12;23769:4;23761:6;23757:17;23722:75;:::i;:::-;23817:16;;;;23835:2;23813:25;;23267:577;-1:-1:-1;;;;;23267:577:202:o;23849:289::-;24024:6;24013:9;24006:25;24067:2;24062;24051:9;24047:18;24040:30;23987:4;24087:45;24128:2;24117:9;24113:18;24105:6;24087:45;:::i;24143:648::-;24222:6;24275:2;24263:9;24254:7;24250:23;24246:32;24243:52;;;24291:1;24288;24281:12;24243:52;24324:9;24318:16;-1:-1:-1;;;;;24349:6:202;24346:30;24343:50;;;24389:1;24386;24379:12;24343:50;24412:22;;24465:4;24457:13;;24453:27;-1:-1:-1;24443:55:202;;24494:1;24491;24484:12;24443:55;24523:2;24517:9;24548:49;24564:32;24593:2;24564:32;:::i;24548:49::-;24620:2;24613:5;24606:17;24660:7;24655:2;24650;24646;24642:11;24638:20;24635:33;24632:53;;;24681:1;24678;24671:12;24632:53;24694:67;24758:2;24753;24746:5;24742:14;24737:2;24733;24729:11;24694:67;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "initialize(string,string,address)": "077f224a",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,bytes32,bool,bytes)": "af255b61",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Compatible with ERC721 approve.\",\"params\":{\"operator\":\"The address to approve for `tokenId`\",\"tokenId\":\"The tokenId to approve\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"constructor\":{\"details\":\"initialize (= lock) base implementation contract on deployment\"},\"getApproved(uint256)\":{\"details\":\"Compatible with ERC721 getApproved.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address of the operator for `tokenId`\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"initialize(string,string,address)\":{\"params\":{\"name_\":\"The name of the token\",\"newOwner_\":\"The owner of the token\",\"symbol_\":\"The symbol of the token\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"name()\":{\"details\":\"Returns the name of the token.\",\"returns\":{\"_0\":\"The name of the token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Compatible with ERC721 ownerOf.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The owner of the tokenId\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Compatible with ERC721 safeTransferFrom. Using force=false so that no EOA and only contracts supporting LSP1 interface may receive the tokenId.\",\"params\":{\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Compatible with ERC721 safeTransferFrom.\",\"params\":{\"data\":\"The data to be sent with the transfer\",\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\",\"returns\":{\"_0\":\"The symbol of the token\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Compatible with ERC721 transferFrom. Using force=true so that EOA and any contract may receive the tokenId.\",\"params\":{\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"To provide compatibility with indexing ERC721 events.\"},\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"},\"Transfer(address,address,uint256)\":{\"notice\":\"To provide compatibility with indexing ERC721 events.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"initialize(string,string,address)\":{\"notice\":\"Sets the name, the symbol and the owner of the token\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInit.sol\":\"LSP8CompatibleERC721MintableInit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/ILSP4Compatibility.sol\":{\"keccak256\":\"0xb75cd25d17cca0c09be8a2f5122ac47f8ec2846006faf357e81bb730bcd929a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://097258f718d8ce024699b2866c20c4627ee139dd419eb1ab8155ee28dd1511b6\",\"dweb:/ipfs/QmbFXPazAHPpEutFrYfVadCXW2tCbQAXmW7MB5eQuFW5Xa\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Compatibility.sol\":{\"keccak256\":\"0xfa8b7b6c2b8823582be57f824a91af769c04669dee6c24876b936b23e57a0fe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1df074acad92ab54dcaedf31c5841803599ace132cf3ab0106eb6f815d2ce921\",\"dweb:/ipfs/QmRNTB7WK8YfHUBLui4sppnKJV11sGRCTzfHMT3gCH1SPh\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol\":{\"keccak256\":\"0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2\",\"dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol\":{\"keccak256\":\"0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338\",\"dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/ILSP8CompatibleERC721.sol\":{\"keccak256\":\"0x5d4dfd7c62220f7dc4240c115f5f71301001d3791add5f0468d845ff0de163aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137cbe272708a38e196611e28452cfa61e75005b5050800475ea51397a3e5680\",\"dweb:/ipfs/QmWtmpnFyfVfw3W2X841GKoy2gQcM1DPHHRLymc8112UG7\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol\":{\"keccak256\":\"0x3850bd08bd66a5f79d905827991f5bed9f34325a2435b74e53c726d079e57e6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b43b615ff66cfa94f97c3a46d6cebe7769143c5fdd4db1727a69ff5259ff8a6\",\"dweb:/ipfs/QmYidLQ77X7T1q4BaQgsw9gVd5mRiSqzxgysQqkfMaSB7u\"]},\"contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInit.sol\":{\"keccak256\":\"0xe993bf2d3270334e58d603f94b708158e24161307e3cb431246a3088ff964b06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b36c57806883e840457de68a1fd67b08495855f7f54c94208060022a446ba530\",\"dweb:/ipfs/Qmbn4kRG2HUbaycR73MkRYvhS49BAaN4hZiGoRceyiA5Js\"]},\"contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInitAbstract.sol\":{\"keccak256\":\"0x9f53d7538b68546957b1ee475298c9d9bb8fa9260ab7fe15f9c12c66de444154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715ba8e3384f9140a28b7e5bc6815d01fc28ea8b0417e3a2ba5c8b8d4c7e931f\",\"dweb:/ipfs/QmXBdtsFWEzNHS6aTQMmnUthfSUiVnxkT6qr7jajWrGzfY\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol\":{\"keccak256\":\"0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551\",\"dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Compatible with ERC721 approve.",
            "params": {
              "operator": "The address to approve for `tokenId`",
              "tokenId": "The tokenId to approve"
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "constructor": {
            "details": "initialize (= lock) base implementation contract on deployment"
          },
          "getApproved(uint256)": {
            "details": "Compatible with ERC721 getApproved.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address of the operator for `tokenId`"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "initialize(string,string,address)": {
            "params": {
              "name_": "The name of the token",
              "newOwner_": "The owner of the token",
              "symbol_": "The symbol of the token"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "name()": {
            "details": "Returns the name of the token.",
            "returns": {
              "_0": "The name of the token"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "Compatible with ERC721 ownerOf.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The owner of the tokenId"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Compatible with ERC721 safeTransferFrom. Using force=false so that no EOA and only contracts supporting LSP1 interface may receive the tokenId.",
            "params": {
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Compatible with ERC721 safeTransferFrom.",
            "params": {
              "data": "The data to be sent with the transfer",
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name.",
            "returns": {
              "_0": "The symbol of the token"
            }
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Compatible with ERC721 transferFrom. Using force=true so that EOA and any contract may receive the tokenId.",
            "params": {
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "initialize(string,string,address)": {
            "notice": "Sets the name, the symbol and the owner of the token"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInit.sol": "LSP8CompatibleERC721MintableInit"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/ILSP4Compatibility.sol": {
        "keccak256": "0xb75cd25d17cca0c09be8a2f5122ac47f8ec2846006faf357e81bb730bcd929a9",
        "urls": [
          "bzz-raw://097258f718d8ce024699b2866c20c4627ee139dd419eb1ab8155ee28dd1511b6",
          "dweb:/ipfs/QmbFXPazAHPpEutFrYfVadCXW2tCbQAXmW7MB5eQuFW5Xa"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Compatibility.sol": {
        "keccak256": "0xfa8b7b6c2b8823582be57f824a91af769c04669dee6c24876b936b23e57a0fe8",
        "urls": [
          "bzz-raw://1df074acad92ab54dcaedf31c5841803599ace132cf3ab0106eb6f815d2ce921",
          "dweb:/ipfs/QmRNTB7WK8YfHUBLui4sppnKJV11sGRCTzfHMT3gCH1SPh"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol": {
        "keccak256": "0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792",
        "urls": [
          "bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2",
          "dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol": {
        "keccak256": "0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968",
        "urls": [
          "bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338",
          "dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/ILSP8CompatibleERC721.sol": {
        "keccak256": "0x5d4dfd7c62220f7dc4240c115f5f71301001d3791add5f0468d845ff0de163aa",
        "urls": [
          "bzz-raw://137cbe272708a38e196611e28452cfa61e75005b5050800475ea51397a3e5680",
          "dweb:/ipfs/QmWtmpnFyfVfw3W2X841GKoy2gQcM1DPHHRLymc8112UG7"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol": {
        "keccak256": "0x3850bd08bd66a5f79d905827991f5bed9f34325a2435b74e53c726d079e57e6e",
        "urls": [
          "bzz-raw://6b43b615ff66cfa94f97c3a46d6cebe7769143c5fdd4db1727a69ff5259ff8a6",
          "dweb:/ipfs/QmYidLQ77X7T1q4BaQgsw9gVd5mRiSqzxgysQqkfMaSB7u"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInit.sol": {
        "keccak256": "0xe993bf2d3270334e58d603f94b708158e24161307e3cb431246a3088ff964b06",
        "urls": [
          "bzz-raw://b36c57806883e840457de68a1fd67b08495855f7f54c94208060022a446ba530",
          "dweb:/ipfs/Qmbn4kRG2HUbaycR73MkRYvhS49BAaN4hZiGoRceyiA5Js"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInitAbstract.sol": {
        "keccak256": "0x9f53d7538b68546957b1ee475298c9d9bb8fa9260ab7fe15f9c12c66de444154",
        "urls": [
          "bzz-raw://715ba8e3384f9140a28b7e5bc6815d01fc28ea8b0417e3a2ba5c8b8d4c7e931f",
          "dweb:/ipfs/QmXBdtsFWEzNHS6aTQMmnUthfSUiVnxkT6qr7jajWrGzfY"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol": {
        "keccak256": "0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45",
        "urls": [
          "bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551",
          "dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInit.sol",
    "id": 12826,
    "exportedSymbols": {
      "LSP8CompatibleERC721MintableInit": [
        12825
      ],
      "LSP8CompatibleERC721MintableInitAbstract": [
        12875
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:851:78",
    "nodes": [
      {
        "id": 12791,
        "nodeType": "PragmaDirective",
        "src": "32:24:78",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 12793,
        "nodeType": "ImportDirective",
        "src": "69:110:78",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/presets/LSP8CompatibleERC721MintableInitAbstract.sol",
        "file": "./LSP8CompatibleERC721MintableInitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12826,
        "sourceUnit": 12876,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12792,
              "name": "LSP8CompatibleERC721MintableInitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12875,
              "src": "82:40:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12825,
        "nodeType": "ContractDefinition",
        "src": "181:701:78",
        "nodes": [
          {
            "id": 12803,
            "nodeType": "FunctionDefinition",
            "src": "364:53:78",
            "nodes": [],
            "body": {
              "id": 12802,
              "nodeType": "Block",
              "src": "378:39:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12799,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43990,
                      "src": "388:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "388:22:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12801,
                  "nodeType": "ExpressionStatement",
                  "src": "388:22:78"
                }
              ]
            },
            "documentation": {
              "id": 12796,
              "nodeType": "StructuredDocumentation",
              "src": "273:86:78",
              "text": " @dev initialize (= lock) base implementation contract on deployment"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:78"
            },
            "returnParameters": {
              "id": 12798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "378:0:78"
            },
            "scope": 12825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12824,
            "nodeType": "FunctionDefinition",
            "src": "642:238:78",
            "nodes": [],
            "body": {
              "id": 12823,
              "nodeType": "Block",
              "src": "784:96:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12818,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12806,
                        "src": "847:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 12819,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12808,
                        "src": "854:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 12820,
                        "name": "newOwner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12810,
                        "src": "863:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12815,
                        "name": "LSP8CompatibleERC721MintableInitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12875,
                        "src": "794:40:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP8CompatibleERC721MintableInitAbstract_$12875_$",
                          "typeString": "type(contract LSP8CompatibleERC721MintableInitAbstract)"
                        }
                      },
                      "id": 12817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "835:11:78",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12853,
                      "src": "794:52:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address)"
                      }
                    },
                    "id": 12821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:79:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12822,
                  "nodeType": "ExpressionStatement",
                  "src": "794:79:78"
                }
              ]
            },
            "documentation": {
              "id": 12804,
              "nodeType": "StructuredDocumentation",
              "src": "423:214:78",
              "text": " @notice Sets the name, the symbol and the owner of the token\n @param name_ The name of the token\n @param symbol_ The symbol of the token\n @param newOwner_ The owner of the token"
            },
            "functionSelector": "077f224a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12813,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12812,
                  "name": "initializer",
                  "nameLocations": [
                    "772:11:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43911,
                  "src": "772:11:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "772:11:78"
              }
            ],
            "name": "initialize",
            "nameLocation": "651:10:78",
            "parameters": {
              "id": 12811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12806,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "685:5:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 12824,
                  "src": "671:19:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12805,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12808,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "714:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 12824,
                  "src": "700:21:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12807,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12810,
                  "mutability": "mutable",
                  "name": "newOwner_",
                  "nameLocation": "739:9:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 12824,
                  "src": "731:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:93:78"
            },
            "returnParameters": {
              "id": 12814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:78"
            },
            "scope": 12825,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12794,
              "name": "LSP8CompatibleERC721MintableInitAbstract",
              "nameLocations": [
                "226:40:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12875,
              "src": "226:40:78"
            },
            "id": 12795,
            "nodeType": "InheritanceSpecifier",
            "src": "226:40:78"
          }
        ],
        "canonicalName": "LSP8CompatibleERC721MintableInit",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12825,
          12875,
          12470,
          4059,
          11104,
          11044,
          11225,
          9968,
          4296,
          43546,
          43508,
          4008,
          43840,
          46531,
          46594,
          43687,
          43991
        ],
        "name": "LSP8CompatibleERC721MintableInit",
        "nameLocation": "190:32:78",
        "scope": 12826,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 78
}