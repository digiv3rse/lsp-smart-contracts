{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupplyCap_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CappedSupplyCannotMintOverCap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CappedSupplyRequired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenSupplyCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620026423803806200264283398101604081905262000034916200034a565b80848484828282806001600160a01b038116620000a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840160405180910390fd5b620000bc81620001bd60201b620009631760201c565b50620001137feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b8152506200022460201b620009c81760201c565b6200014d7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b846200022460201b620009c81760201c565b620001877f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b836200022460201b620009c81760201c565b50505050505080600003620001af5760405163038d9fc360e41b815260040160405180910390fd5b600755506200056d92505050565b6000546001600160a01b038281169116146200022157600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505b50565b60008281526001602052604090206200023e82826200046c565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405162000271919062000538565b60405180910390a25050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002b057818101518382015260200162000296565b50506000910152565b600082601f830112620002cb57600080fd5b81516001600160401b0380821115620002e857620002e86200027d565b604051601f8301601f19908116603f011681019082821181831017156200031357620003136200027d565b816040528381528660208588010111156200032d57600080fd5b6200034084602083016020890162000293565b9695505050505050565b600080600080608085870312156200036157600080fd5b84516001600160401b03808211156200037957600080fd5b6200038788838901620002b9565b955060208701519150808211156200039e57600080fd5b50620003ad87828801620002b9565b604087015190945090506001600160a01b0381168114620003cd57600080fd5b6060959095015193969295505050565b600181811c90821680620003f257607f821691505b6020821081036200041357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200046757600081815260208120601f850160051c81016020861015620004425750805b601f850160051c820191505b8181101562000463578281556001016200044e565b5050505b505050565b81516001600160401b038111156200048857620004886200027d565b620004a081620004998454620003dd565b8462000419565b602080601f831160018114620004d85760008415620004bf5750858301515b600019600386901b1c1916600185901b17855562000463565b600085815260208120601f198616915b828110156200050957888601518255948401946001909101908401620004e8565b5085821015620005285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200055981604085016020870162000293565b601f01601f19169190910160400192915050565b6120c5806200057d6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063511b6952116100b85780637e87632c1161007c5780637e87632c146102985780637f23690c146102ab5780638da5cb5b146102be578063a3b261f2146102cf578063cf5182ba146102ef578063f2fde38b1461030257600080fd5b8063511b69521461024257806352058d8a1461025557806354f6127f1461025d57806370a082311461027d578063715018a61461029057600080fd5b8063217b2270116100ff578063217b2270146101b15780632a3654a4146101dc5780632cfd3005146101ef57806349a6078d146102025780634e3e6e9c1461022257600080fd5b806301ffc9a71461013c57806308a1eee1146101645780630b0c6d821461017957806314a6e2931461018c57806318160ddd1461019f575b600080fd5b61014f61014a36600461173f565b610315565b60405190151581526020015b60405180910390f35b610177610172366004611769565b610340565b005b61017761018736600461179e565b610372565b61017761019a366004611997565b61041f565b6002545b60405190815260200161015b565b6101c46101bf366004611769565b6104ab565b6040516001600160a01b03909116815260200161015b565b61014f6101ea36600461179e565b6104e4565b6101776101fd36600461179e565b610500565b610215610210366004611769565b61053e565b60405161015b91906119fb565b610235610230366004611a48565b610560565b60405161015b9190611acd565b610177610250366004611b3f565b610614565b6007546101a3565b61027061026b366004611769565b610663565b60405161015b9190611bb8565b6101a361028b366004611bcb565b61066e565b61017761068f565b6101776102a6366004611caa565b6106a3565b6101776102b9366004611d6f565b610792565b6000546001600160a01b03166101c4565b6102e26102dd366004611bcb565b6107a4565b60405161015b9190611dac565b6101776102fd36600461179e565b6107c8565b610177610310366004611bcb565b6108f1565b60006001600160e01b0319821663622e7a0160e01b148061033a575061033a82610a1d565b92915050565b61036f816040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610a52565b50565b600061037d826104ab565b9050336001600160a01b03821681146103c857604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b0384166103ef57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361040e5750505050565b610419848385610b18565b50505050565b610427610ba9565b805182511461045657815181516040516321d1e13360e11b8152600481019290925260248201526044016103bf565b60005b82518110156104a65761049e83828151811061047757610477611de4565b602002602001015183838151811061049157610491611de4565b6020026020010151610c12565b600101610459565b505050565b6000818152600360205260408120546001600160a01b03168061033a57604051635747cd1b60e11b8152600481018490526024016103bf565b60006104ef82610cfa565b6104f98383610d32565b9392505050565b61053a82826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610d7b565b5050565b606061054982610cfa565b600082815260056020526040902061033a90610db7565b6060815167ffffffffffffffff81111561057c5761057c6117c8565b6040519080825280602002602001820160405280156105af57816020015b606081526020019060019003908161059a5790505b50905060005b825181101561060e576105e08382815181106105d3576105d3611de4565b6020026020010151610dc4565b8282815181106105f2576105f2611de4565b60200260200101819052506106078160010190565b90506105b5565b50919050565b3361061f8185610d32565b61064e57604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016103bf565b61065b8686868686610e66565b505050505050565b606061033a82610dc4565b6001600160a01b038116600090815260046020526040812061033a90610ff0565b610697610ba9565b6106a16000610963565b565b84518451811415806106b6575083518114155b806106c2575082518114155b806106ce575081518114155b156106ec576040516393a8311960e01b815260040160405180910390fd5b60005b818110156107895761078187828151811061070c5761070c611de4565b602002602001015187838151811061072657610726611de4565b602002602001015187848151811061074057610740611de4565b602002602001015187858151811061075a5761075a611de4565b602002602001015187868151811061077457610774611de4565b6020026020010151610614565b6001016106ef565b50505050505050565b61079a610ba9565b61053a8282610c12565b6001600160a01b038116600090815260046020526040902060609061033a90610ffa565b60006107d3826104ab565b9050336001600160a01b038216811461081957604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103bf565b6001600160a01b03841661084057604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361085f5750505050565b60008381526005602052604081206108779086611005565b9050806108a9576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016103bf565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b6108f9610ba9565b6001600160a01b03811661095e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103bf565b61036f815b6000546001600160a01b0382811691161461036f57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008281526001602052604090206109e08282611e74565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610a119190611bb8565b60405180910390a25050565b60006001600160e01b03198216631c537ddf60e21b148061033a57506301ffc9a760e01b6001600160e01b031983161461033a565b6000610a5d836104ab565b905033600160026000828254610a739190611f4a565b90915550610a839050828561101a565b6001600160a01b0382166000908152600460205260409020610aa59085611068565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610b0390869085908a90611f5d565b60405180910390a46104198260008686611074565b6000818152600560205260408120610b309085611148565b905080610b62576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016103bf565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b33610bbc6000546001600160a01b031690565b6001600160a01b0316146106a15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103bf565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610c52576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610c9257604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610caa8282611e74565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610ceb57610ce683600061010061115d565b610ced565b825b604051610a119190611bb8565b6000818152600360205260409020546001600160a01b031661036f57604051635747cd1b60e11b8152600481018290526024016103bf565b600080610d3e836104ab565b9050806001600160a01b0316846001600160a01b03161480610d7357506000838152600560205260409020610d73908561126a565b949350505050565b600754600254610d8c906001611f92565b1115610dab5760405163e8ba229160e01b815260040160405180910390fd5b6104198484848461128c565b606060006104f98361139f565b6000818152600160205260409020805460609190610de190611dfa565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0d90611dfa565b8015610e5a5780601f10610e2f57610100808354040283529160200191610e5a565b820191906000526020600020905b815481529060010190602001808311610e3d57829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610e9857604051635d67d6c160e01b815260040160405180910390fd5b6000610ea3846104ab565b9050856001600160a01b0316816001600160a01b031614610ef157604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016103bf565b6001600160a01b038516610f18576040516324ecef4d60e01b815260040160405180910390fd5b33610f23878661101a565b6001600160a01b0387166000908152600460205260409020610f459086611068565b506001600160a01b0386166000908152600460205260409020610f6890866113fa565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610fcf9086908a908a90611f5d565b60405180910390a4610fe387878786611074565b6107898787878787611406565b600061033a825490565b606061033a8261139f565b60006104f9836001600160a01b03841661153e565b60008181526005602052604081209061103282610ff0565b905060005b8181101561106157600061104b848261158d565b9050611058818787610b18565b50600101611037565b5050505050565b60006104f98383611599565b61108584631aed5a8560e21b61168c565b15610419576000848484846040516020016110a39493929190611fa5565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611101907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401611ff2565b6000604051808303816000875af1158015611120573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261065b919081019061200b565b60006104f9836001600160a01b038416611599565b60608161116b81601f611f92565b10156111aa5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103bf565b6111b48284611f92565b845110156111f85760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103bf565b6060821580156112175760405191506000825260208201604052611261565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611250578051835260209283019201611238565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b038116600090815260018301602052604081205415156104f9565b6001600160a01b0384166112b3576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b0316156112ec576040516334c7b51160e01b8152600481018490526024016103bf565b336001600260008282546113009190611f92565b90915550506001600160a01b038516600090815260046020526040902061132790856113fa565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061138990869089908990611f5d565b60405180910390a4611061600086868686611406565b606081600001805480602002602001604051908101604052809291908181526020018280548015610e5a57602002820191906000526020600020905b8154815260200190600101908083116113db5750505050509050919050565b60006104f9838361153e565b61141784631aed5a8560e21b61168c565b156114e1576000858585846040516020016114359493929190611fa5565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611493907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401611ff2565b6000604051808303816000875af11580156114b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114da919081019061200b565b5050611061565b81611061576001600160a01b0384163b1561151a57604051634349776d60e01b81526001600160a01b03851660048201526024016103bf565b604051630317313760e01b81526001600160a01b03851660048201526024016103bf565b60008181526001830160205260408120546115855750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561033a565b50600061033a565b60006104f98383611715565b600081815260018301602052604081205480156116825760006115bd600183611f4a565b85549091506000906115d190600190611f4a565b90508181146116365760008660000182815481106115f1576115f1611de4565b906000526020600020015490508087600001848154811061161457611614611de4565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061164757611647612079565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061033a565b600091505061033a565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156116fe575060208210155b801561170a5750600081115b979650505050505050565b600082600001828154811061172c5761172c611de4565b9060005260206000200154905092915050565b60006020828403121561175157600080fd5b81356001600160e01b0319811681146104f957600080fd5b60006020828403121561177b57600080fd5b5035919050565b80356001600160a01b038116811461179957600080fd5b919050565b600080604083850312156117b157600080fd5b6117ba83611782565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611807576118076117c8565b604052919050565b600067ffffffffffffffff821115611829576118296117c8565b5060051b60200190565b600082601f83011261184457600080fd5b813560206118596118548361180f565b6117de565b82815260059290921b8401810191818101908684111561187857600080fd5b8286015b84811015611893578035835291830191830161187c565b509695505050505050565b600067ffffffffffffffff8211156118b8576118b86117c8565b50601f01601f191660200190565b600082601f8301126118d757600080fd5b81356118e56118548261189e565b8181528460208386010111156118fa57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261192857600080fd5b813560206119386118548361180f565b82815260059290921b8401810191818101908684111561195757600080fd5b8286015b8481101561189357803567ffffffffffffffff81111561197b5760008081fd5b6119898986838b01016118c6565b84525091830191830161195b565b600080604083850312156119aa57600080fd5b823567ffffffffffffffff808211156119c257600080fd5b6119ce86838701611833565b935060208501359150808211156119e457600080fd5b506119f185828601611917565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611a3c5783516001600160a01b031683529284019291840191600101611a17565b50909695505050505050565b600060208284031215611a5a57600080fd5b813567ffffffffffffffff811115611a7157600080fd5b610d7384828501611833565b60005b83811015611a98578181015183820152602001611a80565b50506000910152565b60008151808452611ab9816020860160208601611a7d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b2257603f19888603018452611b10858351611aa1565b94509285019290850190600101611af4565b5092979650505050505050565b8035801515811461179957600080fd5b600080600080600060a08688031215611b5757600080fd5b611b6086611782565b9450611b6e60208701611782565b935060408601359250611b8360608701611b2f565b9150608086013567ffffffffffffffff811115611b9f57600080fd5b611bab888289016118c6565b9150509295509295909350565b6020815260006104f96020830184611aa1565b600060208284031215611bdd57600080fd5b6104f982611782565b600082601f830112611bf757600080fd5b81356020611c076118548361180f565b82815260059290921b84018101918181019086841115611c2657600080fd5b8286015b8481101561189357611c3b81611782565b8352918301918301611c2a565b600082601f830112611c5957600080fd5b81356020611c696118548361180f565b82815260059290921b84018101918181019086841115611c8857600080fd5b8286015b8481101561189357611c9d81611b2f565b8352918301918301611c8c565b600080600080600060a08688031215611cc257600080fd5b853567ffffffffffffffff80821115611cda57600080fd5b611ce689838a01611be6565b96506020880135915080821115611cfc57600080fd5b611d0889838a01611be6565b95506040880135915080821115611d1e57600080fd5b611d2a89838a01611833565b94506060880135915080821115611d4057600080fd5b611d4c89838a01611c48565b93506080880135915080821115611d6257600080fd5b50611bab88828901611917565b60008060408385031215611d8257600080fd5b82359150602083013567ffffffffffffffff811115611da057600080fd5b6119f1858286016118c6565b6020808252825182820181905260009190848201906040850190845b81811015611a3c57835183529284019291840191600101611dc8565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611e0e57607f821691505b60208210810361060e57634e487b7160e01b600052602260045260246000fd5b601f8211156104a657600081815260208120601f850160051c81016020861015611e555750805b601f850160051c820191505b8181101561065b57828155600101611e61565b815167ffffffffffffffff811115611e8e57611e8e6117c8565b611ea281611e9c8454611dfa565b84611e2e565b602080601f831160018114611ed75760008415611ebf5750858301515b600019600386901b1c1916600185901b17855561065b565b600085815260208120601f198616915b82811015611f0657888601518255948401946001909101908401611ee7565b5085821015611f245787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8181038181111561033a5761033a611f34565b6001600160a01b03841681528215156020820152606060408201819052600090611f8990830184611aa1565b95945050505050565b8082018082111561033a5761033a611f34565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251611fe2816048850160208701611a7d565b9190910160480195945050505050565b828152604060208201526000610d736040830184611aa1565b60006020828403121561201d57600080fd5b815167ffffffffffffffff81111561203457600080fd5b8201601f8101841361204557600080fd5b80516120536118548261189e565b81815285602083850101111561206857600080fd5b611f89826020830160208601611a7d565b634e487b7160e01b600052603160045260246000fdfea264697066735822122059c82dc680c13b30fcd1d78ad79e5ff578fcbb025b276359c6b3d63633c3221e64736f6c63430008110033",
    "sourceMap": "291:504:135:-:0;;;349:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;560:15;516:5;523:7;532:9;516:5;523:7;532:9;;-1:-1:-1;;;;;812:22:173;;804:73;;;;-1:-1:-1;;;804:73:173;;2103:2:202;804:73:173;;;2085:21:202;2142:2;2122:18;;;2115:30;2181:34;2161:18;;;2154:62;-1:-1:-1;;;2232:18:202;;;2225:36;2278:19;;804:73:173;;;;;;;;887:32;910:8;887:22;;;;;:32;;:::i;:::-;764:162;1016:78:30::1;231:66:29;1031:29:30;;1062:31;;;;;;;;;;;;;-1:-1:-1::0;;;1062:31:30::1;;::::0;1016:14:::1;;;;;:78;;:::i;:::-;1105:50;476:66:29;1120:20:30;;1148:5;1105:14;;;;;:50;;:::i;:::-;1165:54;619:66:29;1180:22:30;;1210:7;1165:14;;;;;:54;;:::i;:::-;827:399:::0;;;967:159:65;;;691:15:70;710:1;691:20;687:84;;734:26;;-1:-1:-1;;;734:26:70;;;;;;;;;;;687:84;781:15;:33;-1:-1:-1;291:504:135;;-1:-1:-1;;;291:504:135;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;2012:165;1948:235;:::o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;14:127:202:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:202;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:202;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:202;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:202:o;1105:791::-;1222:6;1230;1238;1246;1299:3;1287:9;1278:7;1274:23;1270:33;1267:53;;;1316:1;1313;1306:12;1267:53;1343:16;;-1:-1:-1;;;;;1408:14:202;;;1405:34;;;1435:1;1432;1425:12;1405:34;1458:61;1511:7;1502:6;1491:9;1487:22;1458:61;:::i;:::-;1448:71;;1565:2;1554:9;1550:18;1544:25;1528:41;;1594:2;1584:8;1581:16;1578:36;;;1610:1;1607;1600:12;1578:36;;1633:63;1688:7;1677:8;1666:9;1662:24;1633:63;:::i;:::-;1739:2;1724:18;;1718:25;1623:73;;-1:-1:-1;1718:25:202;-1:-1:-1;;;;;;1772:31:202;;1762:42;;1752:70;;1818:1;1815;1808:12;1752:70;1886:2;1871:18;;;;1865:25;1105:791;;;;-1:-1:-1;;;1105:791:202:o;2308:380::-;2387:1;2383:12;;;;2430;;;2451:61;;2505:4;2497:6;2493:17;2483:27;;2451:61;2558:2;2550:6;2547:14;2527:18;2524:38;2521:161;;2604:10;2599:3;2595:20;2592:1;2585:31;2639:4;2636:1;2629:15;2667:4;2664:1;2657:15;2521:161;;2308:380;;;:::o;2818:544::-;2919:2;2914:3;2911:11;2908:448;;;2955:1;2980:5;2976:2;2969:17;3025:4;3021:2;3011:19;3095:2;3083:10;3079:19;3076:1;3072:27;3066:4;3062:38;3131:4;3119:10;3116:20;3113:47;;;-1:-1:-1;3154:4:202;3113:47;3209:2;3204:3;3200:12;3197:1;3193:20;3187:4;3183:31;3173:41;;3264:82;3282:2;3275:5;3272:13;3264:82;;;3327:17;;;3308:1;3297:13;3264:82;;;3268:3;;;2908:448;2818:544;;;:::o;3538:1348::-;3656:10;;-1:-1:-1;;;;;3678:30:202;;3675:56;;;3711:18;;:::i;:::-;3740:96;3829:6;3789:38;3821:4;3815:11;3789:38;:::i;:::-;3783:4;3740:96;:::i;:::-;3891:4;;3955:2;3944:14;;3972:1;3967:662;;;;4673:1;4690:6;4687:89;;;-1:-1:-1;4742:19:202;;;4736:26;4687:89;-1:-1:-1;;3495:1:202;3491:11;;;3487:24;3483:29;3473:40;3519:1;3515:11;;;3470:57;4789:81;;3937:943;;3967:662;2765:1;2758:14;;;2802:4;2789:18;;-1:-1:-1;;4003:20:202;;;4120:236;4134:7;4131:1;4128:14;4120:236;;;4223:19;;;4217:26;4202:42;;4315:27;;;;4283:1;4271:14;;;;4150:19;;4120:236;;;4124:3;4384:6;4375:7;4372:19;4369:201;;;4445:19;;;4439:26;-1:-1:-1;;4528:1:202;4524:14;;;4540:3;4520:24;4516:37;4512:42;4497:58;4482:74;;4369:201;-1:-1:-1;;;;;4616:1:202;4600:14;;;4596:22;4583:36;;-1:-1:-1;3538:1348:202:o;4891:394::-;5038:2;5027:9;5020:21;5001:4;5070:6;5064:13;5113:6;5108:2;5097:9;5093:18;5086:34;5129:79;5201:6;5196:2;5185:9;5181:18;5176:2;5168:6;5164:15;5129:79;:::i;:::-;5269:2;5248:15;-1:-1:-1;;5244:29:202;5229:45;;;;5276:2;5225:54;;4891:394;-1:-1:-1;;4891:394:202:o;:::-;291:504:135;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c8063511b6952116100b85780637e87632c1161007c5780637e87632c146102985780637f23690c146102ab5780638da5cb5b146102be578063a3b261f2146102cf578063cf5182ba146102ef578063f2fde38b1461030257600080fd5b8063511b69521461024257806352058d8a1461025557806354f6127f1461025d57806370a082311461027d578063715018a61461029057600080fd5b8063217b2270116100ff578063217b2270146101b15780632a3654a4146101dc5780632cfd3005146101ef57806349a6078d146102025780634e3e6e9c1461022257600080fd5b806301ffc9a71461013c57806308a1eee1146101645780630b0c6d821461017957806314a6e2931461018c57806318160ddd1461019f575b600080fd5b61014f61014a36600461173f565b610315565b60405190151581526020015b60405180910390f35b610177610172366004611769565b610340565b005b61017761018736600461179e565b610372565b61017761019a366004611997565b61041f565b6002545b60405190815260200161015b565b6101c46101bf366004611769565b6104ab565b6040516001600160a01b03909116815260200161015b565b61014f6101ea36600461179e565b6104e4565b6101776101fd36600461179e565b610500565b610215610210366004611769565b61053e565b60405161015b91906119fb565b610235610230366004611a48565b610560565b60405161015b9190611acd565b610177610250366004611b3f565b610614565b6007546101a3565b61027061026b366004611769565b610663565b60405161015b9190611bb8565b6101a361028b366004611bcb565b61066e565b61017761068f565b6101776102a6366004611caa565b6106a3565b6101776102b9366004611d6f565b610792565b6000546001600160a01b03166101c4565b6102e26102dd366004611bcb565b6107a4565b60405161015b9190611dac565b6101776102fd36600461179e565b6107c8565b610177610310366004611bcb565b6108f1565b60006001600160e01b0319821663622e7a0160e01b148061033a575061033a82610a1d565b92915050565b61036f816040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610a52565b50565b600061037d826104ab565b9050336001600160a01b03821681146103c857604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b0384166103ef57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361040e5750505050565b610419848385610b18565b50505050565b610427610ba9565b805182511461045657815181516040516321d1e13360e11b8152600481019290925260248201526044016103bf565b60005b82518110156104a65761049e83828151811061047757610477611de4565b602002602001015183838151811061049157610491611de4565b6020026020010151610c12565b600101610459565b505050565b6000818152600360205260408120546001600160a01b03168061033a57604051635747cd1b60e11b8152600481018490526024016103bf565b60006104ef82610cfa565b6104f98383610d32565b9392505050565b61053a82826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610d7b565b5050565b606061054982610cfa565b600082815260056020526040902061033a90610db7565b6060815167ffffffffffffffff81111561057c5761057c6117c8565b6040519080825280602002602001820160405280156105af57816020015b606081526020019060019003908161059a5790505b50905060005b825181101561060e576105e08382815181106105d3576105d3611de4565b6020026020010151610dc4565b8282815181106105f2576105f2611de4565b60200260200101819052506106078160010190565b90506105b5565b50919050565b3361061f8185610d32565b61064e57604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016103bf565b61065b8686868686610e66565b505050505050565b606061033a82610dc4565b6001600160a01b038116600090815260046020526040812061033a90610ff0565b610697610ba9565b6106a16000610963565b565b84518451811415806106b6575083518114155b806106c2575082518114155b806106ce575081518114155b156106ec576040516393a8311960e01b815260040160405180910390fd5b60005b818110156107895761078187828151811061070c5761070c611de4565b602002602001015187838151811061072657610726611de4565b602002602001015187848151811061074057610740611de4565b602002602001015187858151811061075a5761075a611de4565b602002602001015187868151811061077457610774611de4565b6020026020010151610614565b6001016106ef565b50505050505050565b61079a610ba9565b61053a8282610c12565b6001600160a01b038116600090815260046020526040902060609061033a90610ffa565b60006107d3826104ab565b9050336001600160a01b038216811461081957604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103bf565b6001600160a01b03841661084057604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b03160361085f5750505050565b60008381526005602052604081206108779086611005565b9050806108a9576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016103bf565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b6108f9610ba9565b6001600160a01b03811661095e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103bf565b61036f815b6000546001600160a01b0382811691161461036f57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008281526001602052604090206109e08282611e74565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610a119190611bb8565b60405180910390a25050565b60006001600160e01b03198216631c537ddf60e21b148061033a57506301ffc9a760e01b6001600160e01b031983161461033a565b6000610a5d836104ab565b905033600160026000828254610a739190611f4a565b90915550610a839050828561101a565b6001600160a01b0382166000908152600460205260409020610aa59085611068565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610b0390869085908a90611f5d565b60405180910390a46104198260008686611074565b6000818152600560205260408120610b309085611148565b905080610b62576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016103bf565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b33610bbc6000546001600160a01b031690565b6001600160a01b0316146106a15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103bf565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610c52576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610c9257604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610caa8282611e74565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610ceb57610ce683600061010061115d565b610ced565b825b604051610a119190611bb8565b6000818152600360205260409020546001600160a01b031661036f57604051635747cd1b60e11b8152600481018290526024016103bf565b600080610d3e836104ab565b9050806001600160a01b0316846001600160a01b03161480610d7357506000838152600560205260409020610d73908561126a565b949350505050565b600754600254610d8c906001611f92565b1115610dab5760405163e8ba229160e01b815260040160405180910390fd5b6104198484848461128c565b606060006104f98361139f565b6000818152600160205260409020805460609190610de190611dfa565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0d90611dfa565b8015610e5a5780601f10610e2f57610100808354040283529160200191610e5a565b820191906000526020600020905b815481529060010190602001808311610e3d57829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610e9857604051635d67d6c160e01b815260040160405180910390fd5b6000610ea3846104ab565b9050856001600160a01b0316816001600160a01b031614610ef157604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016103bf565b6001600160a01b038516610f18576040516324ecef4d60e01b815260040160405180910390fd5b33610f23878661101a565b6001600160a01b0387166000908152600460205260409020610f459086611068565b506001600160a01b0386166000908152600460205260409020610f6890866113fa565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610fcf9086908a908a90611f5d565b60405180910390a4610fe387878786611074565b6107898787878787611406565b600061033a825490565b606061033a8261139f565b60006104f9836001600160a01b03841661153e565b60008181526005602052604081209061103282610ff0565b905060005b8181101561106157600061104b848261158d565b9050611058818787610b18565b50600101611037565b5050505050565b60006104f98383611599565b61108584631aed5a8560e21b61168c565b15610419576000848484846040516020016110a39493929190611fa5565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611101907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401611ff2565b6000604051808303816000875af1158015611120573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261065b919081019061200b565b60006104f9836001600160a01b038416611599565b60608161116b81601f611f92565b10156111aa5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103bf565b6111b48284611f92565b845110156111f85760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103bf565b6060821580156112175760405191506000825260208201604052611261565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611250578051835260209283019201611238565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b038116600090815260018301602052604081205415156104f9565b6001600160a01b0384166112b3576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b0316156112ec576040516334c7b51160e01b8152600481018490526024016103bf565b336001600260008282546113009190611f92565b90915550506001600160a01b038516600090815260046020526040902061132790856113fa565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061138990869089908990611f5d565b60405180910390a4611061600086868686611406565b606081600001805480602002602001604051908101604052809291908181526020018280548015610e5a57602002820191906000526020600020905b8154815260200190600101908083116113db5750505050509050919050565b60006104f9838361153e565b61141784631aed5a8560e21b61168c565b156114e1576000858585846040516020016114359493929190611fa5565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611493907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401611ff2565b6000604051808303816000875af11580156114b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114da919081019061200b565b5050611061565b81611061576001600160a01b0384163b1561151a57604051634349776d60e01b81526001600160a01b03851660048201526024016103bf565b604051630317313760e01b81526001600160a01b03851660048201526024016103bf565b60008181526001830160205260408120546115855750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561033a565b50600061033a565b60006104f98383611715565b600081815260018301602052604081205480156116825760006115bd600183611f4a565b85549091506000906115d190600190611f4a565b90508181146116365760008660000182815481106115f1576115f1611de4565b906000526020600020015490508087600001848154811061161457611614611de4565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061164757611647612079565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061033a565b600091505061033a565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156116fe575060208210155b801561170a5750600081115b979650505050505050565b600082600001828154811061172c5761172c611de4565b9060005260206000200154905092915050565b60006020828403121561175157600080fd5b81356001600160e01b0319811681146104f957600080fd5b60006020828403121561177b57600080fd5b5035919050565b80356001600160a01b038116811461179957600080fd5b919050565b600080604083850312156117b157600080fd5b6117ba83611782565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611807576118076117c8565b604052919050565b600067ffffffffffffffff821115611829576118296117c8565b5060051b60200190565b600082601f83011261184457600080fd5b813560206118596118548361180f565b6117de565b82815260059290921b8401810191818101908684111561187857600080fd5b8286015b84811015611893578035835291830191830161187c565b509695505050505050565b600067ffffffffffffffff8211156118b8576118b86117c8565b50601f01601f191660200190565b600082601f8301126118d757600080fd5b81356118e56118548261189e565b8181528460208386010111156118fa57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261192857600080fd5b813560206119386118548361180f565b82815260059290921b8401810191818101908684111561195757600080fd5b8286015b8481101561189357803567ffffffffffffffff81111561197b5760008081fd5b6119898986838b01016118c6565b84525091830191830161195b565b600080604083850312156119aa57600080fd5b823567ffffffffffffffff808211156119c257600080fd5b6119ce86838701611833565b935060208501359150808211156119e457600080fd5b506119f185828601611917565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611a3c5783516001600160a01b031683529284019291840191600101611a17565b50909695505050505050565b600060208284031215611a5a57600080fd5b813567ffffffffffffffff811115611a7157600080fd5b610d7384828501611833565b60005b83811015611a98578181015183820152602001611a80565b50506000910152565b60008151808452611ab9816020860160208601611a7d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b2257603f19888603018452611b10858351611aa1565b94509285019290850190600101611af4565b5092979650505050505050565b8035801515811461179957600080fd5b600080600080600060a08688031215611b5757600080fd5b611b6086611782565b9450611b6e60208701611782565b935060408601359250611b8360608701611b2f565b9150608086013567ffffffffffffffff811115611b9f57600080fd5b611bab888289016118c6565b9150509295509295909350565b6020815260006104f96020830184611aa1565b600060208284031215611bdd57600080fd5b6104f982611782565b600082601f830112611bf757600080fd5b81356020611c076118548361180f565b82815260059290921b84018101918181019086841115611c2657600080fd5b8286015b8481101561189357611c3b81611782565b8352918301918301611c2a565b600082601f830112611c5957600080fd5b81356020611c696118548361180f565b82815260059290921b84018101918181019086841115611c8857600080fd5b8286015b8481101561189357611c9d81611b2f565b8352918301918301611c8c565b600080600080600060a08688031215611cc257600080fd5b853567ffffffffffffffff80821115611cda57600080fd5b611ce689838a01611be6565b96506020880135915080821115611cfc57600080fd5b611d0889838a01611be6565b95506040880135915080821115611d1e57600080fd5b611d2a89838a01611833565b94506060880135915080821115611d4057600080fd5b611d4c89838a01611c48565b93506080880135915080821115611d6257600080fd5b50611bab88828901611917565b60008060408385031215611d8257600080fd5b82359150602083013567ffffffffffffffff811115611da057600080fd5b6119f1858286016118c6565b6020808252825182820181905260009190848201906040850190845b81811015611a3c57835183529284019291840191600101611dc8565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611e0e57607f821691505b60208210810361060e57634e487b7160e01b600052602260045260246000fd5b601f8211156104a657600081815260208120601f850160051c81016020861015611e555750805b601f850160051c820191505b8181101561065b57828155600101611e61565b815167ffffffffffffffff811115611e8e57611e8e6117c8565b611ea281611e9c8454611dfa565b84611e2e565b602080601f831160018114611ed75760008415611ebf5750858301515b600019600386901b1c1916600185901b17855561065b565b600085815260208120601f198616915b82811015611f0657888601518255948401946001909101908401611ee7565b5085821015611f245787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8181038181111561033a5761033a611f34565b6001600160a01b03841681528215156020820152606060408201819052600090611f8990830184611aa1565b95945050505050565b8082018082111561033a5761033a611f34565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251611fe2816048850160208701611a7d565b9190910160480195945050505050565b828152604060208201526000610d736040830184611aa1565b60006020828403121561201d57600080fd5b815167ffffffffffffffff81111561203457600080fd5b8201601f8101841361204557600080fd5b80516120536118548261189e565b81815285602083850101111561206857600080fd5b611f89826020830160208601611a7d565b634e487b7160e01b600052603160045260246000fdfea264697066735822122059c82dc680c13b30fcd1d78ad79e5ff578fcbb025b276359c6b3d63633c3221e64736f6c63430008110033",
    "sourceMap": "291:504:135:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:253:65;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1193:253:65;;;;;;;;707:86:135;;;;;;:::i;:::-;;:::i;:::-;;3461:587:66;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;4688:25:202;;;4676:2;4661:18;1690:92:66;4542:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4888:32:202;;;4870:51;;4858:2;4843:18;2082:259:66;4724:203:202;4119:188:66;;;;;;:::i;:::-;;:::i;585:116:135:-;;;;;;:::i;:::-;;:::i;4378:174:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;966:103:70:-;1047:15;;966:103;;1058:133:174;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1885:126:66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;601:85;;2412:136:66;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2654:736::-;;;;;;:::i;:::-;;:::i;1419:189:177:-;;;;;;:::i;:::-;;:::i;1193:253:65:-;1340:4;-1:-1:-1;;;;;;1367:32:65;;-1:-1:-1;;;1367:32:65;;:72;;;1403:36;1427:11;1403:23;:36::i;:::-;1360:79;1193:253;-1:-1:-1;;1193:253:65:o;707:86:135:-;755:31;761:7;755:31;;;;;;;;;;;;;-1:-1:-1;;;755:31:135;;;:5;:31::i;:::-;707:86;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;12381:15:202;;;3682:46:66;;;12363:34:202;12413:18;;;12406:34;;;12476:15;;12456:18;;;12449:43;12298:18;;3682:46:66;;;;;;;;3635:104;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;:::-;3535:513;;3461:587;;:::o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;12677:25:202::0;;;;12718:18;;;12711:34;12650:18;;2036:72:174::1;12503:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;4688:25:202;;;4661:18;;2265:31:66;4542:177:202;4119:188:66;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;585:116:135:-;645:49;651:2;655:7;664:4;645:49;;;;;;;;;;;;;-1:-1:-1;;;645:49:135;;;:5;:49::i;:::-;585:116;;:::o;4378:174:66:-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;1400:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;13244:25:202;;;-1:-1:-1;;;;;13305:32:202;;13285:18;;;13278:60;13217:18;;5357:39:66;13070:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;2412:136:66:-:0;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;2654:736::-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;12381:15:202;;;2878:46:66;;;12363:34:202;12413:18;;;12406:34;;;12476:15;;12456:18;;;12449:43;12298:18;;2878:46:66;12123:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;13541:32:202;;3270:48:66;;;13523:51:202;13590:18;;;13583:34;;;13496:18;;3270:48:66;13349:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;13830:2:202;1499:73:177::1;::::0;::::1;13812:21:202::0;13869:2;13849:18;;;13842:30;13908:34;13888:18;;;13881:62;-1:-1:-1;;;13959:18:202;;;13952:36;14005:19;;1499:73:177::1;13628:402:202::0;1499:73:177::1;1582:19;1592:8;1948:235:::0;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;1948:235;:::o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;2907:251::-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;9316:575:66;9394:18;9415:21;9428:7;9415:12;:21::i;:::-;9394:42;-1:-1:-1;9465:10:66;9599:1;9580:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;9611:36:66;;-1:-1:-1;9627:10:66;9639:7;9611:15;:36::i;:::-;-1:-1:-1;;;;;9658:24:66;;;;;;:12;:24;;;;;:40;;9690:7;9658:31;:40::i;:::-;-1:-1:-1;9715:21:66;;;;:12;:21;;;;;;9708:28;;-1:-1:-1;;;;;;9708:28:66;;;9752:64;9728:7;;9715:21;-1:-1:-1;;;;;9752:64:66;;;;;;;9761:8;;9715:21;;9811:4;;9752:64;:::i;:::-;;;;;;;;9827:57;9846:10;9866:1;9870:7;9879:4;9827:18;:57::i;6284:333::-;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;13541:32:202;;6507:42:66;;;13523:51:202;13590:18;;;13583:34;;;13496:18;;6507:42:66;13349:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;1755:10;1744:7;647;673:6;-1:-1:-1;;;;;673:6:177;;601:85;1744:7;-1:-1:-1;;;;;1744:21:177;;1736:66;;;;-1:-1:-1;;;1736:66:177;;17485:2:202;1736:66:177;;;17467:21:202;;;17504:18;;;17497:30;17563:34;17543:18;;;17536:62;17615:18;;1736:66:177;17283:356:202;1524:517:30;1623:31;;;1619:416;;1677:26;;-1:-1:-1;;;1677:26:30;;;;;;;;;;;1619:416;1724:33;;;1720:315;;1780:28;;-1:-1:-1;;;1780:28:30;;;;;;;;;;;1720:315;1839:15;;;;:6;:15;;;;;:27;1857:9;1839:15;:27;:::i;:::-;;1914:7;1885:139;1959:3;1939:9;:16;:23;;:71;;1977:33;1992:9;2003:1;2006:3;1977:14;:33::i;:::-;1939:71;;;1965:9;1939:71;1885:139;;;;;;:::i;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;4688:25:202;;;4661:18;;8149:31:66;4542:177:202;4710:273:66;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;1403:312:70:-;1047:15;;1760::66;;1556:17:70;;1572:1;1556:17;:::i;:::-;:36;1552:109;;;1615:35;;-1:-1:-1;;;1615:35:70;;;;;;;;;;;1552:109;1671:37;1683:2;1687:7;1696:5;1703:4;1671:11;:37::i;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;12381:15:202;;;10476:44:66;;;12363:34:202;12413:18;;;12406:34;;;12476:15;;12456:18;;;12449:43;12298:18;;10476:44:66;12123:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;6538:115:199:-;6601:7;6627:19;6635:3;4444:18;;4362:107;7664:124;7727:16;7762:19;7770:3;7762:7;:19::i;8028:150::-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;6693:933:66:-;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;;;6772:854;;6693:933;;:::o;6109:129:199:-;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;8346:156:199:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;19503:2:202;9631:50:200;;;19485:21:202;19542:2;19522:18;;;19515:30;-1:-1:-1;;;19561:18:202;;;19554:44;19615:18;;9631:50:200;19301:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;19846:2:202;9691:63:200;;;19828:21:202;19885:2;19865:18;;;19858:30;-1:-1:-1;;;19904:18:202;;;19897:47;19961:18;;9691:63:200;19644:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;8425:700:66;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;4688:25:202;;;4661:18;;8701:33:66;4542:177:202;8658:87:66;8774:10;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;5469:109:199:-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;5818:123::-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;12480:681:66:-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;4888:32:202;;12997:55:66;;;4870:51:202;4843:18;;12997:55:66;4724:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;4888:32:202;;13098::66;;;4870:51:202;4843:18;;13098:32:66;4724:203:202;2113:404:199;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;4680:811:1;4846:105;;;-1:-1:-1;;;;;;20284:33:202;;4846:105:1;;;;20266:52:202;;;;4846:105:1;;;;;;;;;;20239:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;4811:118:199:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:202;;497:180;-1:-1:-1;497:180:202:o;682:173::-;750:20;;-1:-1:-1;;;;;799:31:202;;789:42;;779:70;;845:1;842;835:12;779:70;682:173;;;:::o;860:254::-;928:6;936;989:2;977:9;968:7;964:23;960:32;957:52;;;1005:1;1002;995:12;957:52;1028:29;1047:9;1028:29;:::i;:::-;1018:39;1104:2;1089:18;;;;1076:32;;-1:-1:-1;;;860:254:202:o;1119:127::-;1180:10;1175:3;1171:20;1168:1;1161:31;1211:4;1208:1;1201:15;1235:4;1232:1;1225:15;1251:275;1322:2;1316:9;1387:2;1368:13;;-1:-1:-1;;1364:27:202;1352:40;;1422:18;1407:34;;1443:22;;;1404:62;1401:88;;;1469:18;;:::i;:::-;1505:2;1498:22;1251:275;;-1:-1:-1;1251:275:202:o;1531:183::-;1591:4;1624:18;1616:6;1613:30;1610:56;;;1646:18;;:::i;:::-;-1:-1:-1;1691:1:202;1687:14;1703:4;1683:25;;1531:183::o;1719:662::-;1773:5;1826:3;1819:4;1811:6;1807:17;1803:27;1793:55;;1844:1;1841;1834:12;1793:55;1880:6;1867:20;1906:4;1930:60;1946:43;1986:2;1946:43;:::i;:::-;1930:60;:::i;:::-;2024:15;;;2110:1;2106:10;;;;2094:23;;2090:32;;;2055:12;;;;2134:15;;;2131:35;;;2162:1;2159;2152:12;2131:35;2198:2;2190:6;2186:15;2210:142;2226:6;2221:3;2218:15;2210:142;;;2292:17;;2280:30;;2330:12;;;;2243;;2210:142;;;-1:-1:-1;2370:5:202;1719:662;-1:-1:-1;;;;;;1719:662:202:o;2386:186::-;2434:4;2467:18;2459:6;2456:30;2453:56;;;2489:18;;:::i;:::-;-1:-1:-1;2555:2:202;2534:15;-1:-1:-1;;2530:29:202;2561:4;2526:40;;2386:186::o;2577:462::-;2619:5;2672:3;2665:4;2657:6;2653:17;2649:27;2639:55;;2690:1;2687;2680:12;2639:55;2726:6;2713:20;2757:48;2773:31;2801:2;2773:31;:::i;2757:48::-;2830:2;2821:7;2814:19;2876:3;2869:4;2864:2;2856:6;2852:15;2848:26;2845:35;2842:55;;;2893:1;2890;2883:12;2842:55;2958:2;2951:4;2943:6;2939:17;2932:4;2923:7;2919:18;2906:55;3006:1;2981:16;;;2999:4;2977:27;2970:38;;;;2985:7;2577:462;-1:-1:-1;;;2577:462:202:o;3044:886::-;3096:5;3149:3;3142:4;3134:6;3130:17;3126:27;3116:55;;3167:1;3164;3157:12;3116:55;3203:6;3190:20;3229:4;3253:60;3269:43;3309:2;3269:43;:::i;3253:60::-;3347:15;;;3433:1;3429:10;;;;3417:23;;3413:32;;;3378:12;;;;3457:15;;;3454:35;;;3485:1;3482;3475:12;3454:35;3521:2;3513:6;3509:15;3533:368;3549:6;3544:3;3541:15;3533:368;;;3635:3;3622:17;3671:18;3658:11;3655:35;3652:125;;;3731:1;3760:2;3756;3749:14;3652:125;3802:56;3854:3;3849:2;3835:11;3827:6;3823:24;3819:33;3802:56;:::i;:::-;3790:69;;-1:-1:-1;3879:12:202;;;;3566;;3533:368;;3935:602;4062:6;4070;4123:2;4111:9;4102:7;4098:23;4094:32;4091:52;;;4139:1;4136;4129:12;4091:52;4179:9;4166:23;4208:18;4249:2;4241:6;4238:14;4235:34;;;4265:1;4262;4255:12;4235:34;4288:61;4341:7;4332:6;4321:9;4317:22;4288:61;:::i;:::-;4278:71;;4402:2;4391:9;4387:18;4374:32;4358:48;;4431:2;4421:8;4418:16;4415:36;;;4447:1;4444;4437:12;4415:36;;4470:61;4523:7;4512:8;4501:9;4497:24;4470:61;:::i;:::-;4460:71;;;3935:602;;;;;:::o;4932:658::-;5103:2;5155:21;;;5225:13;;5128:18;;;5247:22;;;5074:4;;5103:2;5326:15;;;;5300:2;5285:18;;;5074:4;5369:195;5383:6;5380:1;5377:13;5369:195;;;5448:13;;-1:-1:-1;;;;;5444:39:202;5432:52;;5539:15;;;;5504:12;;;;5480:1;5398:9;5369:195;;;-1:-1:-1;5581:3:202;;4932:658;-1:-1:-1;;;;;;4932:658:202:o;5595:348::-;5679:6;5732:2;5720:9;5711:7;5707:23;5703:32;5700:52;;;5748:1;5745;5738:12;5700:52;5788:9;5775:23;5821:18;5813:6;5810:30;5807:50;;;5853:1;5850;5843:12;5807:50;5876:61;5929:7;5920:6;5909:9;5905:22;5876:61;:::i;5948:250::-;6033:1;6043:113;6057:6;6054:1;6051:13;6043:113;;;6133:11;;;6127:18;6114:11;;;6107:39;6079:2;6072:10;6043:113;;;-1:-1:-1;;6190:1:202;6172:16;;6165:27;5948:250::o;6203:270::-;6244:3;6282:5;6276:12;6309:6;6304:3;6297:19;6325:76;6394:6;6387:4;6382:3;6378:14;6371:4;6364:5;6360:16;6325:76;:::i;:::-;6455:2;6434:15;-1:-1:-1;;6430:29:202;6421:39;;;;6462:4;6417:50;;6203:270;-1:-1:-1;;6203:270:202:o;6478:800::-;6638:4;6667:2;6707;6696:9;6692:18;6737:2;6726:9;6719:21;6760:6;6795;6789:13;6826:6;6818;6811:22;6864:2;6853:9;6849:18;6842:25;;6926:2;6916:6;6913:1;6909:14;6898:9;6894:30;6890:39;6876:53;;6964:2;6956:6;6952:15;6985:1;6995:254;7009:6;7006:1;7003:13;6995:254;;;7102:2;7098:7;7086:9;7078:6;7074:22;7070:36;7065:3;7058:49;7130:39;7162:6;7153;7147:13;7130:39;:::i;:::-;7120:49;-1:-1:-1;7227:12:202;;;;7192:15;;;;7031:1;7024:9;6995:254;;;-1:-1:-1;7266:6:202;;6478:800;-1:-1:-1;;;;;;;6478:800:202:o;7283:160::-;7348:20;;7404:13;;7397:21;7387:32;;7377:60;;7433:1;7430;7423:12;7448:606;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7830:35;7861:2;7850:9;7846:18;7830:35;:::i;:::-;7820:45;;7916:3;7905:9;7901:19;7888:33;7944:18;7936:6;7933:30;7930:50;;;7976:1;7973;7966:12;7930:50;7999:49;8040:7;8031:6;8020:9;8016:22;7999:49;:::i;:::-;7989:59;;;7448:606;;;;;;;;:::o;8059:217::-;8206:2;8195:9;8188:21;8169:4;8226:44;8266:2;8255:9;8251:18;8243:6;8226:44;:::i;8281:186::-;8340:6;8393:2;8381:9;8372:7;8368:23;8364:32;8361:52;;;8409:1;8406;8399:12;8361:52;8432:29;8451:9;8432:29;:::i;8472:668::-;8526:5;8579:3;8572:4;8564:6;8560:17;8556:27;8546:55;;8597:1;8594;8587:12;8546:55;8633:6;8620:20;8659:4;8683:60;8699:43;8739:2;8699:43;:::i;8683:60::-;8777:15;;;8863:1;8859:10;;;;8847:23;;8843:32;;;8808:12;;;;8887:15;;;8884:35;;;8915:1;8912;8905:12;8884:35;8951:2;8943:6;8939:15;8963:148;8979:6;8974:3;8971:15;8963:148;;;9045:23;9064:3;9045:23;:::i;:::-;9033:36;;9089:12;;;;8996;;8963:148;;9145:662;9196:5;9249:3;9242:4;9234:6;9230:17;9226:27;9216:55;;9267:1;9264;9257:12;9216:55;9303:6;9290:20;9329:4;9353:60;9369:43;9409:2;9369:43;:::i;9353:60::-;9447:15;;;9533:1;9529:10;;;;9517:23;;9513:32;;;9478:12;;;;9557:15;;;9554:35;;;9585:1;9582;9575:12;9554:35;9621:2;9613:6;9609:15;9633:145;9649:6;9644:3;9641:15;9633:145;;;9715:20;9731:3;9715:20;:::i;:::-;9703:33;;9756:12;;;;9666;;9633:145;;9812:1276;10038:6;10046;10054;10062;10070;10123:3;10111:9;10102:7;10098:23;10094:33;10091:53;;;10140:1;10137;10130:12;10091:53;10180:9;10167:23;10209:18;10250:2;10242:6;10239:14;10236:34;;;10266:1;10263;10256:12;10236:34;10289:61;10342:7;10333:6;10322:9;10318:22;10289:61;:::i;:::-;10279:71;;10403:2;10392:9;10388:18;10375:32;10359:48;;10432:2;10422:8;10419:16;10416:36;;;10448:1;10445;10438:12;10416:36;10471:63;10526:7;10515:8;10504:9;10500:24;10471:63;:::i;:::-;10461:73;;10587:2;10576:9;10572:18;10559:32;10543:48;;10616:2;10606:8;10603:16;10600:36;;;10632:1;10629;10622:12;10600:36;10655:63;10710:7;10699:8;10688:9;10684:24;10655:63;:::i;:::-;10645:73;;10771:2;10760:9;10756:18;10743:32;10727:48;;10800:2;10790:8;10787:16;10784:36;;;10816:1;10813;10806:12;10784:36;10839:60;10891:7;10880:8;10869:9;10865:24;10839:60;:::i;:::-;10829:70;;10952:3;10941:9;10937:19;10924:33;10908:49;;10982:2;10972:8;10969:16;10966:36;;;10998:1;10995;10988:12;10966:36;;11021:61;11074:7;11063:8;11052:9;11048:24;11021:61;:::i;11093:388::-;11170:6;11178;11231:2;11219:9;11210:7;11206:23;11202:32;11199:52;;;11247:1;11244;11237:12;11199:52;11283:9;11270:23;11260:33;;11344:2;11333:9;11329:18;11316:32;11371:18;11363:6;11360:30;11357:50;;;11403:1;11400;11393:12;11357:50;11426:49;11467:7;11458:6;11447:9;11443:22;11426:49;:::i;11486:632::-;11657:2;11709:21;;;11779:13;;11682:18;;;11801:22;;;11628:4;;11657:2;11880:15;;;;11854:2;11839:18;;;11628:4;11923:169;11937:6;11934:1;11931:13;11923:169;;;11998:13;;11986:26;;12067:15;;;;12032:12;;;;11959:1;11952:9;11923:169;;12756:127;12817:10;12812:3;12808:20;12805:1;12798:31;12848:4;12845:1;12838:15;12872:4;12869:1;12862:15;14035:380;14114:1;14110:12;;;;14157;;;14178:61;;14232:4;14224:6;14220:17;14210:27;;14178:61;14285:2;14277:6;14274:14;14254:18;14251:38;14248:161;;14331:10;14326:3;14322:20;14319:1;14312:31;14366:4;14363:1;14356:15;14394:4;14391:1;14384:15;14545:544;14646:2;14641:3;14638:11;14635:448;;;14682:1;14707:5;14703:2;14696:17;14752:4;14748:2;14738:19;14822:2;14810:10;14806:19;14803:1;14799:27;14793:4;14789:38;14858:4;14846:10;14843:20;14840:47;;;-1:-1:-1;14881:4:202;14840:47;14936:2;14931:3;14927:12;14924:1;14920:20;14914:4;14910:31;14900:41;;14991:82;15009:2;15002:5;14999:13;14991:82;;;15054:17;;;15035:1;15024:13;14991:82;;15265:1348;15389:3;15383:10;15416:18;15408:6;15405:30;15402:56;;;15438:18;;:::i;:::-;15467:96;15556:6;15516:38;15548:4;15542:11;15516:38;:::i;:::-;15510:4;15467:96;:::i;:::-;15618:4;;15682:2;15671:14;;15699:1;15694:662;;;;16400:1;16417:6;16414:89;;;-1:-1:-1;16469:19:202;;;16463:26;16414:89;-1:-1:-1;;15222:1:202;15218:11;;;15214:24;15210:29;15200:40;15246:1;15242:11;;;15197:57;16516:81;;15664:943;;15694:662;14492:1;14485:14;;;14529:4;14516:18;;-1:-1:-1;;15730:20:202;;;15847:236;15861:7;15858:1;15855:14;15847:236;;;15950:19;;;15944:26;15929:42;;16042:27;;;;16010:1;15998:14;;;;15877:19;;15847:236;;;15851:3;16111:6;16102:7;16099:19;16096:201;;;16172:19;;;16166:26;-1:-1:-1;;16255:1:202;16251:14;;;16267:3;16247:24;16243:37;16239:42;16224:58;16209:74;;16096:201;-1:-1:-1;;;;;16343:1:202;16327:14;;;16323:22;16310:36;;-1:-1:-1;15265:1348:202:o;16618:127::-;16679:10;16674:3;16670:20;16667:1;16660:31;16710:4;16707:1;16700:15;16734:4;16731:1;16724:15;16750:128;16817:9;;;16838:11;;;16835:37;;;16852:18;;:::i;16883:395::-;-1:-1:-1;;;;;17080:32:202;;17062:51;;17156:14;;17149:22;17144:2;17129:18;;17122:50;17208:2;17203;17188:18;;17181:30;;;-1:-1:-1;;17228:44:202;;17253:18;;17245:6;17228:44;:::i;:::-;17220:52;16883:395;-1:-1:-1;;;;;16883:395:202:o;17644:125::-;17709:9;;;17730:10;;;17727:36;;;17743:18;;:::i;17774:577::-;17987:3;18019:26;18015:31;18088:2;18079:6;18075:2;18071:15;18067:24;18062:3;18055:37;18143:2;18134:6;18130:2;18126:15;18122:24;18117:2;18112:3;18108:12;18101:46;;18177:6;18172:2;18167:3;18163:12;18156:28;18213:6;18207:13;18229:75;18297:6;18292:2;18287:3;18283:12;18276:4;18268:6;18264:17;18229:75;:::i;:::-;18324:16;;;;18342:2;18320:25;;17774:577;-1:-1:-1;;;;;17774:577:202:o;18356:288::-;18531:6;18520:9;18513:25;18574:2;18569;18558:9;18554:18;18547:30;18494:4;18594:44;18634:2;18623:9;18619:18;18611:6;18594:44;:::i;18649:647::-;18728:6;18781:2;18769:9;18760:7;18756:23;18752:32;18749:52;;;18797:1;18794;18787:12;18749:52;18830:9;18824:16;18863:18;18855:6;18852:30;18849:50;;;18895:1;18892;18885:12;18849:50;18918:22;;18971:4;18963:13;;18959:27;-1:-1:-1;18949:55:202;;19000:1;18997;18990:12;18949:55;19029:2;19023:9;19054:48;19070:31;19098:2;19070:31;:::i;19054:48::-;19125:2;19118:5;19111:17;19165:7;19160:2;19155;19151;19147:11;19143:20;19140:33;19137:53;;;19186:1;19183;19176:12;19137:53;19199:67;19263:2;19258;19251:5;19247:14;19242:2;19238;19234:11;19199:67;:::i;19990:127::-;20051:10;20046:3;20042:20;20039:1;20032:31;20082:4;20079:1;20072:15;20106:4;20103:1;20096:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "burn(bytes32)": "08a1eee1",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,bytes32)": "2cfd3005",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "tokenSupplyCap()": "52058d8a",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupplyCap_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CappedSupplyCannotMintOverCap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CappedSupplyRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32)\":{\"details\":\"Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"tokenId\":\"The tokenId operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"tokenSupplyCap()\":{\"details\":\"Returns the number of tokens that can be minted.\",\"returns\":{\"_0\":\"The token max supply\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/Tokens/LSP8CappedSupplyTester.sol\":\"LSP8CappedSupplyTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d\",\"dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5\",\"dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CappedSupply.sol\":{\"keccak256\":\"0x9309a18ef79a2c08f44759006164b0b13c6c558d98cc51a595cd70a12f7f07f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ecf3ab5fe13a2fd98b3c1818ae5ba323be7508731a9136ed2e6652e1c223f9\",\"dweb:/ipfs/QmcvFjdeLa9csAjAKiiUwQX3KdDFhSj4EEqfUfsNjbaS2H\"]},\"contracts/Mocks/Tokens/LSP8CappedSupplyTester.sol\":{\"keccak256\":\"0x7c7bc98be1cd14265578fe620a3567ddb136749449ac62ba0268638dcc7ee47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63528bf7b42cc11b4b0c86cec0c8e07f3f8080d416979c60b5fcb3bcba5aebec\",\"dweb:/ipfs/QmbopjKgTHmDs8Nwy7ji5jnZU4EKGnWFL7GrLBR8on66HQ\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupplyCap_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CappedSupplyCannotMintOverCap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CappedSupplyRequired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenSupplyCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeOperator(address,bytes32)": {
            "details": "Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.",
            "params": {
              "operator": "The address to authorize as an operator.",
              "tokenId": "The tokenId operator has access to."
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "tokenSupplyCap()": {
            "details": "Returns the number of tokens that can be minted.",
            "returns": {
              "_0": "The token max supply"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Mocks/Tokens/LSP8CappedSupplyTester.sol": "LSP8CappedSupplyTester"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol": {
        "keccak256": "0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274",
        "urls": [
          "bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d",
          "dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552",
        "urls": [
          "bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5",
          "dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CappedSupply.sol": {
        "keccak256": "0x9309a18ef79a2c08f44759006164b0b13c6c558d98cc51a595cd70a12f7f07f6",
        "urls": [
          "bzz-raw://80ecf3ab5fe13a2fd98b3c1818ae5ba323be7508731a9136ed2e6652e1c223f9",
          "dweb:/ipfs/QmcvFjdeLa9csAjAKiiUwQX3KdDFhSj4EEqfUfsNjbaS2H"
        ],
        "license": "MIT"
      },
      "contracts/Mocks/Tokens/LSP8CappedSupplyTester.sol": {
        "keccak256": "0x7c7bc98be1cd14265578fe620a3567ddb136749449ac62ba0268638dcc7ee47f",
        "urls": [
          "bzz-raw://63528bf7b42cc11b4b0c86cec0c8e07f3f8080d416979c60b5fcb3bcba5aebec",
          "dweb:/ipfs/QmbopjKgTHmDs8Nwy7ji5jnZU4EKGnWFL7GrLBR8on66HQ"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Mocks/Tokens/LSP8CappedSupplyTester.sol",
    "id": 16756,
    "exportedSymbols": {
      "LSP8CappedSupply": [
        11341
      ],
      "LSP8CappedSupplyTester": [
        16755
      ],
      "LSP8IdentifiableDigitalAsset": [
        10104
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:763:135",
    "nodes": [
      {
        "id": 16702,
        "nodeType": "PragmaDirective",
        "src": "33:23:135",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16704,
        "nodeType": "ImportDirective",
        "src": "69:119:135",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16756,
        "sourceUnit": 10105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16703,
              "name": "LSP8IdentifiableDigitalAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10104,
              "src": "82:28:135",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16706,
        "nodeType": "ImportDirective",
        "src": "189:100:135",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CappedSupply.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/extensions/LSP8CappedSupply.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16756,
        "sourceUnit": 11342,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16705,
              "name": "LSP8CappedSupply",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11341,
              "src": "197:16:135",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16755,
        "nodeType": "ContractDefinition",
        "src": "291:504:135",
        "nodes": [
          {
            "id": 16728,
            "nodeType": "FunctionDefinition",
            "src": "349:230:135",
            "nodes": [],
            "body": {
              "id": 16727,
              "nodeType": "Block",
              "src": "577:2:135",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 16719,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16710,
                    "src": "516:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16720,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16712,
                    "src": "523:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16721,
                    "name": "newOwner_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16714,
                    "src": "532:9:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 16722,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 16718,
                  "name": "LSP8IdentifiableDigitalAsset",
                  "nameLocations": [
                    "487:28:135"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10104,
                  "src": "487:28:135"
                },
                "nodeType": "ModifierInvocation",
                "src": "487:55:135"
              },
              {
                "arguments": [
                  {
                    "id": 16724,
                    "name": "tokenSupplyCap_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16716,
                    "src": "560:15:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 16725,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 16723,
                  "name": "LSP8CappedSupply",
                  "nameLocations": [
                    "543:16:135"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11341,
                  "src": "543:16:135"
                },
                "nodeType": "ModifierInvocation",
                "src": "543:33:135"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16710,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "384:5:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16728,
                  "src": "370:19:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16709,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16712,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "413:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16728,
                  "src": "399:21:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16711,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16714,
                  "mutability": "mutable",
                  "name": "newOwner_",
                  "nameLocation": "438:9:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16728,
                  "src": "430:17:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16716,
                  "mutability": "mutable",
                  "name": "tokenSupplyCap_",
                  "nameLocation": "465:15:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16728,
                  "src": "457:23:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "360:126:135"
            },
            "returnParameters": {
              "id": 16726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "577:0:135"
            },
            "scope": 16755,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16743,
            "nodeType": "FunctionDefinition",
            "src": "585:116:135",
            "nodes": [],
            "body": {
              "id": 16742,
              "nodeType": "Block",
              "src": "635:66:135",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16736,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16730,
                        "src": "651:2:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16737,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16732,
                        "src": "655:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "664:4:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "746f6b656e207072696e74657220676f2062727272",
                        "id": 16739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "670:23:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        },
                        "value": "token printer go brrr"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        }
                      ],
                      "id": 16735,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11340
                      ],
                      "referencedDeclaration": 11340,
                      "src": "645:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 16740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:49:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16741,
                  "nodeType": "ExpressionStatement",
                  "src": "645:49:135"
                }
              ]
            },
            "functionSelector": "2cfd3005",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "594:4:135",
            "parameters": {
              "id": 16733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16730,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "607:2:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16743,
                  "src": "599:10:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16732,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "619:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16743,
                  "src": "611:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16731,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:29:135"
            },
            "returnParameters": {
              "id": 16734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:135"
            },
            "scope": 16755,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16754,
            "nodeType": "FunctionDefinition",
            "src": "707:86:135",
            "nodes": [],
            "body": {
              "id": 16753,
              "nodeType": "Block",
              "src": "745:48:135",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16749,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16745,
                        "src": "761:7:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6665656c20746865206275726e",
                        "id": 16750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "770:15:135",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        },
                        "value": "feel the burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        }
                      ],
                      "id": 16748,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10823,
                      "src": "755:5:135",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory)"
                      }
                    },
                    "id": 16751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:31:135",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16752,
                  "nodeType": "ExpressionStatement",
                  "src": "755:31:135"
                }
              ]
            },
            "functionSelector": "08a1eee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "716:4:135",
            "parameters": {
              "id": 16746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16745,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "729:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 16754,
                  "src": "721:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16744,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:17:135"
            },
            "returnParameters": {
              "id": 16747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:0:135"
            },
            "scope": 16755,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16707,
              "name": "LSP8CappedSupply",
              "nameLocations": [
                "326:16:135"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11341,
              "src": "326:16:135"
            },
            "id": 16708,
            "nodeType": "InheritanceSpecifier",
            "src": "326:16:135"
          }
        ],
        "canonicalName": "LSP8CappedSupplyTester",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16755,
          11341,
          10104,
          11044,
          9968,
          4186,
          43285,
          43508,
          43840,
          46531,
          46594,
          43687
        ],
        "name": "LSP8CappedSupplyTester",
        "nameLocation": "300:22:135",
        "scope": 16756,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          11273,
          11275,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 135
}