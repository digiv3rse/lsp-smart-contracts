{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "authorizedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LSP7AmountExceedsAuthorizedAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LSP7AmountExceedsBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP7CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP7CannotSendWithAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP7CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP7CappedSupplyCannotMintOverCap",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP7CappedSupplyRequired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP7InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP7NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP7NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "authorizedAmountFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupplyCap",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenSupplyCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amount",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612043806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806365aeaa95116100ad5780638da5cb5b116100715780638da5cb5b146102855780639dc29fac146102af578063f2fde38b146102c2578063f542033f146102d5578063fad8b32a146102e857600080fd5b806365aeaa951461021b57806370a082311461022e578063715018a614610257578063760d9bba1461025f5780637f23690c1461027257600080fd5b806340c10f19116100f457806340c10f19146101ad57806347980aa3146101c05780634e3e6e9c146101d357806352058d8a146101f357806354f6127f146101fb57600080fd5b806301ffc9a71461013157806314a6e2931461015957806318160ddd1461016e5780632d7667c914610180578063313ce56714610193575b600080fd5b61014461013f366004611666565b6102fb565b60405190151581526020015b60405180910390f35b61016c610167366004611862565b610326565b005b6003545b604051908152602001610150565b61016c61018e3660046119b5565b6103b7565b61019b6104a6565b60405160ff9091168152602001610150565b61016c6101bb366004611a86565b6104bf565b61016c6101ce366004611a86565b6104fd565b6101e66101e1366004611ab0565b610508565b6040516101509190611b3c565b600654610172565b61020e610209366004611b9e565b6105bb565b6040516101509190611bb7565b610172610229366004611bca565b6105c6565b61017261023c366004611bfd565b6001600160a01b031660009081526004602052604090205490565b61016c61062d565b61016c61026d366004611c18565b610641565b61016c610280366004611c83565b610716565b6000546201000090046001600160a01b03166040516001600160a01b039091168152602001610150565b61016c6102bd366004611a86565b610728565b61016c6102d0366004611bfd565b610758565b61016c6102e3366004611cbf565b6107d1565b61016c6102f6366004611bfd565b6108f4565b60006001600160e01b03198216633687e17960e21b1480610320575061032082610900565b92915050565b61032e610935565b805182511461036257815181516040516321d1e13360e11b8152600481019290925260248201526044015b60405180910390fd5b60005b82518110156103b2576103aa83828151811061038357610383611d3a565b602002602001015183838151811061039d5761039d611d3a565b6020026020010151610996565b600101610365565b505050565b84518451811415806103ca575083518114155b806103d6575082518114155b806103e2575081518114155b156104005760405163263eee8d60e01b815260040160405180910390fd5b60005b8181101561049d5761049587828151811061042057610420611d3a565b602002602001015187838151811061043a5761043a611d3a565b602002602001015187848151811061045457610454611d3a565b602002602001015187858151811061046e5761046e611d3a565b602002602001015187868151811061048857610488611d3a565b6020026020010151610641565b600101610403565b50505050505050565b60025460009060ff166104b95750601290565b50600090565b6104f982826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610a8a565b5050565b6104f9338383610ad2565b606081516001600160401b0381111561052357610523611697565b60405190808252806020026020018201604052801561055657816020015b60608152602001906001900390816105415790505b50905060005b82518110156105b55761058783828151811061057a5761057a611d3a565b6020026020010151610bd0565b82828151811061059957610599611d3a565b60200260200101819052506105ae8160010190565b905061055c565b50919050565b606061032082610bd0565b6000826001600160a01b0316826001600160a01b03160361060057506001600160a01b038116600090815260046020526040902054610320565b506001600160a01b0380821660009081526005602090815260408083209386168352929052205492915050565b610635610935565b61063f6000610c72565b565b836001600160a01b0316856001600160a01b03160361067257604051620b9afb60ec1b815260040160405180910390fd5b336001600160a01b0386168114610701576001600160a01b03808716600090815260056020908152604080832093851683529290522054808511156106eb5760405163f3a6b69160e01b81526001600160a01b038089166004830152602482018390528316604482015260648101869052608401610359565b6106ff87836106fa8885611d66565b610ad2565b505b61070e8686868686610ce8565b505050505050565b61071e610935565b6104f98282610996565b6104f982826040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610e45565b610760610935565b6001600160a01b0381166107c55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610359565b6107ce81610c72565b50565b600054610100900460ff16158080156107f15750600054600160ff909116105b8061080b5750303b15801561080b575060005460ff166001145b61086e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610359565b6000805460ff191660011790558015610891576000805461ff0019166101001790555b61089e8585856001611024565b6108a782611064565b80156108ed576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6107ce33826000610ad2565b60006001600160e01b03198216631c537ddf60e21b148061032057506301ffc9a760e01b6001600160e01b0319831614610320565b6000546001600160a01b036201000090910416331461063f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610359565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f82016109d6576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610a1657604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610a2e8282611df3565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610a6f57610a6a8360006101006110b1565b610a71565b825b604051610a7e9190611bb7565b60405180910390a25050565b60065483610a9760035490565b610aa19190611eb2565b1115610ac05760405163eacbf0d160e01b815260040160405180910390fd5b610acc848484846111be565b50505050565b6001600160a01b038216610af9576040516331aaf3b360e11b815260040160405180910390fd5b826001600160a01b0316826001600160a01b031603610b1757505050565b6001600160a01b0380841660009081526005602090815260408083209386168352929052208190558015610b8b5780836001600160a01b0316836001600160a01b03167fd66aff874162a96578e919097b6f6d153dfd89a5cec41bb331fdb0c4aec16e2c60405160405180910390a4505050565b826001600160a01b0316826001600160a01b03167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a3505050565b6000818152600160205260409020805460609190610bed90611d79565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1990611d79565b8015610c665780601f10610c3b57610100808354040283529160200191610c66565b820191906000526020600020905b815481529060010190602001808311610c4957829003601f168201915b50505050509050919050565b6000546001600160a01b038281166201000090920416146107ce57600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6001600160a01b0385161580610d0557506001600160a01b038416155b15610d2357604051630d2d5ec360e41b815260040160405180910390fd5b6001600160a01b03851660009081526004602052604090205480841115610d76576040516308d4794960e01b8152600481018290526001600160a01b038716602482015260448101859052606401610359565b336001600160a01b03871660009081526004602052604081208054879290610d9f908490611d66565b90915550506001600160a01b03861660009081526004602052604081208054879290610dcc908490611eb2565b92505081905550856001600160a01b0316876001600160a01b0316826001600160a01b03167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6888888604051610e2493929190611ec5565b60405180910390a4610e3887878786611294565b61049d8787878787611368565b6001600160a01b038316610e6c57604051630d2d5ec360e41b815260040160405180910390fd5b6001600160a01b03831660009081526004602052604090205480831115610ebf576040516308d4794960e01b8152600481018290526001600160a01b038516602482015260448101849052606401610359565b336001600160a01b0385168114610f76576001600160a01b0380861660009081526005602090815260408083209385168352929052205480851115610f385760405163f3a6b69160e01b81526001600160a01b038088166004830152602482018390528316604482015260648101869052608401610359565b6001600160a01b03808716600090815260056020908152604080832093861683529290529081208054879290610f6f908490611d66565b9091555050505b8360036000828254610f889190611d66565b90915550506001600160a01b03851660009081526004602052604081208054869290610fb5908490611d66565b9250508190555060006001600160a01b0316856001600160a01b0316826001600160a01b03167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a68760008860405161100f93929190611ec5565b60405180910390a46108ed8560008686611294565b600054610100900460ff1661104b5760405162461bcd60e51b815260040161035990611eef565b6002805460ff1916821515179055610acc8484846114a0565b600054610100900460ff1661108b5760405162461bcd60e51b815260040161035990611eef565b806000036110ac5760405163acf1d8c560e01b815260040160405180910390fd5b600655565b6060816110bf81601f611eb2565b10156110fe5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610359565b6111088284611eb2565b8451101561114c5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610359565b60608215801561116b57604051915060008252602082016040526111b5565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156111a457805183526020928301920161118c565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b0384166111e557604051630d2d5ec360e41b815260040160405180910390fd5b3383600360008282546111f89190611eb2565b90915550506001600160a01b03851660009081526004602052604081208054869290611225908490611eb2565b92505081905550846001600160a01b031660006001600160a01b0316826001600160a01b03167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a687878760405161127e93929190611ec5565b60405180910390a46108ed600086868686611368565b6112a584631aed5a8560e21b61156d565b15610acc576000848484846040516020016112c39493929190611f3a565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611321907f429ac7a06903dbc9c13dfcb3c9d11df8194581fa047c96d7a4171fc7402958ea908590600401611f87565b6000604051808303816000875af1158015611340573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070e9190810190611fa0565b61137984631aed5a8560e21b61156d565b15611443576000858585846040516020016113979493929190611f3a565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906113f5907f20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c908590600401611f87565b6000604051808303816000875af1158015611414573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261143c9190810190611fa0565b50506108ed565b816108ed576001600160a01b0384163b1561147c576040516353047ddb60e11b81526001600160a01b0385166004820152602401610359565b6040516309b091fd60e21b81526001600160a01b0385166004820152602401610359565b600054610100900460ff166114c75760405162461bcd60e51b815260040161035990611eef565b6114d0816115f6565b6115197feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b81525061161d565b6115437fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af18461161d565b6103b27f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db9327568361161d565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156115df575060208210155b80156115eb5750600081115b979650505050505050565b600054610100900460ff166107605760405162461bcd60e51b815260040161035990611eef565b60008281526001602052604090206116358282611df3565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610a7e9190611bb7565b60006020828403121561167857600080fd5b81356001600160e01b03198116811461169057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156116d5576116d5611697565b604052919050565b60006001600160401b038211156116f6576116f6611697565b5060051b60200190565b600082601f83011261171157600080fd5b81356020611726611721836116dd565b6116ad565b82815260059290921b8401810191818101908684111561174557600080fd5b8286015b848110156117605780358352918301918301611749565b509695505050505050565b60006001600160401b0382111561178457611784611697565b50601f01601f191660200190565b600082601f8301126117a357600080fd5b81356117b16117218261176b565b8181528460208386010111156117c657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126117f457600080fd5b81356020611804611721836116dd565b82815260059290921b8401810191818101908684111561182357600080fd5b8286015b848110156117605780356001600160401b038111156118465760008081fd5b6118548986838b0101611792565b845250918301918301611827565b6000806040838503121561187557600080fd5b82356001600160401b038082111561188c57600080fd5b61189886838701611700565b935060208501359150808211156118ae57600080fd5b506118bb858286016117e3565b9150509250929050565b80356001600160a01b03811681146118dc57600080fd5b919050565b600082601f8301126118f257600080fd5b81356020611902611721836116dd565b82815260059290921b8401810191818101908684111561192157600080fd5b8286015b8481101561176057611936816118c5565b8352918301918301611925565b803580151581146118dc57600080fd5b600082601f83011261196457600080fd5b81356020611974611721836116dd565b82815260059290921b8401810191818101908684111561199357600080fd5b8286015b84811015611760576119a881611943565b8352918301918301611997565b600080600080600060a086880312156119cd57600080fd5b85356001600160401b03808211156119e457600080fd5b6119f089838a016118e1565b96506020880135915080821115611a0657600080fd5b611a1289838a016118e1565b95506040880135915080821115611a2857600080fd5b611a3489838a01611700565b94506060880135915080821115611a4a57600080fd5b611a5689838a01611953565b93506080880135915080821115611a6c57600080fd5b50611a79888289016117e3565b9150509295509295909350565b60008060408385031215611a9957600080fd5b611aa2836118c5565b946020939093013593505050565b600060208284031215611ac257600080fd5b81356001600160401b03811115611ad857600080fd5b611ae484828501611700565b949350505050565b60005b83811015611b07578181015183820152602001611aef565b50506000910152565b60008151808452611b28816020860160208601611aec565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b9157603f19888603018452611b7f858351611b10565b94509285019290850190600101611b63565b5092979650505050505050565b600060208284031215611bb057600080fd5b5035919050565b6020815260006116906020830184611b10565b60008060408385031215611bdd57600080fd5b611be6836118c5565b9150611bf4602084016118c5565b90509250929050565b600060208284031215611c0f57600080fd5b611690826118c5565b600080600080600060a08688031215611c3057600080fd5b611c39866118c5565b9450611c47602087016118c5565b935060408601359250611c5c60608701611943565b915060808601356001600160401b03811115611c7757600080fd5b611a7988828901611792565b60008060408385031215611c9657600080fd5b8235915060208301356001600160401b03811115611cb357600080fd5b6118bb85828601611792565b60008060008060808587031215611cd557600080fd5b84356001600160401b0380821115611cec57600080fd5b611cf888838901611792565b95506020870135915080821115611d0e57600080fd5b50611d1b87828801611792565b935050611d2a604086016118c5565b9396929550929360600135925050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561032057610320611d50565b600181811c90821680611d8d57607f821691505b6020821081036105b557634e487b7160e01b600052602260045260246000fd5b601f8211156103b257600081815260208120601f850160051c81016020861015611dd45750805b601f850160051c820191505b8181101561070e57828155600101611de0565b81516001600160401b03811115611e0c57611e0c611697565b611e2081611e1a8454611d79565b84611dad565b602080601f831160018114611e555760008415611e3d5750858301515b600019600386901b1c1916600185901b17855561070e565b600085815260208120601f198616915b82811015611e8457888601518255948401946001909101908401611e65565b5085821015611ea25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561032057610320611d50565b8381528215156020820152606060408201526000611ee66060830184611b10565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251611f77816048850160208701611aec565b9190910160480195945050505050565b828152604060208201526000611ae46040830184611b10565b600060208284031215611fb257600080fd5b81516001600160401b03811115611fc857600080fd5b8201601f81018413611fd957600080fd5b8051611fe76117218261176b565b818152856020838501011115611ffc57600080fd5b611ee6826020830160208601611aec56fea2646970667358221220068f02116379362f952bf3719df4b801831b2fb3aa728526e275e82ac9104ae864736f6c63430008110033",
    "sourceMap": "297:686:128:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806365aeaa95116100ad5780638da5cb5b116100715780638da5cb5b146102855780639dc29fac146102af578063f2fde38b146102c2578063f542033f146102d5578063fad8b32a146102e857600080fd5b806365aeaa951461021b57806370a082311461022e578063715018a614610257578063760d9bba1461025f5780637f23690c1461027257600080fd5b806340c10f19116100f457806340c10f19146101ad57806347980aa3146101c05780634e3e6e9c146101d357806352058d8a146101f357806354f6127f146101fb57600080fd5b806301ffc9a71461013157806314a6e2931461015957806318160ddd1461016e5780632d7667c914610180578063313ce56714610193575b600080fd5b61014461013f366004611666565b6102fb565b60405190151581526020015b60405180910390f35b61016c610167366004611862565b610326565b005b6003545b604051908152602001610150565b61016c61018e3660046119b5565b6103b7565b61019b6104a6565b60405160ff9091168152602001610150565b61016c6101bb366004611a86565b6104bf565b61016c6101ce366004611a86565b6104fd565b6101e66101e1366004611ab0565b610508565b6040516101509190611b3c565b600654610172565b61020e610209366004611b9e565b6105bb565b6040516101509190611bb7565b610172610229366004611bca565b6105c6565b61017261023c366004611bfd565b6001600160a01b031660009081526004602052604090205490565b61016c61062d565b61016c61026d366004611c18565b610641565b61016c610280366004611c83565b610716565b6000546201000090046001600160a01b03166040516001600160a01b039091168152602001610150565b61016c6102bd366004611a86565b610728565b61016c6102d0366004611bfd565b610758565b61016c6102e3366004611cbf565b6107d1565b61016c6102f6366004611bfd565b6108f4565b60006001600160e01b03198216633687e17960e21b1480610320575061032082610900565b92915050565b61032e610935565b805182511461036257815181516040516321d1e13360e11b8152600481019290925260248201526044015b60405180910390fd5b60005b82518110156103b2576103aa83828151811061038357610383611d3a565b602002602001015183838151811061039d5761039d611d3a565b6020026020010151610996565b600101610365565b505050565b84518451811415806103ca575083518114155b806103d6575082518114155b806103e2575081518114155b156104005760405163263eee8d60e01b815260040160405180910390fd5b60005b8181101561049d5761049587828151811061042057610420611d3a565b602002602001015187838151811061043a5761043a611d3a565b602002602001015187848151811061045457610454611d3a565b602002602001015187858151811061046e5761046e611d3a565b602002602001015187868151811061048857610488611d3a565b6020026020010151610641565b600101610403565b50505050505050565b60025460009060ff166104b95750601290565b50600090565b6104f982826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610a8a565b5050565b6104f9338383610ad2565b606081516001600160401b0381111561052357610523611697565b60405190808252806020026020018201604052801561055657816020015b60608152602001906001900390816105415790505b50905060005b82518110156105b55761058783828151811061057a5761057a611d3a565b6020026020010151610bd0565b82828151811061059957610599611d3a565b60200260200101819052506105ae8160010190565b905061055c565b50919050565b606061032082610bd0565b6000826001600160a01b0316826001600160a01b03160361060057506001600160a01b038116600090815260046020526040902054610320565b506001600160a01b0380821660009081526005602090815260408083209386168352929052205492915050565b610635610935565b61063f6000610c72565b565b836001600160a01b0316856001600160a01b03160361067257604051620b9afb60ec1b815260040160405180910390fd5b336001600160a01b0386168114610701576001600160a01b03808716600090815260056020908152604080832093851683529290522054808511156106eb5760405163f3a6b69160e01b81526001600160a01b038089166004830152602482018390528316604482015260648101869052608401610359565b6106ff87836106fa8885611d66565b610ad2565b505b61070e8686868686610ce8565b505050505050565b61071e610935565b6104f98282610996565b6104f982826040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610e45565b610760610935565b6001600160a01b0381166107c55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610359565b6107ce81610c72565b50565b600054610100900460ff16158080156107f15750600054600160ff909116105b8061080b5750303b15801561080b575060005460ff166001145b61086e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610359565b6000805460ff191660011790558015610891576000805461ff0019166101001790555b61089e8585856001611024565b6108a782611064565b80156108ed576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6107ce33826000610ad2565b60006001600160e01b03198216631c537ddf60e21b148061032057506301ffc9a760e01b6001600160e01b0319831614610320565b6000546001600160a01b036201000090910416331461063f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610359565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f82016109d6576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610a1657604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610a2e8282611df3565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610a6f57610a6a8360006101006110b1565b610a71565b825b604051610a7e9190611bb7565b60405180910390a25050565b60065483610a9760035490565b610aa19190611eb2565b1115610ac05760405163eacbf0d160e01b815260040160405180910390fd5b610acc848484846111be565b50505050565b6001600160a01b038216610af9576040516331aaf3b360e11b815260040160405180910390fd5b826001600160a01b0316826001600160a01b031603610b1757505050565b6001600160a01b0380841660009081526005602090815260408083209386168352929052208190558015610b8b5780836001600160a01b0316836001600160a01b03167fd66aff874162a96578e919097b6f6d153dfd89a5cec41bb331fdb0c4aec16e2c60405160405180910390a4505050565b826001600160a01b0316826001600160a01b03167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a3505050565b6000818152600160205260409020805460609190610bed90611d79565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1990611d79565b8015610c665780601f10610c3b57610100808354040283529160200191610c66565b820191906000526020600020905b815481529060010190602001808311610c4957829003601f168201915b50505050509050919050565b6000546001600160a01b038281166201000090920416146107ce57600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6001600160a01b0385161580610d0557506001600160a01b038416155b15610d2357604051630d2d5ec360e41b815260040160405180910390fd5b6001600160a01b03851660009081526004602052604090205480841115610d76576040516308d4794960e01b8152600481018290526001600160a01b038716602482015260448101859052606401610359565b336001600160a01b03871660009081526004602052604081208054879290610d9f908490611d66565b90915550506001600160a01b03861660009081526004602052604081208054879290610dcc908490611eb2565b92505081905550856001600160a01b0316876001600160a01b0316826001600160a01b03167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6888888604051610e2493929190611ec5565b60405180910390a4610e3887878786611294565b61049d8787878787611368565b6001600160a01b038316610e6c57604051630d2d5ec360e41b815260040160405180910390fd5b6001600160a01b03831660009081526004602052604090205480831115610ebf576040516308d4794960e01b8152600481018290526001600160a01b038516602482015260448101849052606401610359565b336001600160a01b0385168114610f76576001600160a01b0380861660009081526005602090815260408083209385168352929052205480851115610f385760405163f3a6b69160e01b81526001600160a01b038088166004830152602482018390528316604482015260648101869052608401610359565b6001600160a01b03808716600090815260056020908152604080832093861683529290529081208054879290610f6f908490611d66565b9091555050505b8360036000828254610f889190611d66565b90915550506001600160a01b03851660009081526004602052604081208054869290610fb5908490611d66565b9250508190555060006001600160a01b0316856001600160a01b0316826001600160a01b03167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a68760008860405161100f93929190611ec5565b60405180910390a46108ed8560008686611294565b600054610100900460ff1661104b5760405162461bcd60e51b815260040161035990611eef565b6002805460ff1916821515179055610acc8484846114a0565b600054610100900460ff1661108b5760405162461bcd60e51b815260040161035990611eef565b806000036110ac5760405163acf1d8c560e01b815260040160405180910390fd5b600655565b6060816110bf81601f611eb2565b10156110fe5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610359565b6111088284611eb2565b8451101561114c5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610359565b60608215801561116b57604051915060008252602082016040526111b5565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156111a457805183526020928301920161118c565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b0384166111e557604051630d2d5ec360e41b815260040160405180910390fd5b3383600360008282546111f89190611eb2565b90915550506001600160a01b03851660009081526004602052604081208054869290611225908490611eb2565b92505081905550846001600160a01b031660006001600160a01b0316826001600160a01b03167f3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a687878760405161127e93929190611ec5565b60405180910390a46108ed600086868686611368565b6112a584631aed5a8560e21b61156d565b15610acc576000848484846040516020016112c39493929190611f3a565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611321907f429ac7a06903dbc9c13dfcb3c9d11df8194581fa047c96d7a4171fc7402958ea908590600401611f87565b6000604051808303816000875af1158015611340573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070e9190810190611fa0565b61137984631aed5a8560e21b61156d565b15611443576000858585846040516020016113979493929190611f3a565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906113f5907f20804611b3e2ea21c480dc465142210acf4a2485947541770ec1fb87dee4a55c908590600401611f87565b6000604051808303816000875af1158015611414573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261143c9190810190611fa0565b50506108ed565b816108ed576001600160a01b0384163b1561147c576040516353047ddb60e11b81526001600160a01b0385166004820152602401610359565b6040516309b091fd60e21b81526001600160a01b0385166004820152602401610359565b600054610100900460ff166114c75760405162461bcd60e51b815260040161035990611eef565b6114d0816115f6565b6115197feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b81525061161d565b6115437fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af18461161d565b6103b27f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db9327568361161d565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156115df575060208210155b80156115eb5750600081115b979650505050505050565b600054610100900460ff166107605760405162461bcd60e51b815260040161035990611eef565b60008281526001602052604090206116358282611df3565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610a7e9190611bb7565b60006020828403121561167857600080fd5b81356001600160e01b03198116811461169057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156116d5576116d5611697565b604052919050565b60006001600160401b038211156116f6576116f6611697565b5060051b60200190565b600082601f83011261171157600080fd5b81356020611726611721836116dd565b6116ad565b82815260059290921b8401810191818101908684111561174557600080fd5b8286015b848110156117605780358352918301918301611749565b509695505050505050565b60006001600160401b0382111561178457611784611697565b50601f01601f191660200190565b600082601f8301126117a357600080fd5b81356117b16117218261176b565b8181528460208386010111156117c657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126117f457600080fd5b81356020611804611721836116dd565b82815260059290921b8401810191818101908684111561182357600080fd5b8286015b848110156117605780356001600160401b038111156118465760008081fd5b6118548986838b0101611792565b845250918301918301611827565b6000806040838503121561187557600080fd5b82356001600160401b038082111561188c57600080fd5b61189886838701611700565b935060208501359150808211156118ae57600080fd5b506118bb858286016117e3565b9150509250929050565b80356001600160a01b03811681146118dc57600080fd5b919050565b600082601f8301126118f257600080fd5b81356020611902611721836116dd565b82815260059290921b8401810191818101908684111561192157600080fd5b8286015b8481101561176057611936816118c5565b8352918301918301611925565b803580151581146118dc57600080fd5b600082601f83011261196457600080fd5b81356020611974611721836116dd565b82815260059290921b8401810191818101908684111561199357600080fd5b8286015b84811015611760576119a881611943565b8352918301918301611997565b600080600080600060a086880312156119cd57600080fd5b85356001600160401b03808211156119e457600080fd5b6119f089838a016118e1565b96506020880135915080821115611a0657600080fd5b611a1289838a016118e1565b95506040880135915080821115611a2857600080fd5b611a3489838a01611700565b94506060880135915080821115611a4a57600080fd5b611a5689838a01611953565b93506080880135915080821115611a6c57600080fd5b50611a79888289016117e3565b9150509295509295909350565b60008060408385031215611a9957600080fd5b611aa2836118c5565b946020939093013593505050565b600060208284031215611ac257600080fd5b81356001600160401b03811115611ad857600080fd5b611ae484828501611700565b949350505050565b60005b83811015611b07578181015183820152602001611aef565b50506000910152565b60008151808452611b28816020860160208601611aec565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b9157603f19888603018452611b7f858351611b10565b94509285019290850190600101611b63565b5092979650505050505050565b600060208284031215611bb057600080fd5b5035919050565b6020815260006116906020830184611b10565b60008060408385031215611bdd57600080fd5b611be6836118c5565b9150611bf4602084016118c5565b90509250929050565b600060208284031215611c0f57600080fd5b611690826118c5565b600080600080600060a08688031215611c3057600080fd5b611c39866118c5565b9450611c47602087016118c5565b935060408601359250611c5c60608701611943565b915060808601356001600160401b03811115611c7757600080fd5b611a7988828901611792565b60008060408385031215611c9657600080fd5b8235915060208301356001600160401b03811115611cb357600080fd5b6118bb85828601611792565b60008060008060808587031215611cd557600080fd5b84356001600160401b0380821115611cec57600080fd5b611cf888838901611792565b95506020870135915080821115611d0e57600080fd5b50611d1b87828801611792565b935050611d2a604086016118c5565b9396929550929360600135925050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561032057610320611d50565b600181811c90821680611d8d57607f821691505b6020821081036105b557634e487b7160e01b600052602260045260246000fd5b601f8211156103b257600081815260208120601f850160051c81016020861015611dd45750805b601f850160051c820191505b8181101561070e57828155600101611de0565b81516001600160401b03811115611e0c57611e0c611697565b611e2081611e1a8454611d79565b84611dad565b602080601f831160018114611e555760008415611e3d5750858301515b600019600386901b1c1916600185901b17855561070e565b600085815260208120601f198616915b82811015611e8457888601518255948401946001909101908401611e65565b5085821015611ea25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561032057610320611d50565b8381528215156020820152606060408201526000611ee66060830184611b10565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251611f77816048850160208701611aec565b9190910160480195945050505050565b828152604060208201526000611ae46040830184611b10565b600060208284031215611fb257600080fd5b81516001600160401b03811115611fc857600080fd5b8201601f81018413611fd957600080fd5b8051611fe76117218261176b565b818152856020838501011115611ffc57600080fd5b611ee6826020830160208601611aec56fea2646970667358221220068f02116379362f952bf3719df4b801831b2fb3aa728526e275e82ac9104ae864736f6c63430008110033",
    "sourceMap": "297:686:128:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:253:47;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1144:253:47;;;;;;;;1839:433:174;;;;;;:::i;:::-;;:::i;:::-;;1643:92:46;1713:15;;1643:92;;;4066:25:202;;;4054:2;4039:18;1643:92:46;3920:177:202;3980:746:46;;;;;;:::i;:::-;;:::i;1488:96::-;;;:::i;:::-;;;7238:4:202;7226:17;;;7208:36;;7196:2;7181:18;1488:96:46;7066:184:202;699:172:128;;;;;;:::i;:::-;;:::i;2471:138:46:-;;;;;;:::i;:::-;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;907:103:52:-;988:15;;907:103;;1058:133:174;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2841:333:46:-;;;;;;:::i;:::-;;:::i;1826:124::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1912:31:46;1886:7;1912:31;;;:19;:31;;;;;;;1826:124;1178:92:177;;;:::i;3268:653:46:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;;;;-1:-1:-1;;;;;673:6:177;601:85;;-1:-1:-1;;;;;11233:32:202;;;11215:51;;11203:2;11188:18;601:85:177;11069:203:202;877:104:128;;;;;;:::i;:::-;;:::i;1419:189:177:-;;;;;;:::i;:::-;;:::i;371:322:128:-;;;;;;:::i;:::-;;:::i;2668:114:46:-;;;;;;:::i;:::-;;:::i;1144:253:47:-;1291:4;-1:-1:-1;;;;;;1318:32:47;;-1:-1:-1;;;1318:32:47;;:72;;;1354:36;1378:11;1354:23;:36::i;:::-;1311:79;1144:253;-1:-1:-1;;1144:253:47:o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;12140:25:202::0;;;;12181:18;;;12174:34;12113:18;;2036:72:174::1;;;;;;;;1973:146;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;3980:746:46:-;4206:11;;4258:9;;4244:23;;;;:66;;;4297:6;:13;4283:10;:27;;4244:66;:108;;;;4340:5;:12;4326:10;:26;;4244:108;:149;;;;4382:4;:11;4368:10;:25;;4244:149;4227:235;;;4425:26;;-1:-1:-1;;;4425:26:46;;;;;;;;;;;4227:235;4477:9;4472:248;4496:10;4492:1;:14;4472:248;;;4655:54;4664:4;4669:1;4664:7;;;;;;;;:::i;:::-;;;;;;;4673:2;4676:1;4673:5;;;;;;;;:::i;:::-;;;;;;;4680:6;4687:1;4680:9;;;;;;;;:::i;:::-;;;;;;;4691:5;4697:1;4691:8;;;;;;;;:::i;:::-;;;;;;;4701:4;4706:1;4701:7;;;;;;;;:::i;:::-;;;;;;;4655:8;:54::i;:::-;2841:1:174;2837:5;4472:248:46;;;;4175:551;3980:746;;;;;:::o;1488:96::-;1553:15;;1529:5;;1553:15;;:24;;-1:-1:-1;1575:2:46;;1488:96::o;1553:24::-;-1:-1:-1;1571:1:46;;1488:96::o;699:172:128:-;816:48;822:2;826:6;834:4;816:48;;;;;;;;;;;;;-1:-1:-1;;;816:48:128;;;:5;:48::i;:::-;699:172;;:::o;2471:138:46:-;2557:45;2573:10;2585:8;2595:6;2557:15;:45::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;1058:133::-;1121:22;1167:17;1176:7;1167:8;:17::i;2841:333:46:-;2969:7;3010:8;-1:-1:-1;;;;;2996:22:46;:10;-1:-1:-1;;;;;2996:22:46;;2992:176;;-1:-1:-1;;;;;;3041:31:46;;;;;;:19;:31;;;;;;3034:38;;2992:176;-1:-1:-1;;;;;;3110:37:46;;;;;;;:25;:37;;;;;;;;:47;;;;;;;;;;2841:333;;;;:::o;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;3268:653:46:-;3442:2;-1:-1:-1;;;;;3434:10:46;:4;-1:-1:-1;;;;;3434:10:46;;3430:45;;3453:22;;-1:-1:-1;;;3453:22:46;;;;;;;;;;;3430:45;3505:10;-1:-1:-1;;;;;3529:16:46;;;;3525:339;;-1:-1:-1;;;;;3586:31:46;;;3561:22;3586:31;;;:25;:31;;;;;;;;:41;;;;;;;;;;3645:23;;;3641:142;;;3695:73;;-1:-1:-1;;;3695:73:46;;-1:-1:-1;;;;;12638:15:202;;;3695:73:46;;;12620:34:202;12670:18;;;12663:34;;;12733:15;;12713:18;;;12706:43;12765:18;;;12758:34;;;12554:19;;3695:73:46;12351:447:202;3641:142:46;3797:56;3813:4;3819:8;3829:23;3846:6;3829:14;:23;:::i;:::-;3797:15;:56::i;:::-;3547:317;3525:339;3874:40;3884:4;3890:2;3894:6;3902:5;3909:4;3874:9;:40::i;:::-;3420:501;3268:653;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;877:104:128:-:0;938:36;944:4;950:6;938:36;;;;;;;;;;;;;-1:-1:-1;;;938:36:128;;;:5;:36::i;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;13270:2:202;1499:73:177::1;::::0;::::1;13252:21:202::0;13309:2;13289:18;;;13282:30;13348:34;13328:18;;;13321:62;-1:-1:-1;;;13399:18:202;;;13392:36;13445:19;;1499:73:177::1;13068:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;371:322:128:-;3111:19:181;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:181;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:181;1476:19:182;:23;;;3219:66:181;;-1:-1:-1;3268:12:181;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:181;;13677:2:202;3157:201:181;;;13659:21:202;13716:2;13696:18;;;13689:30;13755:34;13735:18;;;13728:62;-1:-1:-1;;;13806:18:202;;;13799:44;13860:19;;3157:201:181;13475:410:202;3157:201:181;3368:12;:16;;-1:-1:-1;;3368:16:181;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:181;;;;;3394:65;550:70:128::1;591:4;597:6;605:8;615:4;550:40;:70::i;:::-;630:56;671:14;630:40;:56::i;:::-;3483:14:181::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:181;;;3553:14;;-1:-1:-1;7208:36:202;;3553:14:181;;7196:2:202;7181:18;3553:14:181;;;;;;;3479:99;3101:483;371:322:128;;;;:::o;2668:114:46:-;2735:40;2751:10;2763:8;2773:1;2735:15;:40::i;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;1681:128:177;647:7;673:6;-1:-1:-1;;;;;673:6:177;;;;;1755:10;1744:21;1736:66;;;;-1:-1:-1;;;1736:66:177;;14291:2:202;1736:66:177;;;14273:21:202;;;14310:18;;;14303:30;14369:34;14349:18;;;14342:62;14421:18;;1736:66:177;14089:356:202;1464:517:31;1563:31;;;1559:416;;1617:26;;-1:-1:-1;;;1617:26:31;;;;;;;;;;;1559:416;1664:33;;;1660:315;;1720:28;;-1:-1:-1;;;1720:28:31;;;;;;;;;;;1660:315;1779:15;;;;:6;:15;;;;;:27;1797:9;1779:15;:27;:::i;:::-;;1854:7;1825:139;1899:3;1879:9;:16;:23;;:71;;1917:33;1932:9;1943:1;1946:3;1917:14;:33::i;:::-;1879:71;;;1905:9;1879:71;1825:139;;;;;;:::i;:::-;;;;;;;;1464:517;;:::o;1308:315:52:-;988:15;;1476:6;1460:13;1713:15:46;;;1643:92;1460:13:52;:22;;;;:::i;:::-;:41;1456:114;;;1524:35;;-1:-1:-1;;;1524:35:52;;;;;;;;;;;1456:114;1580:36;1592:2;1596:6;1604:5;1611:4;1580:11;:36::i;:::-;1308:315;;;;:::o;5158:623:46:-;-1:-1:-1;;;;;5298:22:46;;5294:96;;5343:36;;-1:-1:-1;;;5343:36:46;;;;;;;;;;;5294:96;5487:10;-1:-1:-1;;;;;5475:22:46;:8;-1:-1:-1;;;;;5475:22:46;;5471:59;;5158:623;;;:::o;5471:59::-;-1:-1:-1;;;;;5540:37:46;;;;;;;:25;:37;;;;;;;;:47;;;;;;;;;:56;;;5611:11;;5607:168;;5684:6;5672:10;-1:-1:-1;;;;;5643:48:46;5662:8;-1:-1:-1;;;;;5643:48:46;;;;;;;;;;;2129:137:174::1;1839:433:::0;;:::o;5607:168:46:-;5753:10;-1:-1:-1;;;;;5727:37:46;5743:8;-1:-1:-1;;;;;5727:37:46;;;;;;;;;;;5158:623;;;:::o;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;1948:235:177:-;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;;;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;2070:6;2090:17;;;-1:-1:-1;;;;;;2090:17:177;;;;;2126:40;;2070:6;;;;;;;2090:17;;2070:6;;2126:40;;;2037:140;1948:235;:::o;8390:799:46:-;-1:-1:-1;;;;;8559:18:46;;;;:38;;-1:-1:-1;;;;;;8581:16:46;;;8559:38;8555:107;;;8620:31;;-1:-1:-1;;;8620:31:46;;;;;;;;;;;8555:107;-1:-1:-1;;;;;8690:25:46;;8672:15;8690:25;;;:19;:25;;;;;;8729:16;;;8725:101;;;8768:47;;-1:-1:-1;;;8768:47:46;;;;;17365:25:202;;;-1:-1:-1;;;;;17426:32:202;;17406:18;;;17399:60;17475:18;;;17468:34;;;17338:18;;8768:47:46;17163:345:202;8725:101:46;8855:10;-1:-1:-1;;;;;8925:25:46;;;;;;:19;:25;;;;;:35;;8954:6;;8925:25;:35;;8954:6;;8925:35;:::i;:::-;;;;-1:-1:-1;;;;;;;8970:23:46;;;;;;:19;:23;;;;;:33;;8997:6;;8970:23;:33;;8997:6;;8970:33;:::i;:::-;;;;;;;;9044:2;-1:-1:-1;;;;;9019:49:46;9038:4;-1:-1:-1;;;;;9019:49:46;9028:8;-1:-1:-1;;;;;9019:49:46;;9048:6;9056:5;9063:4;9019:49;;;;;;;;:::i;:::-;;;;;;;;9079:42;9098:4;9104:2;9108:6;9116:4;9079:18;:42::i;:::-;9131:51;9152:4;9158:2;9162:6;9170:5;9177:4;9131:20;:51::i;6906:1070::-;-1:-1:-1;;;;;7031:18:46;;7027:87;;7072:31;;-1:-1:-1;;;7072:31:46;;;;;;;;;;;7027:87;-1:-1:-1;;;;;7142:25:46;;7124:15;7142:25;;;:19;:25;;;;;;7181:16;;;7177:101;;;7220:47;;-1:-1:-1;;;7220:47:46;;;;;17365:25:202;;;-1:-1:-1;;;;;17426:32:202;;17406:18;;;17399:60;17475:18;;;17468:34;;;17338:18;;7220:47:46;17163:345:202;7177:101:46;7307:10;-1:-1:-1;;;;;7331:16:46;;;;7327:339;;-1:-1:-1;;;;;7390:31:46;;;7363:24;7390:31;;;:25;:31;;;;;;;;:41;;;;;;;;;;7449:25;;;7445:146;;;7501:75;;-1:-1:-1;;;7501:75:46;;-1:-1:-1;;;;;12638:15:202;;;7501:75:46;;;12620:34:202;12670:18;;;12663:34;;;12733:15;;12713:18;;;12706:43;12765:18;;;12758:34;;;12554:19;;7501:75:46;12351:447:202;7445:146:46;-1:-1:-1;;;;;7604:31:46;;;;;;;:25;:31;;;;;;;;:41;;;;;;;;;;;:51;;7649:6;;7604:31;:51;;7649:6;;7604:51;:::i;:::-;;;;-1:-1:-1;;;7327:339:46;7783:6;7764:15;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7800:25:46;;;;;;:19;:25;;;;;:35;;7829:6;;7800:25;:35;;7829:6;;7800:35;:::i;:::-;;;;;;;;7884:1;-1:-1:-1;;;;;7851:57:46;7870:4;-1:-1:-1;;;;;7851:57:46;7860:8;-1:-1:-1;;;;;7851:57:46;;7888:6;7896:5;7903:4;7851:57;;;;;;;;:::i;:::-;;;;;;;;7919:50;7938:4;7952:1;7956:6;7964:4;7919:18;:50::i;764:313:47:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;952:15:47::1;:33:::0;;-1:-1:-1;;952:33:47::1;::::0;::::1;;;::::0;;995:75:::1;1044:5:::0;1051:7;1060:9;995:48:::1;:75::i;520:224:52:-:0;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;614:15:52::1;633:1;614:20:::0;610:84:::1;;657:26;;-1:-1:-1::0;;;657:26:52::1;;;;;;;;;;;610:84;704:15;:33:::0;520:224::o;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;18501:2:202;9631:50:200;;;18483:21:202;18540:2;18520:18;;;18513:30;-1:-1:-1;;;18559:18:202;;;18552:44;18613:18;;9631:50:200;18299:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;18844:2:202;9691:63:200;;;18826:21:202;18883:2;18863:18;;;18856:30;-1:-1:-1;;;18902:18:202;;;18895:47;18959:18;;9691:63:200;18642:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;5980:575:46:-;-1:-1:-1;;;;;6123:16:46;;6119:85;;6162:31;;-1:-1:-1;;;6162:31:46;;;;;;;;;;;6119:85;6233:10;6359:6;6340:15;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6376:23:46;;;;;;:19;:23;;;;;:33;;6403:6;;6376:23;:33;;6403:6;;6376:33;:::i;:::-;;;;;;;;6456:2;-1:-1:-1;;;;;6425:55:46;6452:1;-1:-1:-1;;;;;6425:55:46;6434:8;-1:-1:-1;;;;;6425:55:46;;6460:6;6468:5;6475:4;6425:55;;;;;;;;:::i;:::-;;;;;;;;6491:57;6520:1;6524:2;6528:6;6536:5;6543:4;6491:20;:57::i;9925:418::-;10083:62;10121:4;-1:-1:-1;;;10083:37:46;:62::i;:::-;10079:258;;;10161:23;10204:4;10210:2;10214:6;10222:4;10187:40;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10187:40:46;;;;;;;;;;-1:-1:-1;;;10241:85:46;;10187:40;-1:-1:-1;;;;;;10241:46:46;;;;;:85;;249:66:44;;10187:40:46;;10241:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10241:85:46;;;;;;;;;;;;:::i;10633:679::-;10813:60;10851:2;-1:-1:-1;;;10813:37:46;:60::i;:::-;10809:497;;;10889:23;10932:4;10938:2;10942:6;10950:4;10915:40;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10915:40:46;;;;;;;;;;-1:-1:-1;;;10969:86:46;;10915:40;-1:-1:-1;;;;;;10969:44:46;;;;;:86;;415:66:44;;10915:40:46;;10969:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10969:86:46;;;;;;;;;;;;:::i;:::-;;10875:191;10809:497;;;11077:5;11072:234;;-1:-1:-1;;;;;11102:14:46;;;:19;11098:198;;11148:55;;-1:-1:-1;;;11148:55:46;;-1:-1:-1;;;;;11233:32:202;;11148:55:46;;;11215:51:202;11188:18;;11148:55:46;11069:203:202;11098:198:46;11249:32;;-1:-1:-1;;;11249:32:46;;-1:-1:-1;;;;;11233:32:202;;11249::46;;;11215:51:202;11188:18;;11249:32:46;11069:203:202;694:472:31;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;852:42:31::1;884:9;852:31;:42::i;:::-;956:78;231:66:29;971:29:31;;1002:31;;;;;;;;;;;;;-1:-1:-1::0;;;1002:31:31::1;;::::0;956:14:::1;:78::i;:::-;1045:50;476:66:29;1088:5:31::0;1045:14:::1;:50::i;:::-;1105:54;619:66:29;1150:7:31::0;1105:14:::1;:54::i;4680:811:1:-:0;4846:105;;;-1:-1:-1;;;;;;20677:33:202;;4846:105:1;;;;20659:52:202;;;;4846:105:1;;;;;;;;;;20632:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;743:233:175:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:202:o;497:127::-;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:275;700:2;694:9;765:2;746:13;;-1:-1:-1;;742:27:202;730:40;;-1:-1:-1;;;;;785:34:202;;821:22;;;782:62;779:88;;;847:18;;:::i;:::-;883:2;876:22;629:275;;-1:-1:-1;629:275:202:o;909:183::-;969:4;-1:-1:-1;;;;;994:6:202;991:30;988:56;;;1024:18;;:::i;:::-;-1:-1:-1;1069:1:202;1065:14;1081:4;1061:25;;909:183::o;1097:662::-;1151:5;1204:3;1197:4;1189:6;1185:17;1181:27;1171:55;;1222:1;1219;1212:12;1171:55;1258:6;1245:20;1284:4;1308:60;1324:43;1364:2;1324:43;:::i;:::-;1308:60;:::i;:::-;1402:15;;;1488:1;1484:10;;;;1472:23;;1468:32;;;1433:12;;;;1512:15;;;1509:35;;;1540:1;1537;1530:12;1509:35;1576:2;1568:6;1564:15;1588:142;1604:6;1599:3;1596:15;1588:142;;;1670:17;;1658:30;;1708:12;;;;1621;;1588:142;;;-1:-1:-1;1748:5:202;1097:662;-1:-1:-1;;;;;;1097:662:202:o;1764:186::-;1812:4;-1:-1:-1;;;;;1837:6:202;1834:30;1831:56;;;1867:18;;:::i;:::-;-1:-1:-1;1933:2:202;1912:15;-1:-1:-1;;1908:29:202;1939:4;1904:40;;1764:186::o;1955:462::-;1997:5;2050:3;2043:4;2035:6;2031:17;2027:27;2017:55;;2068:1;2065;2058:12;2017:55;2104:6;2091:20;2135:48;2151:31;2179:2;2151:31;:::i;2135:48::-;2208:2;2199:7;2192:19;2254:3;2247:4;2242:2;2234:6;2230:15;2226:26;2223:35;2220:55;;;2271:1;2268;2261:12;2220:55;2336:2;2329:4;2321:6;2317:17;2310:4;2301:7;2297:18;2284:55;2384:1;2359:16;;;2377:4;2355:27;2348:38;;;;2363:7;1955:462;-1:-1:-1;;;1955:462:202:o;2422:886::-;2474:5;2527:3;2520:4;2512:6;2508:17;2504:27;2494:55;;2545:1;2542;2535:12;2494:55;2581:6;2568:20;2607:4;2631:60;2647:43;2687:2;2647:43;:::i;2631:60::-;2725:15;;;2811:1;2807:10;;;;2795:23;;2791:32;;;2756:12;;;;2835:15;;;2832:35;;;2863:1;2860;2853:12;2832:35;2899:2;2891:6;2887:15;2911:368;2927:6;2922:3;2919:15;2911:368;;;3013:3;3000:17;-1:-1:-1;;;;;3036:11:202;3033:35;3030:125;;;3109:1;3138:2;3134;3127:14;3030:125;3180:56;3232:3;3227:2;3213:11;3205:6;3201:24;3197:33;3180:56;:::i;:::-;3168:69;;-1:-1:-1;3257:12:202;;;;2944;;2911:368;;3313:602;3440:6;3448;3501:2;3489:9;3480:7;3476:23;3472:32;3469:52;;;3517:1;3514;3507:12;3469:52;3557:9;3544:23;-1:-1:-1;;;;;3627:2:202;3619:6;3616:14;3613:34;;;3643:1;3640;3633:12;3613:34;3666:61;3719:7;3710:6;3699:9;3695:22;3666:61;:::i;:::-;3656:71;;3780:2;3769:9;3765:18;3752:32;3736:48;;3809:2;3799:8;3796:16;3793:36;;;3825:1;3822;3815:12;3793:36;;3848:61;3901:7;3890:8;3879:9;3875:24;3848:61;:::i;:::-;3838:71;;;3313:602;;;;;:::o;4102:173::-;4170:20;;-1:-1:-1;;;;;4219:31:202;;4209:42;;4199:70;;4265:1;4262;4255:12;4199:70;4102:173;;;:::o;4280:668::-;4334:5;4387:3;4380:4;4372:6;4368:17;4364:27;4354:55;;4405:1;4402;4395:12;4354:55;4441:6;4428:20;4467:4;4491:60;4507:43;4547:2;4507:43;:::i;4491:60::-;4585:15;;;4671:1;4667:10;;;;4655:23;;4651:32;;;4616:12;;;;4695:15;;;4692:35;;;4723:1;4720;4713:12;4692:35;4759:2;4751:6;4747:15;4771:148;4787:6;4782:3;4779:15;4771:148;;;4853:23;4872:3;4853:23;:::i;:::-;4841:36;;4897:12;;;;4804;;4771:148;;4953:160;5018:20;;5074:13;;5067:21;5057:32;;5047:60;;5103:1;5100;5093:12;5118:662;5169:5;5222:3;5215:4;5207:6;5203:17;5199:27;5189:55;;5240:1;5237;5230:12;5189:55;5276:6;5263:20;5302:4;5326:60;5342:43;5382:2;5342:43;:::i;5326:60::-;5420:15;;;5506:1;5502:10;;;;5490:23;;5486:32;;;5451:12;;;;5530:15;;;5527:35;;;5558:1;5555;5548:12;5527:35;5594:2;5586:6;5582:15;5606:145;5622:6;5617:3;5614:15;5606:145;;;5688:20;5704:3;5688:20;:::i;:::-;5676:33;;5729:12;;;;5639;;5606:145;;5785:1276;6011:6;6019;6027;6035;6043;6096:3;6084:9;6075:7;6071:23;6067:33;6064:53;;;6113:1;6110;6103:12;6064:53;6153:9;6140:23;-1:-1:-1;;;;;6223:2:202;6215:6;6212:14;6209:34;;;6239:1;6236;6229:12;6209:34;6262:61;6315:7;6306:6;6295:9;6291:22;6262:61;:::i;:::-;6252:71;;6376:2;6365:9;6361:18;6348:32;6332:48;;6405:2;6395:8;6392:16;6389:36;;;6421:1;6418;6411:12;6389:36;6444:63;6499:7;6488:8;6477:9;6473:24;6444:63;:::i;:::-;6434:73;;6560:2;6549:9;6545:18;6532:32;6516:48;;6589:2;6579:8;6576:16;6573:36;;;6605:1;6602;6595:12;6573:36;6628:63;6683:7;6672:8;6661:9;6657:24;6628:63;:::i;:::-;6618:73;;6744:2;6733:9;6729:18;6716:32;6700:48;;6773:2;6763:8;6760:16;6757:36;;;6789:1;6786;6779:12;6757:36;6812:60;6864:7;6853:8;6842:9;6838:24;6812:60;:::i;:::-;6802:70;;6925:3;6914:9;6910:19;6897:33;6881:49;;6955:2;6945:8;6942:16;6939:36;;;6971:1;6968;6961:12;6939:36;;6994:61;7047:7;7036:8;7025:9;7021:24;6994:61;:::i;:::-;6984:71;;;5785:1276;;;;;;;;:::o;7255:254::-;7323:6;7331;7384:2;7372:9;7363:7;7359:23;7355:32;7352:52;;;7400:1;7397;7390:12;7352:52;7423:29;7442:9;7423:29;:::i;:::-;7413:39;7499:2;7484:18;;;;7471:32;;-1:-1:-1;;;7255:254:202:o;7514:348::-;7598:6;7651:2;7639:9;7630:7;7626:23;7622:32;7619:52;;;7667:1;7664;7657:12;7619:52;7707:9;7694:23;-1:-1:-1;;;;;7732:6:202;7729:30;7726:50;;;7772:1;7769;7762:12;7726:50;7795:61;7848:7;7839:6;7828:9;7824:22;7795:61;:::i;:::-;7785:71;7514:348;-1:-1:-1;;;;7514:348:202:o;7867:250::-;7952:1;7962:113;7976:6;7973:1;7970:13;7962:113;;;8052:11;;;8046:18;8033:11;;;8026:39;7998:2;7991:10;7962:113;;;-1:-1:-1;;8109:1:202;8091:16;;8084:27;7867:250::o;8122:270::-;8163:3;8201:5;8195:12;8228:6;8223:3;8216:19;8244:76;8313:6;8306:4;8301:3;8297:14;8290:4;8283:5;8279:16;8244:76;:::i;:::-;8374:2;8353:15;-1:-1:-1;;8349:29:202;8340:39;;;;8381:4;8336:50;;8122:270;-1:-1:-1;;8122:270:202:o;8397:800::-;8557:4;8586:2;8626;8615:9;8611:18;8656:2;8645:9;8638:21;8679:6;8714;8708:13;8745:6;8737;8730:22;8783:2;8772:9;8768:18;8761:25;;8845:2;8835:6;8832:1;8828:14;8817:9;8813:30;8809:39;8795:53;;8883:2;8875:6;8871:15;8904:1;8914:254;8928:6;8925:1;8922:13;8914:254;;;9021:2;9017:7;9005:9;8997:6;8993:22;8989:36;8984:3;8977:49;9049:39;9081:6;9072;9066:13;9049:39;:::i;:::-;9039:49;-1:-1:-1;9146:12:202;;;;9111:15;;;;8950:1;8943:9;8914:254;;;-1:-1:-1;9185:6:202;;8397:800;-1:-1:-1;;;;;;;8397:800:202:o;9202:180::-;9261:6;9314:2;9302:9;9293:7;9289:23;9285:32;9282:52;;;9330:1;9327;9320:12;9282:52;-1:-1:-1;9353:23:202;;9202:180;-1:-1:-1;9202:180:202:o;9387:217::-;9534:2;9523:9;9516:21;9497:4;9554:44;9594:2;9583:9;9579:18;9571:6;9554:44;:::i;9609:260::-;9677:6;9685;9738:2;9726:9;9717:7;9713:23;9709:32;9706:52;;;9754:1;9751;9744:12;9706:52;9777:29;9796:9;9777:29;:::i;:::-;9767:39;;9825:38;9859:2;9848:9;9844:18;9825:38;:::i;:::-;9815:48;;9609:260;;;;;:::o;9874:186::-;9933:6;9986:2;9974:9;9965:7;9961:23;9957:32;9954:52;;;10002:1;9999;9992:12;9954:52;10025:29;10044:9;10025:29;:::i;10065:606::-;10166:6;10174;10182;10190;10198;10251:3;10239:9;10230:7;10226:23;10222:33;10219:53;;;10268:1;10265;10258:12;10219:53;10291:29;10310:9;10291:29;:::i;:::-;10281:39;;10339:38;10373:2;10362:9;10358:18;10339:38;:::i;:::-;10329:48;;10424:2;10413:9;10409:18;10396:32;10386:42;;10447:35;10478:2;10467:9;10463:18;10447:35;:::i;:::-;10437:45;;10533:3;10522:9;10518:19;10505:33;-1:-1:-1;;;;;10553:6:202;10550:30;10547:50;;;10593:1;10590;10583:12;10547:50;10616:49;10657:7;10648:6;10637:9;10633:22;10616:49;:::i;10676:388::-;10753:6;10761;10814:2;10802:9;10793:7;10789:23;10785:32;10782:52;;;10830:1;10827;10820:12;10782:52;10866:9;10853:23;10843:33;;10927:2;10916:9;10912:18;10899:32;-1:-1:-1;;;;;10946:6:202;10943:30;10940:50;;;10986:1;10983;10976:12;10940:50;11009:49;11050:7;11041:6;11030:9;11026:22;11009:49;:::i;11277:684::-;11383:6;11391;11399;11407;11460:3;11448:9;11439:7;11435:23;11431:33;11428:53;;;11477:1;11474;11467:12;11428:53;11517:9;11504:23;-1:-1:-1;;;;;11587:2:202;11579:6;11576:14;11573:34;;;11603:1;11600;11593:12;11573:34;11626:49;11667:7;11658:6;11647:9;11643:22;11626:49;:::i;:::-;11616:59;;11728:2;11717:9;11713:18;11700:32;11684:48;;11757:2;11747:8;11744:16;11741:36;;;11773:1;11770;11763:12;11741:36;;11796:51;11839:7;11828:8;11817:9;11813:24;11796:51;:::i;:::-;11786:61;;;11866:38;11900:2;11889:9;11885:18;11866:38;:::i;:::-;11277:684;;;;-1:-1:-1;11856:48:202;;11951:2;11936:18;11923:32;;-1:-1:-1;;11277:684:202:o;12219:127::-;12280:10;12275:3;12271:20;12268:1;12261:31;12311:4;12308:1;12301:15;12335:4;12332:1;12325:15;12803:127;12864:10;12859:3;12855:20;12852:1;12845:31;12895:4;12892:1;12885:15;12919:4;12916:1;12909:15;12935:128;13002:9;;;13023:11;;;13020:37;;;13037:18;;:::i;14450:380::-;14529:1;14525:12;;;;14572;;;14593:61;;14647:4;14639:6;14635:17;14625:27;;14593:61;14700:2;14692:6;14689:14;14669:18;14666:38;14663:161;;14746:10;14741:3;14737:20;14734:1;14727:31;14781:4;14778:1;14771:15;14809:4;14806:1;14799:15;14960:544;15061:2;15056:3;15053:11;15050:448;;;15097:1;15122:5;15118:2;15111:17;15167:4;15163:2;15153:19;15237:2;15225:10;15221:19;15218:1;15214:27;15208:4;15204:38;15273:4;15261:10;15258:20;15255:47;;;-1:-1:-1;15296:4:202;15255:47;15351:2;15346:3;15342:12;15339:1;15335:20;15329:4;15325:31;15315:41;;15406:82;15424:2;15417:5;15414:13;15406:82;;;15469:17;;;15450:1;15439:13;15406:82;;15680:1348;15804:3;15798:10;-1:-1:-1;;;;;15823:6:202;15820:30;15817:56;;;15853:18;;:::i;:::-;15882:96;15971:6;15931:38;15963:4;15957:11;15931:38;:::i;:::-;15925:4;15882:96;:::i;:::-;16033:4;;16097:2;16086:14;;16114:1;16109:662;;;;16815:1;16832:6;16829:89;;;-1:-1:-1;16884:19:202;;;16878:26;16829:89;-1:-1:-1;;15637:1:202;15633:11;;;15629:24;15625:29;15615:40;15661:1;15657:11;;;15612:57;16931:81;;16079:943;;16109:662;14907:1;14900:14;;;14944:4;14931:18;;-1:-1:-1;;16145:20:202;;;16262:236;16276:7;16273:1;16270:14;16262:236;;;16365:19;;;16359:26;16344:42;;16457:27;;;;16425:1;16413:14;;;;16292:19;;16262:236;;;16266:3;16526:6;16517:7;16514:19;16511:201;;;16587:19;;;16581:26;-1:-1:-1;;16670:1:202;16666:14;;;16682:3;16662:24;16658:37;16654:42;16639:58;16624:74;;16511:201;-1:-1:-1;;;;;16758:1:202;16742:14;;;16738:22;16725:36;;-1:-1:-1;15680:1348:202:o;17033:125::-;17098:9;;;17119:10;;;17116:36;;;17132:18;;:::i;17513:369::-;17710:6;17699:9;17692:25;17767:6;17760:14;17753:22;17748:2;17737:9;17733:18;17726:50;17812:2;17807;17796:9;17792:18;17785:30;17673:4;17832:44;17872:2;17861:9;17857:18;17849:6;17832:44;:::i;:::-;17824:52;17513:369;-1:-1:-1;;;;;17513:369:202:o;17887:407::-;18089:2;18071:21;;;18128:2;18108:18;;;18101:30;18167:34;18162:2;18147:18;;18140:62;-1:-1:-1;;;18233:2:202;18218:18;;18211:41;18284:3;18269:19;;17887:407::o;18988:577::-;19201:3;19233:26;19229:31;19302:2;19293:6;19289:2;19285:15;19281:24;19276:3;19269:37;19357:2;19348:6;19344:2;19340:15;19336:24;19331:2;19326:3;19322:12;19315:46;;19391:6;19386:2;19381:3;19377:12;19370:28;19427:6;19421:13;19443:75;19511:6;19506:2;19501:3;19497:12;19490:4;19482:6;19478:17;19443:75;:::i;:::-;19538:16;;;;19556:2;19534:25;;18988:577;-1:-1:-1;;;;;18988:577:202:o;19570:288::-;19745:6;19734:9;19727:25;19788:2;19783;19772:9;19768:18;19761:30;19708:4;19808:44;19848:2;19837:9;19833:18;19825:6;19808:44;:::i;19863:647::-;19942:6;19995:2;19983:9;19974:7;19970:23;19966:32;19963:52;;;20011:1;20008;20001:12;19963:52;20044:9;20038:16;-1:-1:-1;;;;;20069:6:202;20066:30;20063:50;;;20109:1;20106;20099:12;20063:50;20132:22;;20185:4;20177:13;;20173:27;-1:-1:-1;20163:55:202;;20214:1;20211;20204:12;20163:55;20243:2;20237:9;20268:48;20284:31;20312:2;20284:31;:::i;20268:48::-;20339:2;20332:5;20325:17;20379:7;20374:2;20369;20365;20361:11;20357:20;20354:33;20351:53;;;20400:1;20397;20390:12;20351:53;20413:67;20477:2;20472;20465:5;20461:14;20456:2;20452;20448:11;20413:67;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeOperator(address,uint256)": "47980aa3",
    "authorizedAmountFor(address,address)": "65aeaa95",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "initialize(string,string,address,uint256)": "f542033f",
    "mint(address,uint256)": "40c10f19",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address)": "fad8b32a",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenSupplyCap()": "52058d8a",
    "totalSupply()": "18160ddd",
    "transfer(address,address,uint256,bool,bytes)": "760d9bba",
    "transferBatch(address[],address[],uint256[],bool[],bytes[])": "2d7667c9",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"authorizedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LSP7AmountExceedsAuthorizedAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LSP7AmountExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CannotSendWithAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CappedSupplyCannotMintOverCap\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7CappedSupplyRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP7InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP7NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP7NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"authorizedAmountFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupplyCap\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP7AmountExceedsAuthorizedAmount(address,uint256,address,uint256)\":[{\"details\":\"reverts when `operator` of `tokenOwner` send an `amount` of tokens larger than the `authorizedAmount`.\"}],\"LSP7AmountExceedsBalance(uint256,address,uint256)\":[{\"details\":\"reverts when sending an `amount` of tokens larger than the current `balance` of the `tokenOwner`.\"}],\"LSP7CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` or `to` in a token transfer.\"}],\"LSP7CannotSendWithAddressZero()\":[{\"details\":\"reverts when one tries to send tokens to or from the zero address.\"}],\"LSP7CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP7InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP7NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP7NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,uint256)\":{\"details\":\"To avoid front-running and Allowance Double-Spend Exploit when increasing or decreasing the authorized amount of an operator, it is advised to:     1. call {revokeOperator} first, and     2. then re-call {authorizeOperator} with the new amount for more information, see: https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/\",\"params\":{\"amount\":\"The amount of tokens operator has access to.\",\"operator\":\"The address to authorize as an operator.\"}},\"authorizedAmountFor(address,address)\":{\"details\":\"Returns amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenOwner\":\"The token owner.\"},\"returns\":{\"_0\":\"The amount of tokens `operator` address has access to from `tokenOwner`.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation If the contract represents a NFT then 0 SHOULD be used, otherwise 18 is the common value NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {balanceOf} and {transfer}.\"},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address)\":{\"details\":\"Removes `operator` address as an operator of callers tokens. See {authorizedAmountFor}. Requirements - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenSupplyCap()\":{\"details\":\"Returns the number of tokens that can be minted\",\"returns\":{\"_0\":\"The number of tokens that can be minted\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,uint256,bool,bytes)\":{\"details\":\"Transfers `amount` of tokens from `from` to `to`. The `force` parameter will be used when notifying the token sender and receiver. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `amount` tokens must be owned by `from`. - If the caller is not `from`, it must be an operator for `from` with access to at least `amount` tokens. Emits a {Transfer} event.\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\"}},\"transferBatch(address[],address[],uint256[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `amount`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `amount` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - each `amount` tokens must be owned by `from`. - If the caller is not `from`, it must be an operator for `from` with access to at least `amount` tokens. Emits {Transfer} events.\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/Tokens/LSP7CappedSupplyInitTester.sol\":\"LSP7CappedSupplyInitTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol\":{\"keccak256\":\"0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2\",\"dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0xe6dbdc475a614af430b156c6aeaf8abec4f59ba797a5f2fdc0195ce02b40c460\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7688ca1c03796b9628738a516303326ba9707ad7194b5c7aa4c695c4d3be05eb\",\"dweb:/ipfs/QmW3r54evnufhicffsVN97XtUcA8rMqaihzVYNAVStNhLG\"]},\"contracts/LSP7DigitalAsset/LSP7Constants.sol\":{\"keccak256\":\"0x198bdf359a3e77ccd96ab1ddaac69160482ddbc30582c616b657b43442c8aea1\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://13fbd4e7ff24b7f8b1a3666c19f9e2648c9f9f357bb80cd8a09ee89d05921056\",\"dweb:/ipfs/QmRToHBUAzPeEfYzGFbaC8a5VxZgwh2Z8BWKdhuj91U6uz\"]},\"contracts/LSP7DigitalAsset/LSP7DigitalAssetCore.sol\":{\"keccak256\":\"0xb06d34a3e523d4ccc84e5c05ea423e1507e3ac00ed96cfd2d793b6b0b35b902b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://469783eca67736d610dbc4701354883e467dc36281b2959ea784d00808f00800\",\"dweb:/ipfs/QmewGXeH2GybQNQynJ36WvMKpeQjMetxsdGkTso8GfGep9\"]},\"contracts/LSP7DigitalAsset/LSP7DigitalAssetInitAbstract.sol\":{\"keccak256\":\"0x4fae4f29b304406cb4d9422ae459d4e80aecc9cce8d2e8be97664e522c4fcf13\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://04936c23bb111d09d8d47d2e28b297b615a6643c1fb731220fca44a2b269ad63\",\"dweb:/ipfs/QmXYYb9a9gsKQkP6dakQ3YedN9dXsEoh6p2Q6v9ca79K1K\"]},\"contracts/LSP7DigitalAsset/LSP7Errors.sol\":{\"keccak256\":\"0x3563addd742e0acb3a1499e09bec2d56c1f0bb099c4a2e73db91c1d8fb7bd91b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://0022c125f807fde9bc0b41d2e922f34891bb5837e50b45d094e628a03dbf00a0\",\"dweb:/ipfs/QmcQAwcBoyBSdv5DD5Br7KGvw4nFJM1gutJaZwRMBUc5jG\"]},\"contracts/LSP7DigitalAsset/extensions/LSP7CappedSupplyInitAbstract.sol\":{\"keccak256\":\"0xcc56e22ce07c8586902a1f8858d1a8c9a95972807d87d57c88c7851cbd2b07e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c904f26602691f4862e535911a3471c1bb7a979e5d2ab0a76b1bff6fe4e8c43b\",\"dweb:/ipfs/QmaHjMHCHpJPJkRwAULWnMwL8i9WfjQA33KPztgEryBTCQ\"]},\"contracts/Mocks/Tokens/LSP7CappedSupplyInitTester.sol\":{\"keccak256\":\"0xba8aa5000595dc55f52e12f035cc32a7f5513eca30e9ec26fbecaebabd409bcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a86c19bb6549b38d0e3d5cb8aa408e952d40d9aa2595938f1367a8dd5a7a33\",\"dweb:/ipfs/QmYXwKwB1A1STddMHnfT2nib7twkfkvLyWx6ovRzte2PJM\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol\":{\"keccak256\":\"0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551\",\"dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "authorizedAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LSP7AmountExceedsAuthorizedAmount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LSP7AmountExceedsBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP7CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP7CannotSendWithAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP7CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP7CappedSupplyCannotMintOverCap"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP7CappedSupplyRequired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP7InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP7NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP7NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "authorizedAmountFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupplyCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenSupplyCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amount",
              "type": "uint256[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeOperator(address,uint256)": {
            "details": "To avoid front-running and Allowance Double-Spend Exploit when increasing or decreasing the authorized amount of an operator, it is advised to:     1. call {revokeOperator} first, and     2. then re-call {authorizeOperator} with the new amount for more information, see: https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/",
            "params": {
              "amount": "The amount of tokens operator has access to.",
              "operator": "The address to authorize as an operator."
            }
          },
          "authorizedAmountFor(address,address)": {
            "details": "Returns amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator.",
            "params": {
              "operator": "The address to query operator status for.",
              "tokenOwner": "The token owner."
            },
            "returns": {
              "_0": "The amount of tokens `operator` address has access to from `tokenOwner`."
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation If the contract represents a NFT then 0 SHOULD be used, otherwise 18 is the common value NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {balanceOf} and {transfer}."
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address)": {
            "details": "Removes `operator` address as an operator of callers tokens. See {authorizedAmountFor}. Requirements - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator."
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenSupplyCap()": {
            "details": "Returns the number of tokens that can be minted",
            "returns": {
              "_0": "The number of tokens that can be minted"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,uint256,bool,bytes)": {
            "details": "Transfers `amount` of tokens from `from` to `to`. The `force` parameter will be used when notifying the token sender and receiver. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `amount` tokens must be owned by `from`. - If the caller is not `from`, it must be an operator for `from` with access to at least `amount` tokens. Emits a {Transfer} event.",
            "params": {
              "amount": "The amount of tokens to transfer.",
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address."
            }
          },
          "transferBatch(address[],address[],uint256[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `amount`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `amount` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - each `amount` tokens must be owned by `from`. - If the caller is not `from`, it must be an operator for `from` with access to at least `amount` tokens. Emits {Transfer} events.",
            "params": {
              "amount": "The amount of tokens to transfer.",
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Mocks/Tokens/LSP7CappedSupplyInitTester.sol": "LSP7CappedSupplyInitTester"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol": {
        "keccak256": "0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792",
        "urls": [
          "bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2",
          "dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol": {
        "keccak256": "0xe6dbdc475a614af430b156c6aeaf8abec4f59ba797a5f2fdc0195ce02b40c460",
        "urls": [
          "bzz-raw://7688ca1c03796b9628738a516303326ba9707ad7194b5c7aa4c695c4d3be05eb",
          "dweb:/ipfs/QmW3r54evnufhicffsVN97XtUcA8rMqaihzVYNAVStNhLG"
        ],
        "license": "MIT"
      },
      "contracts/LSP7DigitalAsset/LSP7Constants.sol": {
        "keccak256": "0x198bdf359a3e77ccd96ab1ddaac69160482ddbc30582c616b657b43442c8aea1",
        "urls": [
          "bzz-raw://13fbd4e7ff24b7f8b1a3666c19f9e2648c9f9f357bb80cd8a09ee89d05921056",
          "dweb:/ipfs/QmRToHBUAzPeEfYzGFbaC8a5VxZgwh2Z8BWKdhuj91U6uz"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP7DigitalAsset/LSP7DigitalAssetCore.sol": {
        "keccak256": "0xb06d34a3e523d4ccc84e5c05ea423e1507e3ac00ed96cfd2d793b6b0b35b902b",
        "urls": [
          "bzz-raw://469783eca67736d610dbc4701354883e467dc36281b2959ea784d00808f00800",
          "dweb:/ipfs/QmewGXeH2GybQNQynJ36WvMKpeQjMetxsdGkTso8GfGep9"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP7DigitalAsset/LSP7DigitalAssetInitAbstract.sol": {
        "keccak256": "0x4fae4f29b304406cb4d9422ae459d4e80aecc9cce8d2e8be97664e522c4fcf13",
        "urls": [
          "bzz-raw://04936c23bb111d09d8d47d2e28b297b615a6643c1fb731220fca44a2b269ad63",
          "dweb:/ipfs/QmXYYb9a9gsKQkP6dakQ3YedN9dXsEoh6p2Q6v9ca79K1K"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP7DigitalAsset/LSP7Errors.sol": {
        "keccak256": "0x3563addd742e0acb3a1499e09bec2d56c1f0bb099c4a2e73db91c1d8fb7bd91b",
        "urls": [
          "bzz-raw://0022c125f807fde9bc0b41d2e922f34891bb5837e50b45d094e628a03dbf00a0",
          "dweb:/ipfs/QmcQAwcBoyBSdv5DD5Br7KGvw4nFJM1gutJaZwRMBUc5jG"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP7DigitalAsset/extensions/LSP7CappedSupplyInitAbstract.sol": {
        "keccak256": "0xcc56e22ce07c8586902a1f8858d1a8c9a95972807d87d57c88c7851cbd2b07e0",
        "urls": [
          "bzz-raw://c904f26602691f4862e535911a3471c1bb7a979e5d2ab0a76b1bff6fe4e8c43b",
          "dweb:/ipfs/QmaHjMHCHpJPJkRwAULWnMwL8i9WfjQA33KPztgEryBTCQ"
        ],
        "license": "MIT"
      },
      "contracts/Mocks/Tokens/LSP7CappedSupplyInitTester.sol": {
        "keccak256": "0xba8aa5000595dc55f52e12f035cc32a7f5513eca30e9ec26fbecaebabd409bcd",
        "urls": [
          "bzz-raw://85a86c19bb6549b38d0e3d5cb8aa408e952d40d9aa2595938f1367a8dd5a7a33",
          "dweb:/ipfs/QmYXwKwB1A1STddMHnfT2nib7twkfkvLyWx6ovRzte2PJM"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol": {
        "keccak256": "0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45",
        "urls": [
          "bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551",
          "dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Mocks/Tokens/LSP7CappedSupplyInitTester.sol",
    "id": 16353,
    "exportedSymbols": {
      "LSP7CappedSupplyInitAbstract": [
        8972
      ],
      "LSP7CappedSupplyInitTester": [
        16352
      ],
      "LSP7DigitalAssetInitAbstract": [
        8680
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:951:128",
    "nodes": [
      {
        "id": 16287,
        "nodeType": "PragmaDirective",
        "src": "33:23:128",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16289,
        "nodeType": "ImportDirective",
        "src": "69:107:128",
        "nodes": [],
        "absolutePath": "contracts/LSP7DigitalAsset/LSP7DigitalAssetInitAbstract.sol",
        "file": "../../LSP7DigitalAsset/LSP7DigitalAssetInitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16353,
        "sourceUnit": 8681,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16288,
              "name": "LSP7DigitalAssetInitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8680,
              "src": "82:28:128",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16291,
        "nodeType": "ImportDirective",
        "src": "177:118:128",
        "nodes": [],
        "absolutePath": "contracts/LSP7DigitalAsset/extensions/LSP7CappedSupplyInitAbstract.sol",
        "file": "../../LSP7DigitalAsset/extensions/LSP7CappedSupplyInitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16353,
        "sourceUnit": 8973,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16290,
              "name": "LSP7CappedSupplyInitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8972,
              "src": "190:28:128",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16352,
        "nodeType": "ContractDefinition",
        "src": "297:686:128",
        "nodes": [
          {
            "id": 16322,
            "nodeType": "FunctionDefinition",
            "src": "371:322:128",
            "nodes": [],
            "body": {
              "id": 16321,
              "nodeType": "Block",
              "src": "540:153:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16309,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16295,
                        "src": "591:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 16310,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16297,
                        "src": "597:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 16311,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16299,
                        "src": "605:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "615:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 16306,
                        "name": "LSP7DigitalAssetInitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8680,
                        "src": "550:28:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP7DigitalAssetInitAbstract_$8680_$",
                          "typeString": "type(contract LSP7DigitalAssetInitAbstract)"
                        }
                      },
                      "id": 16308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "579:11:128",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8658,
                      "src": "550:40:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,string memory,address,bool)"
                      }
                    },
                    "id": 16313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:70:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16314,
                  "nodeType": "ExpressionStatement",
                  "src": "550:70:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16318,
                        "name": "tokenSupplyCap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16301,
                        "src": "671:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 16315,
                        "name": "LSP7CappedSupplyInitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8972,
                        "src": "630:28:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP7CappedSupplyInitAbstract_$8972_$",
                          "typeString": "type(contract LSP7CappedSupplyInitAbstract)"
                        }
                      },
                      "id": 16317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "659:11:128",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8927,
                      "src": "630:40:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 16319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:56:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16320,
                  "nodeType": "ExpressionStatement",
                  "src": "630:56:128"
                }
              ]
            },
            "functionSelector": "f542033f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16303,
                  "name": "initializer",
                  "nameLocations": [
                    "528:11:128"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43911,
                  "src": "528:11:128"
                },
                "nodeType": "ModifierInvocation",
                "src": "528:11:128"
              }
            ],
            "name": "initialize",
            "nameLocation": "380:10:128",
            "parameters": {
              "id": 16302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16295,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "414:4:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 16322,
                  "src": "400:18:128",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16294,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:6:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16297,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "442:6:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 16322,
                  "src": "428:20:128",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16296,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:6:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16299,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "466:8:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 16322,
                  "src": "458:16:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:128",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16301,
                  "mutability": "mutable",
                  "name": "tokenSupplyCap",
                  "nameLocation": "492:14:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 16322,
                  "src": "484:22:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "390:122:128"
            },
            "returnParameters": {
              "id": 16305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "540:0:128"
            },
            "scope": 16352,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 16337,
            "nodeType": "FunctionDefinition",
            "src": "699:172:128",
            "nodes": [],
            "body": {
              "id": 16336,
              "nodeType": "Block",
              "src": "748:123:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16330,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16324,
                        "src": "822:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16331,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16326,
                        "src": "826:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "834:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "746f6b656e207072696e74657220676f2062727272",
                        "id": 16333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "840:23:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        },
                        "value": "token printer go brrr"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        }
                      ],
                      "id": 16329,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8971
                      ],
                      "referencedDeclaration": 8971,
                      "src": "816:5:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bool,bytes memory)"
                      }
                    },
                    "id": 16334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "816:48:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16335,
                  "nodeType": "ExpressionStatement",
                  "src": "816:48:128"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "708:4:128",
            "parameters": {
              "id": 16327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16324,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "721:2:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 16337,
                  "src": "713:10:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "713:7:128",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "733:6:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 16337,
                  "src": "725:14:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "712:28:128"
            },
            "returnParameters": {
              "id": 16328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:128"
            },
            "scope": 16352,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16351,
            "nodeType": "FunctionDefinition",
            "src": "877:104:128",
            "nodes": [],
            "body": {
              "id": 16350,
              "nodeType": "Block",
              "src": "928:53:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16345,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16339,
                        "src": "944:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16346,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16341,
                        "src": "950:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6665656c20746865206275726e",
                        "id": 16347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "958:15:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        },
                        "value": "feel the burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        }
                      ],
                      "id": 16344,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8408,
                      "src": "938:5:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 16348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "938:36:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16349,
                  "nodeType": "ExpressionStatement",
                  "src": "938:36:128"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "886:4:128",
            "parameters": {
              "id": 16342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16339,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "899:4:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 16351,
                  "src": "891:12:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:128",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16341,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "913:6:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 16351,
                  "src": "905:14:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:30:128"
            },
            "returnParameters": {
              "id": 16343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "928:0:128"
            },
            "scope": 16352,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16292,
              "name": "LSP7CappedSupplyInitAbstract",
              "nameLocations": [
                "336:28:128"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8972,
              "src": "336:28:128"
            },
            "id": 16293,
            "nodeType": "InheritanceSpecifier",
            "src": "336:28:128"
          }
        ],
        "canonicalName": "LSP7CappedSupplyInitTester",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16352,
          8972,
          8680,
          8615,
          7815,
          4296,
          43546,
          43508,
          43840,
          46531,
          46594,
          43687,
          43991
        ],
        "name": "LSP7CappedSupplyInitTester",
        "nameLocation": "306:26:128",
        "scope": 16353,
        "usedErrors": [
          4301,
          4304,
          8691,
          8702,
          8705,
          8708,
          8711,
          8714,
          8719,
          8724,
          8903,
          8905,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 128
}