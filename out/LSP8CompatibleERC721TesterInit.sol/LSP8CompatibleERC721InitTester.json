{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "tokenURIValue",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612beb80620000f46000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636352211e1161010f578063a22cb465116100a2578063cf5182ba11610071578063cf5182ba1461044e578063e985e9c514610461578063f2fde38b1461049d578063fe9d9303146104b057600080fd5b8063a22cb465146103f5578063a3b261f214610408578063b88d4fde14610428578063c87b56dd1461043b57600080fd5b80637f23690c116100de5780637f23690c146103b05780638da5cb5b146103c357806394d008ef146103da57806395d89b41146103ed57600080fd5b80636352211e1461036f57806370a0823114610382578063715018a6146103955780637e87632c1461039d57600080fd5b8063217b22701161018757806349a6078d1161015657806349a6078d146103095780634e3e6e9c14610329578063511b69521461034957806354f6127f1461035c57600080fd5b8063217b2270146102bd57806323b872dd146102d05780632a3654a4146102e357806342842e0e146102f657600080fd5b80630b0c6d82116101c35780630b0c6d821461027257806314a6e2931461028557806318160ddd146102985780631eb40e21146102aa57600080fd5b806301ffc9a7146101f557806306fdde031461021d578063081812fc14610232578063095ea7b31461025d575b600080fd5b610208610203366004611fb6565b6104c3565b60405190151581526020015b60405180910390f35b610225610509565b6040516102149190612030565b610245610240366004612043565b610536565b6040516001600160a01b039091168152602001610214565b61027061026b366004612078565b61058d565b005b610270610280366004612078565b6105e4565b61027061029336600461226d565b610691565b6002545b604051908152602001610214565b6102706102b83660046122d0565b61071d565b6102456102cb366004612043565b61085f565b6102706102de366004612368565b610898565b6102086102f1366004612078565b6108b8565b610270610304366004612368565b6108d4565b61031c610317366004612043565b6108f4565b60405161021491906123a4565b61033c6103373660046123f1565b610916565b6040516102149190612425565b610270610357366004612497565b6109c9565b61022561036a366004612043565b610a18565b61024561037d366004612043565b610a23565b61029c61039036600461250f565b610a2e565b610270610a4f565b6102706103ab3660046125ee565b610a63565b6102706103be3660046126b2565b610b52565b6000546201000090046001600160a01b0316610245565b6102706103e8366004612736565b610b68565b610225610bae565b61027061040336600461278f565b610bdb565b61041b61041636600461250f565b610be6565b60405161021491906127c2565b6102706104363660046127fa565b610c0a565b610225610449366004612043565b610c18565b61027061045c366004612078565b610c66565b61020861046f366004612855565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6102706104ab36600461250f565b610c70565b6102706104be36600461287f565b610ce9565b60006001600160e01b031982166380ac58cd60e01b14806104f457506001600160e01b03198216635b5e139f60e01b145b80610503575061050382610d2c565b92915050565b606060006105037fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1610d51565b60008161054281610df3565b60008181526005602052604081209061055a82610e2b565b90508060000361056f57506000949350505050565b61058461057d6001836128e0565b8390610e35565b95945050505050565b6105978282610c66565b806001600160a01b0383166105ab8261085f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006105ef8261085f565b9050336001600160a01b038216811461063a57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661066157604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036106805750505050565b61068b848385610e41565b50505050565b610699610ed2565b80518251146106c857815181516040516321d1e13360e11b815260048101929092526024820152604401610631565b60005b8251811015610718576107108382815181106106e9576106e96128f3565b6020026020010151838381518110610703576107036128f3565b6020026020010151610f33565b6001016106cb565b505050565b600054610100900460ff161580801561073d5750600054600160ff909116105b806107575750303b158015610757575060005460ff166001145b6107ba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610631565b6000805460ff1916600117905580156107dd576000805461ff0019166101001790555b6107e8858585610f3d565b6108127f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e83610f33565b8015610858576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6000818152600360205260408120546001600160a01b03168061050357604051635747cd1b60e11b815260048101849052602401610631565b61071883838360001b600160405180602001604052806000815250610f6f565b60006108c382610df3565b6108cd838361102b565b9392505050565b61071883838360001b600060405180602001604052806000815250610f6f565b60606108ff82610df3565b600082815260056020526040902061050390611074565b606081516001600160401b03811115610931576109316120a2565b60405190808252806020026020018201604052801561096457816020015b606081526020019060019003908161094f5790505b50905060005b82518110156109c357610995838281518110610988576109886128f3565b6020026020010151610d51565b8282815181106109a7576109a76128f3565b60200260200101819052506109bc8160010190565b905061096a565b50919050565b336109d4818561102b565b610a0357604051631294d2a960e01b8152600481018590526001600160a01b0382166024820152604401610631565b610a108686868686610f6f565b505050505050565b606061050382610d51565b60006105038261085f565b6001600160a01b038116600090815260046020526040812061050390610e2b565b610a57610ed2565b610a616000611081565b565b8451845181141580610a76575083518114155b80610a82575082518114155b80610a8e575081518114155b15610aac576040516393a8311960e01b815260040160405180910390fd5b60005b81811015610b4957610b41878281518110610acc57610acc6128f3565b6020026020010151878381518110610ae657610ae66128f3565b6020026020010151878481518110610b0057610b006128f3565b6020026020010151878581518110610b1a57610b1a6128f3565b6020026020010151878681518110610b3457610b346128f3565b60200260200101516109c9565b600101610aaf565b50505050505050565b610b5a610ed2565b610b648282610f33565b5050565b61068b848460001b600185858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110f792505050565b606060006105037f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756610d51565b610b64338383611141565b6001600160a01b03811660009081526004602052604090206060906105039061121f565b61068b848484600085610f6f565b60606000610c457f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e610d51565b905060006024905060006105848383848651610c6191906128e0565b61122a565b6105978282611337565b610c78610ed2565b6001600160a01b038116610cdd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610631565b610ce681611081565b50565b6107188360001b83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061146092505050565b60006001600160e01b0319821663622e7a0160e01b14806105035750610503826114b4565b6000818152600160205260409020805460609190610d6e90612909565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9a90612909565b8015610de75780601f10610dbc57610100808354040283529160200191610de7565b820191906000526020600020905b815481529060010190602001808311610dca57829003601f168201915b50505050509050919050565b6000818152600360205260409020546001600160a01b0316610ce657604051635747cd1b60e11b815260048101829052602401610631565b6000610503825490565b60006108cd83836114e9565b6000818152600560205260408120610e599085611513565b905080610e8b576040516312a8c6a360e21b81526001600160a01b038516600482015260248101839052604401610631565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b0362010000909104163314610a615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610631565b610b648282611528565b600054610100900460ff16610f645760405162461bcd60e51b81526004016106319061293d565b61071883838361161c565b6001600160a01b03851660009081526007602090815260408083203380855292529091205460ff16158015610fab5750610fa9818561102b565b155b15610fdb57604051631294d2a960e01b8152600481018590526001600160a01b0382166024820152604401610631565b610fe8868686868661164e565b60405184906001600160a01b0380881691908916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050505050565b6000806110378361085f565b9050806001600160a01b0316846001600160a01b0316148061106c5750600083815260056020526040902061106c90856117d8565b949350505050565b606060006108cd836117fa565b6000546001600160a01b03828116620100009092041614610ce657600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b61110384848484611855565b60405183906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b816001600160a01b0316836001600160a01b0316036111b25760405162461bcd60e51b815260206004820152602760248201527f4c535038436f6d70617469626c654552433732313a20617070726f766520746f6044820152661031b0b63632b960c91b6064820152608401610631565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6060610503826117fa565b60608161123881601f612988565b10156112775760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610631565b6112818284612988565b845110156112c55760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610631565b6060821580156112e4576040519150600082526020820160405261132e565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561131d578051835260209283019201611305565b5050858452601f01601f1916604052505b50949350505050565b60006113428261085f565b9050336001600160a01b038216811461138857604051632d938f5160e11b81526001600160a01b0380841660048301526024820185905282166044820152606401610631565b6001600160a01b0384166113af57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036113ce5750505050565b60008381526005602052604081206113e69086611968565b905080611418576040516314ec4d6d60e31b81526001600160a01b038616600482015260248101859052604401610631565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b600061146b8361085f565b9050611477838361197d565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b60006001600160e01b03198216631c537ddf60e21b148061050357506301ffc9a760e01b6001600160e01b0319831614610503565b6000826000018281548110611500576115006128f3565b9060005260206000200154905092915050565b60006108cd836001600160a01b038416611a43565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201611568576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa82016115a857604051630eceab6760e31b815260040160405180910390fd5b60008281526001602052604090206115c082826129e1565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115611601576115fc83600061010061122a565b611603565b825b6040516116109190612030565b60405180910390a25050565b600054610100900460ff166116435760405162461bcd60e51b81526004016106319061293d565b610718838383611b36565b836001600160a01b0316856001600160a01b03160361168057604051635d67d6c160e01b815260040160405180910390fd5b600061168b8461085f565b9050856001600160a01b0316816001600160a01b0316146116d957604051632d938f5160e11b81526001600160a01b0380831660048301526024820186905287166044820152606401610631565b6001600160a01b038516611700576040516324ecef4d60e01b815260040160405180910390fd5b3361170b8786611c03565b6001600160a01b038716600090815260046020526040902061172d9086611c4a565b506001600160a01b03861660009081526004602052604090206117509086611c56565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906117b79086908a908a90612aa0565b60405180910390a46117cb87878786611c62565b610b498787878787611d36565b6001600160a01b038116600090815260018301602052604081205415156108cd565b606081600001805480602002602001604051908101604052809291908181526020018280548015610de757602002820191906000526020600020905b8154815260200190600101908083116118365750505050509050919050565b6001600160a01b03841661187c576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b0316156118b5576040516334c7b51160e01b815260048101849052602401610631565b336001600260008282546118c99190612988565b90915550506001600160a01b03851660009081526004602052604090206118f09085611c56565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061195290869089908990612aa0565b60405180910390a4610858600086868686611d36565b60006108cd836001600160a01b038416611e6e565b60006119888361085f565b90503360016002600082825461199e91906128e0565b909155506119ae90508285611c03565b6001600160a01b03821660009081526004602052604090206119d09085611c4a565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90611a2e90869085908a90612aa0565b60405180910390a461068b8260008686611c62565b60008181526001830160205260408120548015611b2c576000611a676001836128e0565b8554909150600090611a7b906001906128e0565b9050818114611ae0576000866000018281548110611a9b57611a9b6128f3565b9060005260206000200154905080876000018481548110611abe57611abe6128f3565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611af157611af1612acc565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610503565b6000915050610503565b600054610100900460ff16611b5d5760405162461bcd60e51b81526004016106319061293d565b611b6681611ebd565b611baf7feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611ee4565b611bd97fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611ee4565b6107187f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611ee4565b600081815260056020526040812090611c1b82610e2b565b905060005b81811015610858576000611c348482610e35565b9050611c41818787610e41565b50600101611c20565b60006108cd8383611a43565b60006108cd8383611e6e565b611c7384631aed5a8560e21b611f2d565b1561068b57600084848484604051602001611c919493929190612ae2565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611cef907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401612b2f565b6000604051808303816000875af1158015611d0e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a109190810190612b48565b611d4784631aed5a8560e21b611f2d565b15611e1157600085858584604051602001611d659493929190612ae2565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611dc3907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612b2f565b6000604051808303816000875af1158015611de2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e0a9190810190612b48565b5050610858565b81610858576001600160a01b0384163b15611e4a57604051634349776d60e01b81526001600160a01b0385166004820152602401610631565b604051630317313760e01b81526001600160a01b0385166004820152602401610631565b6000818152600183016020526040812054611eb557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610503565b506000610503565b600054610100900460ff16610c785760405162461bcd60e51b81526004016106319061293d565b6000828152600160205260409020611efc82826129e1565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516116109190612030565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611f9f575060208210155b8015611fab5750600081115b979650505050505050565b600060208284031215611fc857600080fd5b81356001600160e01b0319811681146108cd57600080fd5b60005b83811015611ffb578181015183820152602001611fe3565b50506000910152565b6000815180845261201c816020860160208601611fe0565b601f01601f19169290920160200192915050565b6020815260006108cd6020830184612004565b60006020828403121561205557600080fd5b5035919050565b80356001600160a01b038116811461207357600080fd5b919050565b6000806040838503121561208b57600080fd5b6120948361205c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156120e0576120e06120a2565b604052919050565b60006001600160401b03821115612101576121016120a2565b5060051b60200190565b600082601f83011261211c57600080fd5b8135602061213161212c836120e8565b6120b8565b82815260059290921b8401810191818101908684111561215057600080fd5b8286015b8481101561216b5780358352918301918301612154565b509695505050505050565b60006001600160401b0382111561218f5761218f6120a2565b50601f01601f191660200190565b600082601f8301126121ae57600080fd5b81356121bc61212c82612176565b8181528460208386010111156121d157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126121ff57600080fd5b8135602061220f61212c836120e8565b82815260059290921b8401810191818101908684111561222e57600080fd5b8286015b8481101561216b5780356001600160401b038111156122515760008081fd5b61225f8986838b010161219d565b845250918301918301612232565b6000806040838503121561228057600080fd5b82356001600160401b038082111561229757600080fd5b6122a38683870161210b565b935060208501359150808211156122b957600080fd5b506122c6858286016121ee565b9150509250929050565b600080600080608085870312156122e657600080fd5b84356001600160401b03808211156122fd57600080fd5b6123098883890161219d565b9550602087013591508082111561231f57600080fd5b61232b8883890161219d565b94506123396040880161205c565b9350606087013591508082111561234f57600080fd5b5061235c8782880161219d565b91505092959194509250565b60008060006060848603121561237d57600080fd5b6123868461205c565b92506123946020850161205c565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156123e55783516001600160a01b0316835292840192918401916001016123c0565b50909695505050505050565b60006020828403121561240357600080fd5b81356001600160401b0381111561241957600080fd5b61106c8482850161210b565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561247a57603f19888603018452612468858351612004565b9450928501929085019060010161244c565b5092979650505050505050565b8035801515811461207357600080fd5b600080600080600060a086880312156124af57600080fd5b6124b88661205c565b94506124c66020870161205c565b9350604086013592506124db60608701612487565b915060808601356001600160401b038111156124f657600080fd5b6125028882890161219d565b9150509295509295909350565b60006020828403121561252157600080fd5b6108cd8261205c565b600082601f83011261253b57600080fd5b8135602061254b61212c836120e8565b82815260059290921b8401810191818101908684111561256a57600080fd5b8286015b8481101561216b5761257f8161205c565b835291830191830161256e565b600082601f83011261259d57600080fd5b813560206125ad61212c836120e8565b82815260059290921b840181019181810190868411156125cc57600080fd5b8286015b8481101561216b576125e181612487565b83529183019183016125d0565b600080600080600060a0868803121561260657600080fd5b85356001600160401b038082111561261d57600080fd5b61262989838a0161252a565b9650602088013591508082111561263f57600080fd5b61264b89838a0161252a565b9550604088013591508082111561266157600080fd5b61266d89838a0161210b565b9450606088013591508082111561268357600080fd5b61268f89838a0161258c565b935060808801359150808211156126a557600080fd5b50612502888289016121ee565b600080604083850312156126c557600080fd5b8235915060208301356001600160401b038111156126e257600080fd5b6122c68582860161219d565b60008083601f84011261270057600080fd5b5081356001600160401b0381111561271757600080fd5b60208301915083602082850101111561272f57600080fd5b9250929050565b6000806000806060858703121561274c57600080fd5b6127558561205c565b93506020850135925060408501356001600160401b0381111561277757600080fd5b612783878288016126ee565b95989497509550505050565b600080604083850312156127a257600080fd5b6127ab8361205c565b91506127b960208401612487565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156123e5578351835292840192918401916001016127de565b6000806000806080858703121561281057600080fd5b6128198561205c565b93506128276020860161205c565b92506040850135915060608501356001600160401b0381111561284957600080fd5b61235c8782880161219d565b6000806040838503121561286857600080fd5b6128718361205c565b91506127b96020840161205c565b60008060006040848603121561289457600080fd5b8335925060208401356001600160401b038111156128b157600080fd5b6128bd868287016126ee565b9497909650939450505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610503576105036128ca565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061291d57607f821691505b6020821081036109c357634e487b7160e01b600052602260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b80820180821115610503576105036128ca565b601f82111561071857600081815260208120601f850160051c810160208610156129c25750805b601f850160051c820191505b81811015610a10578281556001016129ce565b81516001600160401b038111156129fa576129fa6120a2565b612a0e81612a088454612909565b8461299b565b602080601f831160018114612a435760008415612a2b5750858301515b600019600386901b1c1916600185901b178555610a10565b600085815260208120601f198616915b82811015612a7257888601518255948401946001909101908401612a53565b5085821015612a905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152821515602082015260606040820181905260009061058490830184612004565b634e487b7160e01b600052603160045260246000fd5b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251612b1f816048850160208701611fe0565b9190910160480195945050505050565b82815260406020820152600061106c6040830184612004565b600060208284031215612b5a57600080fd5b81516001600160401b03811115612b7057600080fd5b8201601f81018413612b8157600080fd5b8051612b8f61212c82612176565b818152856020838501011115612ba457600080fd5b610584826020830160208601611fe056fea264697066735822122026d0cc03b77ba744e9ec8f1e9e27024f40a7143e3f4e9e72fae6f7a0d429bcbb64736f6c63430008110033",
    "sourceMap": "428:878:137:-:0;;;601:53;;;;;;;;;-1:-1:-1;625:22:137;:20;:22::i;:::-;428:878;;5388:279:181;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:181;;216:2:202;5447:66:181;;;198:21:202;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:202;;;338:37;392:19;;5447:66:181;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:181;5588:15;5573:30;;;;;;5622:28;;564:36:202;;;5622:28:181;;552:2:202;537:18;5622:28:181;;;;;;;5523:138;5388:279::o;422:184:202:-;428:878:137;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80636352211e1161010f578063a22cb465116100a2578063cf5182ba11610071578063cf5182ba1461044e578063e985e9c514610461578063f2fde38b1461049d578063fe9d9303146104b057600080fd5b8063a22cb465146103f5578063a3b261f214610408578063b88d4fde14610428578063c87b56dd1461043b57600080fd5b80637f23690c116100de5780637f23690c146103b05780638da5cb5b146103c357806394d008ef146103da57806395d89b41146103ed57600080fd5b80636352211e1461036f57806370a0823114610382578063715018a6146103955780637e87632c1461039d57600080fd5b8063217b22701161018757806349a6078d1161015657806349a6078d146103095780634e3e6e9c14610329578063511b69521461034957806354f6127f1461035c57600080fd5b8063217b2270146102bd57806323b872dd146102d05780632a3654a4146102e357806342842e0e146102f657600080fd5b80630b0c6d82116101c35780630b0c6d821461027257806314a6e2931461028557806318160ddd146102985780631eb40e21146102aa57600080fd5b806301ffc9a7146101f557806306fdde031461021d578063081812fc14610232578063095ea7b31461025d575b600080fd5b610208610203366004611fb6565b6104c3565b60405190151581526020015b60405180910390f35b610225610509565b6040516102149190612030565b610245610240366004612043565b610536565b6040516001600160a01b039091168152602001610214565b61027061026b366004612078565b61058d565b005b610270610280366004612078565b6105e4565b61027061029336600461226d565b610691565b6002545b604051908152602001610214565b6102706102b83660046122d0565b61071d565b6102456102cb366004612043565b61085f565b6102706102de366004612368565b610898565b6102086102f1366004612078565b6108b8565b610270610304366004612368565b6108d4565b61031c610317366004612043565b6108f4565b60405161021491906123a4565b61033c6103373660046123f1565b610916565b6040516102149190612425565b610270610357366004612497565b6109c9565b61022561036a366004612043565b610a18565b61024561037d366004612043565b610a23565b61029c61039036600461250f565b610a2e565b610270610a4f565b6102706103ab3660046125ee565b610a63565b6102706103be3660046126b2565b610b52565b6000546201000090046001600160a01b0316610245565b6102706103e8366004612736565b610b68565b610225610bae565b61027061040336600461278f565b610bdb565b61041b61041636600461250f565b610be6565b60405161021491906127c2565b6102706104363660046127fa565b610c0a565b610225610449366004612043565b610c18565b61027061045c366004612078565b610c66565b61020861046f366004612855565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6102706104ab36600461250f565b610c70565b6102706104be36600461287f565b610ce9565b60006001600160e01b031982166380ac58cd60e01b14806104f457506001600160e01b03198216635b5e139f60e01b145b80610503575061050382610d2c565b92915050565b606060006105037fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1610d51565b60008161054281610df3565b60008181526005602052604081209061055a82610e2b565b90508060000361056f57506000949350505050565b61058461057d6001836128e0565b8390610e35565b95945050505050565b6105978282610c66565b806001600160a01b0383166105ab8261085f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006105ef8261085f565b9050336001600160a01b038216811461063a57604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661066157604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036106805750505050565b61068b848385610e41565b50505050565b610699610ed2565b80518251146106c857815181516040516321d1e13360e11b815260048101929092526024820152604401610631565b60005b8251811015610718576107108382815181106106e9576106e96128f3565b6020026020010151838381518110610703576107036128f3565b6020026020010151610f33565b6001016106cb565b505050565b600054610100900460ff161580801561073d5750600054600160ff909116105b806107575750303b158015610757575060005460ff166001145b6107ba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610631565b6000805460ff1916600117905580156107dd576000805461ff0019166101001790555b6107e8858585610f3d565b6108127f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e83610f33565b8015610858576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6000818152600360205260408120546001600160a01b03168061050357604051635747cd1b60e11b815260048101849052602401610631565b61071883838360001b600160405180602001604052806000815250610f6f565b60006108c382610df3565b6108cd838361102b565b9392505050565b61071883838360001b600060405180602001604052806000815250610f6f565b60606108ff82610df3565b600082815260056020526040902061050390611074565b606081516001600160401b03811115610931576109316120a2565b60405190808252806020026020018201604052801561096457816020015b606081526020019060019003908161094f5790505b50905060005b82518110156109c357610995838281518110610988576109886128f3565b6020026020010151610d51565b8282815181106109a7576109a76128f3565b60200260200101819052506109bc8160010190565b905061096a565b50919050565b336109d4818561102b565b610a0357604051631294d2a960e01b8152600481018590526001600160a01b0382166024820152604401610631565b610a108686868686610f6f565b505050505050565b606061050382610d51565b60006105038261085f565b6001600160a01b038116600090815260046020526040812061050390610e2b565b610a57610ed2565b610a616000611081565b565b8451845181141580610a76575083518114155b80610a82575082518114155b80610a8e575081518114155b15610aac576040516393a8311960e01b815260040160405180910390fd5b60005b81811015610b4957610b41878281518110610acc57610acc6128f3565b6020026020010151878381518110610ae657610ae66128f3565b6020026020010151878481518110610b0057610b006128f3565b6020026020010151878581518110610b1a57610b1a6128f3565b6020026020010151878681518110610b3457610b346128f3565b60200260200101516109c9565b600101610aaf565b50505050505050565b610b5a610ed2565b610b648282610f33565b5050565b61068b848460001b600185858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110f792505050565b606060006105037f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756610d51565b610b64338383611141565b6001600160a01b03811660009081526004602052604090206060906105039061121f565b61068b848484600085610f6f565b60606000610c457f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e610d51565b905060006024905060006105848383848651610c6191906128e0565b61122a565b6105978282611337565b610c78610ed2565b6001600160a01b038116610cdd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610631565b610ce681611081565b50565b6107188360001b83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061146092505050565b60006001600160e01b0319821663622e7a0160e01b14806105035750610503826114b4565b6000818152600160205260409020805460609190610d6e90612909565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9a90612909565b8015610de75780601f10610dbc57610100808354040283529160200191610de7565b820191906000526020600020905b815481529060010190602001808311610dca57829003601f168201915b50505050509050919050565b6000818152600360205260409020546001600160a01b0316610ce657604051635747cd1b60e11b815260048101829052602401610631565b6000610503825490565b60006108cd83836114e9565b6000818152600560205260408120610e599085611513565b905080610e8b576040516312a8c6a360e21b81526001600160a01b038516600482015260248101839052604401610631565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b6000546001600160a01b0362010000909104163314610a615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610631565b610b648282611528565b600054610100900460ff16610f645760405162461bcd60e51b81526004016106319061293d565b61071883838361161c565b6001600160a01b03851660009081526007602090815260408083203380855292529091205460ff16158015610fab5750610fa9818561102b565b155b15610fdb57604051631294d2a960e01b8152600481018590526001600160a01b0382166024820152604401610631565b610fe8868686868661164e565b60405184906001600160a01b0380881691908916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4505050505050565b6000806110378361085f565b9050806001600160a01b0316846001600160a01b0316148061106c5750600083815260056020526040902061106c90856117d8565b949350505050565b606060006108cd836117fa565b6000546001600160a01b03828116620100009092041614610ce657600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b61110384848484611855565b60405183906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b816001600160a01b0316836001600160a01b0316036111b25760405162461bcd60e51b815260206004820152602760248201527f4c535038436f6d70617469626c654552433732313a20617070726f766520746f6044820152661031b0b63632b960c91b6064820152608401610631565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6060610503826117fa565b60608161123881601f612988565b10156112775760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610631565b6112818284612988565b845110156112c55760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610631565b6060821580156112e4576040519150600082526020820160405261132e565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561131d578051835260209283019201611305565b5050858452601f01601f1916604052505b50949350505050565b60006113428261085f565b9050336001600160a01b038216811461138857604051632d938f5160e11b81526001600160a01b0380841660048301526024820185905282166044820152606401610631565b6001600160a01b0384166113af57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036113ce5750505050565b60008381526005602052604081206113e69086611968565b905080611418576040516314ec4d6d60e31b81526001600160a01b038616600482015260248101859052604401610631565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b600061146b8361085f565b9050611477838361197d565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b60006001600160e01b03198216631c537ddf60e21b148061050357506301ffc9a760e01b6001600160e01b0319831614610503565b6000826000018281548110611500576115006128f3565b9060005260206000200154905092915050565b60006108cd836001600160a01b038416611a43565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201611568576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa82016115a857604051630eceab6760e31b815260040160405180910390fd5b60008281526001602052604090206115c082826129e1565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115611601576115fc83600061010061122a565b611603565b825b6040516116109190612030565b60405180910390a25050565b600054610100900460ff166116435760405162461bcd60e51b81526004016106319061293d565b610718838383611b36565b836001600160a01b0316856001600160a01b03160361168057604051635d67d6c160e01b815260040160405180910390fd5b600061168b8461085f565b9050856001600160a01b0316816001600160a01b0316146116d957604051632d938f5160e11b81526001600160a01b0380831660048301526024820186905287166044820152606401610631565b6001600160a01b038516611700576040516324ecef4d60e01b815260040160405180910390fd5b3361170b8786611c03565b6001600160a01b038716600090815260046020526040902061172d9086611c4a565b506001600160a01b03861660009081526004602052604090206117509086611c56565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906117b79086908a908a90612aa0565b60405180910390a46117cb87878786611c62565b610b498787878787611d36565b6001600160a01b038116600090815260018301602052604081205415156108cd565b606081600001805480602002602001604051908101604052809291908181526020018280548015610de757602002820191906000526020600020905b8154815260200190600101908083116118365750505050509050919050565b6001600160a01b03841661187c576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b0316156118b5576040516334c7b51160e01b815260048101849052602401610631565b336001600260008282546118c99190612988565b90915550506001600160a01b03851660009081526004602052604090206118f09085611c56565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061195290869089908990612aa0565b60405180910390a4610858600086868686611d36565b60006108cd836001600160a01b038416611e6e565b60006119888361085f565b90503360016002600082825461199e91906128e0565b909155506119ae90508285611c03565b6001600160a01b03821660009081526004602052604090206119d09085611c4a565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90611a2e90869085908a90612aa0565b60405180910390a461068b8260008686611c62565b60008181526001830160205260408120548015611b2c576000611a676001836128e0565b8554909150600090611a7b906001906128e0565b9050818114611ae0576000866000018281548110611a9b57611a9b6128f3565b9060005260206000200154905080876000018481548110611abe57611abe6128f3565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611af157611af1612acc565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610503565b6000915050610503565b600054610100900460ff16611b5d5760405162461bcd60e51b81526004016106319061293d565b611b6681611ebd565b611baf7feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250611ee4565b611bd97fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af184611ee4565b6107187f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275683611ee4565b600081815260056020526040812090611c1b82610e2b565b905060005b81811015610858576000611c348482610e35565b9050611c41818787610e41565b50600101611c20565b60006108cd8383611a43565b60006108cd8383611e6e565b611c7384631aed5a8560e21b611f2d565b1561068b57600084848484604051602001611c919493929190612ae2565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611cef907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00908590600401612b2f565b6000604051808303816000875af1158015611d0e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a109190810190612b48565b611d4784631aed5a8560e21b611f2d565b15611e1157600085858584604051602001611d659493929190612ae2565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a1490611dc3907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612b2f565b6000604051808303816000875af1158015611de2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e0a9190810190612b48565b5050610858565b81610858576001600160a01b0384163b15611e4a57604051634349776d60e01b81526001600160a01b0385166004820152602401610631565b604051630317313760e01b81526001600160a01b0385166004820152602401610631565b6000818152600183016020526040812054611eb557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610503565b506000610503565b600054610100900460ff16610c785760405162461bcd60e51b81526004016106319061293d565b6000828152600160205260409020611efc82826129e1565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516116109190612030565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611f9f575060208210155b8015611fab5750600081115b979650505050505050565b600060208284031215611fc857600080fd5b81356001600160e01b0319811681146108cd57600080fd5b60005b83811015611ffb578181015183820152602001611fe3565b50506000910152565b6000815180845261201c816020860160208601611fe0565b601f01601f19169290920160200192915050565b6020815260006108cd6020830184612004565b60006020828403121561205557600080fd5b5035919050565b80356001600160a01b038116811461207357600080fd5b919050565b6000806040838503121561208b57600080fd5b6120948361205c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156120e0576120e06120a2565b604052919050565b60006001600160401b03821115612101576121016120a2565b5060051b60200190565b600082601f83011261211c57600080fd5b8135602061213161212c836120e8565b6120b8565b82815260059290921b8401810191818101908684111561215057600080fd5b8286015b8481101561216b5780358352918301918301612154565b509695505050505050565b60006001600160401b0382111561218f5761218f6120a2565b50601f01601f191660200190565b600082601f8301126121ae57600080fd5b81356121bc61212c82612176565b8181528460208386010111156121d157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126121ff57600080fd5b8135602061220f61212c836120e8565b82815260059290921b8401810191818101908684111561222e57600080fd5b8286015b8481101561216b5780356001600160401b038111156122515760008081fd5b61225f8986838b010161219d565b845250918301918301612232565b6000806040838503121561228057600080fd5b82356001600160401b038082111561229757600080fd5b6122a38683870161210b565b935060208501359150808211156122b957600080fd5b506122c6858286016121ee565b9150509250929050565b600080600080608085870312156122e657600080fd5b84356001600160401b03808211156122fd57600080fd5b6123098883890161219d565b9550602087013591508082111561231f57600080fd5b61232b8883890161219d565b94506123396040880161205c565b9350606087013591508082111561234f57600080fd5b5061235c8782880161219d565b91505092959194509250565b60008060006060848603121561237d57600080fd5b6123868461205c565b92506123946020850161205c565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156123e55783516001600160a01b0316835292840192918401916001016123c0565b50909695505050505050565b60006020828403121561240357600080fd5b81356001600160401b0381111561241957600080fd5b61106c8482850161210b565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561247a57603f19888603018452612468858351612004565b9450928501929085019060010161244c565b5092979650505050505050565b8035801515811461207357600080fd5b600080600080600060a086880312156124af57600080fd5b6124b88661205c565b94506124c66020870161205c565b9350604086013592506124db60608701612487565b915060808601356001600160401b038111156124f657600080fd5b6125028882890161219d565b9150509295509295909350565b60006020828403121561252157600080fd5b6108cd8261205c565b600082601f83011261253b57600080fd5b8135602061254b61212c836120e8565b82815260059290921b8401810191818101908684111561256a57600080fd5b8286015b8481101561216b5761257f8161205c565b835291830191830161256e565b600082601f83011261259d57600080fd5b813560206125ad61212c836120e8565b82815260059290921b840181019181810190868411156125cc57600080fd5b8286015b8481101561216b576125e181612487565b83529183019183016125d0565b600080600080600060a0868803121561260657600080fd5b85356001600160401b038082111561261d57600080fd5b61262989838a0161252a565b9650602088013591508082111561263f57600080fd5b61264b89838a0161252a565b9550604088013591508082111561266157600080fd5b61266d89838a0161210b565b9450606088013591508082111561268357600080fd5b61268f89838a0161258c565b935060808801359150808211156126a557600080fd5b50612502888289016121ee565b600080604083850312156126c557600080fd5b8235915060208301356001600160401b038111156126e257600080fd5b6122c68582860161219d565b60008083601f84011261270057600080fd5b5081356001600160401b0381111561271757600080fd5b60208301915083602082850101111561272f57600080fd5b9250929050565b6000806000806060858703121561274c57600080fd5b6127558561205c565b93506020850135925060408501356001600160401b0381111561277757600080fd5b612783878288016126ee565b95989497509550505050565b600080604083850312156127a257600080fd5b6127ab8361205c565b91506127b960208401612487565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156123e5578351835292840192918401916001016127de565b6000806000806080858703121561281057600080fd5b6128198561205c565b93506128276020860161205c565b92506040850135915060608501356001600160401b0381111561284957600080fd5b61235c8782880161219d565b6000806040838503121561286857600080fd5b6128718361205c565b91506127b96020840161205c565b60008060006040848603121561289457600080fd5b8335925060208401356001600160401b038111156128b157600080fd5b6128bd868287016126ee565b9497909650939450505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610503576105036128ca565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061291d57607f821691505b6020821081036109c357634e487b7160e01b600052602260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b80820180821115610503576105036128ca565b601f82111561071857600081815260208120601f850160051c810160208610156129c25750805b601f850160051c820191505b81811015610a10578281556001016129ce565b81516001600160401b038111156129fa576129fa6120a2565b612a0e81612a088454612909565b8461299b565b602080601f831160018114612a435760008415612a2b5750858301515b600019600386901b1c1916600185901b178555610a10565b600085815260208120601f198616915b82811015612a7257888601518255948401946001909101908401612a53565b5085821015612a905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152821515602082015260606040820181905260009061058490830184612004565b634e487b7160e01b600052603160045260246000fd5b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508360288301528251612b1f816048850160208701611fe0565b9190910160480195945050505050565b82815260406020820152600061106c6040830184612004565b600060208284031215612b5a57600080fd5b81516001600160401b03811115612b7057600080fd5b8201601f81018413612b8157600080fd5b8051612b8f61212c82612176565b818152856020838501011115612ba457600080fd5b610584826020830160208601611fe056fea264697066735822122026d0cc03b77ba744e9ec8f1e9e27024f40a7143e3f4e9e72fae6f7a0d429bcbb64736f6c63430008110033",
    "sourceMap": "428:878:137:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:379:73;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1882:379:73;;;;;;;;616:165:28;;;:::i;:::-;;;;;;;:::i;2961:1058:73:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1602:32:202;;;1584:51;;1572:2;1557:18;2961:1058:73;1438:203:202;4343::73;;;;;;:::i;:::-;;:::i;:::-;;3461:587:66;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;5911:25:202;;;5899:2;5884:18;1690:92:66;5765:177:202;660:312:137;;;;;;:::i;:::-;;:::i;2082:259:66:-;;;;;;:::i;:::-;;:::i;4884:181:73:-;;;;;;:::i;:::-;;:::i;4119:188:66:-;;;;;;:::i;:::-;;:::i;5291:186:73:-;;;;;;:::i;:::-;;:::i;4378:174:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;1058:133:174:-;;;;;;:::i;:::-;;:::i;2772:126:73:-;;;;;;:::i;:::-;;:::i;1885::66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;;;;-1:-1:-1;;;;;673:6:177;601:85;;978:215:137;;;;;;:::i;:::-;;:::i;926:169:28:-;;;:::i;4552:142:73:-;;;;;;:::i;:::-;;:::i;2412:136:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5661:215:73:-;;;;;;:::i;:::-;;:::i;2323:386::-;;;;;;:::i;:::-;;:::i;5904:312::-;;;;;;:::i;:::-;;:::i;4081:199::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4233:30:73;;;4206:4;4233:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;4081:199;1419:189:177;;;;;;:::i;:::-;;:::i;1199:105:137:-;;;;;;:::i;:::-;;:::i;1882:379:73:-;2071:4;-1:-1:-1;;;;;;2110:34:73;;-1:-1:-1;;;2110:34:73;;:92;;-1:-1:-1;;;;;;;2160:42:73;;-1:-1:-1;;;2160:42:73;2110:92;:144;;;;2218:36;2242:11;2218:23;:36::i;:::-;2091:163;1882:379;-1:-1:-1;;1882:379:73:o;616:165:28:-;670:13;695:17;715:30;476:66:29;715:8:28;:30::i;2961:1058:73:-;3028:7;3082;3100:32;3082:7;3100:14;:32::i;:::-;3143:52;3198:28;;;:10;:28;;;;;;3265;3198;3265:26;:28::i;:::-;3236:57;;3308:18;3330:1;3308:23;3304:709;;-1:-1:-1;3362:1:73;;2961:1058;-1:-1:-1;;;;2961:1058:73:o;3304:709::-;3956:46;3979:22;4000:1;3979:18;:22;:::i;:::-;3956:19;;:22;:46::i;:::-;3949:53;2961:1058;-1:-1:-1;;;;;2961:1058:73:o;4343:203::-;4420:45;4438:8;4456:7;4420:17;:45::i;:::-;4531:7;-1:-1:-1;;;;;4480:59:73;;4489:30;4531:7;4489:12;:30::i;:::-;-1:-1:-1;;;;;4480:59:73;;;;;;;;;;;4343:203;;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;16926:15:202;;;3682:46:66;;;16908:34:202;16958:18;;;16951:34;;;17021:15;;17001:18;;;16994:43;16843:18;;3682:46:66;;;;;;;;3635:104;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;:::-;3535:513;;3461:587;;:::o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;17222:25:202::0;;;;17263:18;;;17256:34;17195:18;;2036:72:174::1;17048:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;660:312:137:-;3111:19:181;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:181;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:181;1476:19:182;:23;;;3219:66:181;;-1:-1:-1;3268:12:181;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:181;;17635:2:202;3157:201:181;;;17617:21:202;17674:2;17654:18;;;17647:30;17713:34;17693:18;;;17686:62;-1:-1:-1;;;17764:18:202;;;17757:44;17818:19;;3157:201:181;17433:410:202;3157:201:181;3368:12;:16;;-1:-1:-1;;3368:16:181;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:181;;;;;3394:65;843:68:137::1;888:4;894:6;902:8;843:44;:68::i;:::-;922:43;1030:66:29;951:13:137::0;922:8:::1;:43::i;:::-;3483:14:181::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:181;;;3553:14;;-1:-1:-1;18000:36:202;;3553:14:181;;17988:2:202;17973:18;3553:14:181;;;;;;;3479:99;3101:483;660:312:137;;;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;5911:25:202;;;5884:18;;2265:31:66;5765:177:202;4884:181:73;5011:47;5021:4;5027:2;5039:7;5031:16;;5049:4;5011:47;;;;;;;;;;;;:9;:47::i;4119:188:66:-;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;5291:186:73:-;5422:48;5432:4;5438:2;5450:7;5442:16;;5460:5;5422:48;;;;;;;;;;;;:9;:48::i;4378:174:66:-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;-1:-1:-1;;;;;1400:28:174;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;18403:25:202;;;-1:-1:-1;;;;;18464:32:202;;18444:18;;;18437:60;18376:18;;5357:39:66;18229:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;2772:126:73:-;2835:7;2861:30;2882:7;2861:12;:30::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;:::-;1661:128:::0;;:::o;978:215:137:-;1147:39;1153:2;1165:7;1157:16;;1175:4;1181;;1147:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1147:5:137;;-1:-1:-1;;;1147:39:137:i;926:169:28:-;982:13;1007:17;1027:32;619:66:29;1027:8:28;:32::i;4552:142:73:-;4637:50;4656:10;4668:8;4678;4637:18;:50::i;2412:136:66:-;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;5661:215:73:-;5819:50;5829:4;5835:2;5847:7;5839:16;5864:4;5819:9;:50::i;2323:386::-;2407:13;2432:17;2452:28;1030:66:29;2452:8:73;:28::i;:::-;2432:48;;2565:14;2582:2;2565:19;;2595:21;2619:50;2634:4;2640:6;2662;2648:4;:11;:20;;;;:::i;:::-;2619:14;:50::i;5904:312::-;6093:42;6117:8;6127:7;6093:23;:42::i;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;18710:2:202;1499:73:177::1;::::0;::::1;18692:21:202::0;18749:2;18729:18;;;18722:30;18788:34;18768:18;;;18761:62;-1:-1:-1;;;18839:18:202;;;18832:36;18885:19;;1499:73:177::1;18508:402:202::0;1499:73:177::1;1582:19;1592:8;1582:9;:19::i;:::-;1419:189:::0;:::o;1199:105:137:-;1268:29;1282:7;1274:16;;1292:4;;1268:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1268:5:137;;-1:-1:-1;;;1268:29:137:i;1140:253:67:-;1287:4;-1:-1:-1;;;;;;1314:32:67;;-1:-1:-1;;;1314:32:67;;:72;;;1350:36;1374:11;1350:23;:36::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;5911:25:202;;;5884:18;;8149:31:66;5765:177:202;8829:115:199;8892:7;8918:19;8926:3;4444:18;;4362:107;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;6284:333:66:-;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;19492:32:202;;6507:42:66;;;19474:51:202;19541:18;;;19534:34;;;19447:18;;6507:42:66;19300:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;;;;;1755:10;1744:21;1736:66;;;;-1:-1:-1;;;1736:66:177;;19781:2:202;1736:66:177;;;19763:21:202;;;19800:18;;;19793:30;19859:34;19839:18;;;19832:62;19911:18;;1736:66:177;19579:356:202;7691:199:73;7857:26;7872:3;7877:5;7857:14;:26::i;1562:253::-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;1729:79:73::1;1782:5;1789:7;1798:9;1729:52;:79::i;6222:482::-:0;-1:-1:-1;;;;;4233:30:73;;4206:4;4233:30;;;:18;:30;;;;;;;;6416:10;4233:40;;;;;;;;;;;6441:33;:75;;;;;6479:37;6498:8;6508:7;6479:18;:37::i;:::-;6478:38;6441:75;6437:152;;;6539:39;;-1:-1:-1;;;6539:39:73;;;;;18403:25:202;;;-1:-1:-1;;;;;18464:32:202;;18444:18;;;18437:60;18376:18;;6539:39:73;18229:274:202;6437:152:73;6599:47;6615:4;6621:2;6625:7;6634:5;6641:4;6599:15;:47::i;:::-;6661:36;;6688:7;;-1:-1:-1;;;;;6661:36:73;;;;;;;;;;6680:16;;6661:36;6387:317;6222:482;;;;;:::o;4710:273:66:-;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;1948:235:177:-;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;;;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;2070:6;2090:17;;;-1:-1:-1;;;;;;2090:17:177;;;;;2126:40;;2070:6;;;;;;;2090:17;;2070:6;;2126:40;;;2037:140;1948:235;:::o;6710:250:73:-;6859:37;6871:2;6875:7;6884:5;6891:4;6859:11;:37::i;:::-;6911:42;;6944:7;;-1:-1:-1;;;;;6911:42:73;;;6936:16;;6911:42;;6936:16;;6911:42;6710:250;;;;:::o;7340:345::-;7502:8;-1:-1:-1;;;;;7487:23:73;:11;-1:-1:-1;;;;;7487:23:73;;7479:75;;;;-1:-1:-1;;;7479:75:73;;20554:2:202;7479:75:73;;;20536:21:202;20593:2;20573:18;;;20566:30;20632:34;20612:18;;;20605:62;-1:-1:-1;;;20683:18:202;;;20676:37;20730:19;;7479:75:73;20352:403:202;7479:75:73;-1:-1:-1;;;;;7564:31:73;;;;;;;:18;:31;;;;;;;;:41;;;;;;;;;;;;;:52;;-1:-1:-1;;7564:52:73;;;;;;;;;;7631:47;;445:41:202;;;7631:47:73;;418:18:202;7631:47:73;;;;;;;7340:345;;;:::o;7664:124:199:-;7727:16;7762:19;7770:3;7762:7;:19::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;21092:2:202;9631:50:200;;;21074:21:202;21131:2;21111:18;;;21104:30;-1:-1:-1;;;21150:18:202;;;21143:44;21204:18;;9631:50:200;20890:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;21435:2:202;9691:63:200;;;21417:21:202;21474:2;21454:18;;;21447:30;-1:-1:-1;;;21493:18:202;;;21486:47;21550:18;;9691:63:200;21233:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;2654:736:66:-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;16926:15:202;;;2878:46:66;;;16908:34:202;16958:18;;;16951:34;;;17021:15;;17001:18;;;16994:43;16843:18;;2878:46:66;16668:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;19492:32:202;;3270:48:66;;;19474:51:202;19541:18;;;19534:34;;;19447:18;;3270:48:66;19300:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;6966:238:73:-;7053:18;7074:21;7087:7;7074:12;:21::i;:::-;7053:42;;7106:26;7118:7;7127:4;7106:11;:26::i;:::-;7147:50;;7188:7;;7180:16;;-1:-1:-1;;;;;7147:50:73;;;;;7180:16;;7147:50;7043:161;6966:238;;:::o;2907:251:174:-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;4811:118:199;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;1464:517:31:-;1563:31;;;1559:416;;1617:26;;-1:-1:-1;;;1617:26:31;;;;;;;;;;;1559:416;1664:33;;;1660:315;;1720:28;;-1:-1:-1;;;1720:28:31;;;;;;;;;;;1660:315;1779:15;;;;:6;:15;;;;;:27;1797:9;1779:15;:27;:::i;:::-;;1854:7;1825:139;1899:3;1879:9;:16;:23;;:71;;1917:33;1932:9;1943:1;1946:3;1917:14;:33::i;:::-;1879:71;;;1905:9;1879:71;1825:139;;;;;;:::i;:::-;;;;;;;;1464:517;;:::o;824:249:67:-;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;991:75:67::1;1040:5;1047:7;1056:9;991:48;:75::i;10133:930:66:-:0;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;16926:15:202;;;10476:44:66;;;16908:34:202;16958:18;;;16951:34;;;17021:15;;17001:18;;;16994:43;16843:18;;10476:44:66;16668:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;8425:700:66:-;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;5911:25:202;;;5884:18;;8701:33:66;5765:177:202;8658:87:66;8774:10;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;8028:150:199:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;9316:575:66:-;9394:18;9415:21;9428:7;9415:12;:21::i;:::-;9394:42;-1:-1:-1;9465:10:66;9599:1;9580:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;9611:36:66;;-1:-1:-1;9627:10:66;9639:7;9611:15;:36::i;:::-;-1:-1:-1;;;;;9658:24:66;;;;;;:12;:24;;;;;:40;;9690:7;9658:31;:40::i;:::-;-1:-1:-1;9715:21:66;;;;:12;:21;;;;;;9708:28;;-1:-1:-1;;;;;;9708:28:66;;;9752:64;9728:7;;9715:21;-1:-1:-1;;;;;9752:64:66;;;;;;;9761:8;;9715:21;;9811:4;;9752:64;:::i;:::-;;;;;;;;9827:57;9846:10;9866:1;9870:7;9879:4;9827:18;:57::i;2685:1388:199:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;694:472:31;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;:::-;852:42:31::1;884:9;852:31;:42::i;:::-;956:78;231:66:29;971:29:31;;1002:31;;;;;;;;;;;;;-1:-1:-1::0;;;1002:31:31::1;;::::0;956:14:::1;:78::i;:::-;1045:50;476:66:29;1088:5:31::0;1045:14:::1;:50::i;:::-;1105:54;619:66:29;1150:7:31::0;1105:14:::1;:54::i;6693:933:66:-:0;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;5818:123::-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;12480:681::-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;1602:32:202;;12997:55:66;;;1584:51:202;1557:18;;12997:55:66;1438:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;1602:32:202;;13098::66;;;1584:51:202;1557:18;;13098:32:66;1438:203:202;2113:404:199;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;743:233:175;4910:13:181;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:181;;;;;;;:::i;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;4680:811:1:-;4846:105;;;-1:-1:-1;;;;;;26000:33:202;;4846:105:1;;;;25982:52:202;;;;4846:105:1;;;;;;;;;;25955:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:202;721:16;;714:27;497:250::o;752:271::-;794:3;832:5;826:12;859:6;854:3;847:19;875:76;944:6;937:4;932:3;928:14;921:4;914:5;910:16;875:76;:::i;:::-;1005:2;984:15;-1:-1:-1;;980:29:202;971:39;;;;1012:4;967:50;;752:271;-1:-1:-1;;752:271:202:o;1028:220::-;1177:2;1166:9;1159:21;1140:4;1197:45;1238:2;1227:9;1223:18;1215:6;1197:45;:::i;1253:180::-;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;-1:-1:-1;1404:23:202;;1253:180;-1:-1:-1;1253:180:202:o;1646:173::-;1714:20;;-1:-1:-1;;;;;1763:31:202;;1753:42;;1743:70;;1809:1;1806;1799:12;1743:70;1646:173;;;:::o;1824:254::-;1892:6;1900;1953:2;1941:9;1932:7;1928:23;1924:32;1921:52;;;1969:1;1966;1959:12;1921:52;1992:29;2011:9;1992:29;:::i;:::-;1982:39;2068:2;2053:18;;;;2040:32;;-1:-1:-1;;;1824:254:202:o;2342:127::-;2403:10;2398:3;2394:20;2391:1;2384:31;2434:4;2431:1;2424:15;2458:4;2455:1;2448:15;2474:275;2545:2;2539:9;2610:2;2591:13;;-1:-1:-1;;2587:27:202;2575:40;;-1:-1:-1;;;;;2630:34:202;;2666:22;;;2627:62;2624:88;;;2692:18;;:::i;:::-;2728:2;2721:22;2474:275;;-1:-1:-1;2474:275:202:o;2754:183::-;2814:4;-1:-1:-1;;;;;2839:6:202;2836:30;2833:56;;;2869:18;;:::i;:::-;-1:-1:-1;2914:1:202;2910:14;2926:4;2906:25;;2754:183::o;2942:662::-;2996:5;3049:3;3042:4;3034:6;3030:17;3026:27;3016:55;;3067:1;3064;3057:12;3016:55;3103:6;3090:20;3129:4;3153:60;3169:43;3209:2;3169:43;:::i;:::-;3153:60;:::i;:::-;3247:15;;;3333:1;3329:10;;;;3317:23;;3313:32;;;3278:12;;;;3357:15;;;3354:35;;;3385:1;3382;3375:12;3354:35;3421:2;3413:6;3409:15;3433:142;3449:6;3444:3;3441:15;3433:142;;;3515:17;;3503:30;;3553:12;;;;3466;;3433:142;;;-1:-1:-1;3593:5:202;2942:662;-1:-1:-1;;;;;;2942:662:202:o;3609:186::-;3657:4;-1:-1:-1;;;;;3682:6:202;3679:30;3676:56;;;3712:18;;:::i;:::-;-1:-1:-1;3778:2:202;3757:15;-1:-1:-1;;3753:29:202;3784:4;3749:40;;3609:186::o;3800:462::-;3842:5;3895:3;3888:4;3880:6;3876:17;3872:27;3862:55;;3913:1;3910;3903:12;3862:55;3949:6;3936:20;3980:48;3996:31;4024:2;3996:31;:::i;3980:48::-;4053:2;4044:7;4037:19;4099:3;4092:4;4087:2;4079:6;4075:15;4071:26;4068:35;4065:55;;;4116:1;4113;4106:12;4065:55;4181:2;4174:4;4166:6;4162:17;4155:4;4146:7;4142:18;4129:55;4229:1;4204:16;;;4222:4;4200:27;4193:38;;;;4208:7;3800:462;-1:-1:-1;;;3800:462:202:o;4267:886::-;4319:5;4372:3;4365:4;4357:6;4353:17;4349:27;4339:55;;4390:1;4387;4380:12;4339:55;4426:6;4413:20;4452:4;4476:60;4492:43;4532:2;4492:43;:::i;4476:60::-;4570:15;;;4656:1;4652:10;;;;4640:23;;4636:32;;;4601:12;;;;4680:15;;;4677:35;;;4708:1;4705;4698:12;4677:35;4744:2;4736:6;4732:15;4756:368;4772:6;4767:3;4764:15;4756:368;;;4858:3;4845:17;-1:-1:-1;;;;;4881:11:202;4878:35;4875:125;;;4954:1;4983:2;4979;4972:14;4875:125;5025:56;5077:3;5072:2;5058:11;5050:6;5046:24;5042:33;5025:56;:::i;:::-;5013:69;;-1:-1:-1;5102:12:202;;;;4789;;4756:368;;5158:602;5285:6;5293;5346:2;5334:9;5325:7;5321:23;5317:32;5314:52;;;5362:1;5359;5352:12;5314:52;5402:9;5389:23;-1:-1:-1;;;;;5472:2:202;5464:6;5461:14;5458:34;;;5488:1;5485;5478:12;5458:34;5511:61;5564:7;5555:6;5544:9;5540:22;5511:61;:::i;:::-;5501:71;;5625:2;5614:9;5610:18;5597:32;5581:48;;5654:2;5644:8;5641:16;5638:36;;;5670:1;5667;5660:12;5638:36;;5693:61;5746:7;5735:8;5724:9;5720:24;5693:61;:::i;:::-;5683:71;;;5158:602;;;;;:::o;5947:814::-;6062:6;6070;6078;6086;6139:3;6127:9;6118:7;6114:23;6110:33;6107:53;;;6156:1;6153;6146:12;6107:53;6196:9;6183:23;-1:-1:-1;;;;;6266:2:202;6258:6;6255:14;6252:34;;;6282:1;6279;6272:12;6252:34;6305:49;6346:7;6337:6;6326:9;6322:22;6305:49;:::i;:::-;6295:59;;6407:2;6396:9;6392:18;6379:32;6363:48;;6436:2;6426:8;6423:16;6420:36;;;6452:1;6449;6442:12;6420:36;6475:51;6518:7;6507:8;6496:9;6492:24;6475:51;:::i;:::-;6465:61;;6545:38;6579:2;6568:9;6564:18;6545:38;:::i;:::-;6535:48;;6636:2;6625:9;6621:18;6608:32;6592:48;;6665:2;6655:8;6652:16;6649:36;;;6681:1;6678;6671:12;6649:36;;6704:51;6747:7;6736:8;6725:9;6721:24;6704:51;:::i;:::-;6694:61;;;5947:814;;;;;;;:::o;6951:328::-;7028:6;7036;7044;7097:2;7085:9;7076:7;7072:23;7068:32;7065:52;;;7113:1;7110;7103:12;7065:52;7136:29;7155:9;7136:29;:::i;:::-;7126:39;;7184:38;7218:2;7207:9;7203:18;7184:38;:::i;:::-;7174:48;;7269:2;7258:9;7254:18;7241:32;7231:42;;6951:328;;;;;:::o;7284:658::-;7455:2;7507:21;;;7577:13;;7480:18;;;7599:22;;;7426:4;;7455:2;7678:15;;;;7652:2;7637:18;;;7426:4;7721:195;7735:6;7732:1;7729:13;7721:195;;;7800:13;;-1:-1:-1;;;;;7796:39:202;7784:52;;7891:15;;;;7856:12;;;;7832:1;7750:9;7721:195;;;-1:-1:-1;7933:3:202;;7284:658;-1:-1:-1;;;;;;7284:658:202:o;7947:348::-;8031:6;8084:2;8072:9;8063:7;8059:23;8055:32;8052:52;;;8100:1;8097;8090:12;8052:52;8140:9;8127:23;-1:-1:-1;;;;;8165:6:202;8162:30;8159:50;;;8205:1;8202;8195:12;8159:50;8228:61;8281:7;8272:6;8261:9;8257:22;8228:61;:::i;8300:801::-;8460:4;8489:2;8529;8518:9;8514:18;8559:2;8548:9;8541:21;8582:6;8617;8611:13;8648:6;8640;8633:22;8686:2;8675:9;8671:18;8664:25;;8748:2;8738:6;8735:1;8731:14;8720:9;8716:30;8712:39;8698:53;;8786:2;8778:6;8774:15;8807:1;8817:255;8831:6;8828:1;8825:13;8817:255;;;8924:2;8920:7;8908:9;8900:6;8896:22;8892:36;8887:3;8880:49;8952:40;8985:6;8976;8970:13;8952:40;:::i;:::-;8942:50;-1:-1:-1;9050:12:202;;;;9015:15;;;;8853:1;8846:9;8817:255;;;-1:-1:-1;9089:6:202;;8300:801;-1:-1:-1;;;;;;;8300:801:202:o;9106:160::-;9171:20;;9227:13;;9220:21;9210:32;;9200:60;;9256:1;9253;9246:12;9271:606;9372:6;9380;9388;9396;9404;9457:3;9445:9;9436:7;9432:23;9428:33;9425:53;;;9474:1;9471;9464:12;9425:53;9497:29;9516:9;9497:29;:::i;:::-;9487:39;;9545:38;9579:2;9568:9;9564:18;9545:38;:::i;:::-;9535:48;;9630:2;9619:9;9615:18;9602:32;9592:42;;9653:35;9684:2;9673:9;9669:18;9653:35;:::i;:::-;9643:45;;9739:3;9728:9;9724:19;9711:33;-1:-1:-1;;;;;9759:6:202;9756:30;9753:50;;;9799:1;9796;9789:12;9753:50;9822:49;9863:7;9854:6;9843:9;9839:22;9822:49;:::i;:::-;9812:59;;;9271:606;;;;;;;;:::o;10105:186::-;10164:6;10217:2;10205:9;10196:7;10192:23;10188:32;10185:52;;;10233:1;10230;10223:12;10185:52;10256:29;10275:9;10256:29;:::i;10296:668::-;10350:5;10403:3;10396:4;10388:6;10384:17;10380:27;10370:55;;10421:1;10418;10411:12;10370:55;10457:6;10444:20;10483:4;10507:60;10523:43;10563:2;10523:43;:::i;10507:60::-;10601:15;;;10687:1;10683:10;;;;10671:23;;10667:32;;;10632:12;;;;10711:15;;;10708:35;;;10739:1;10736;10729:12;10708:35;10775:2;10767:6;10763:15;10787:148;10803:6;10798:3;10795:15;10787:148;;;10869:23;10888:3;10869:23;:::i;:::-;10857:36;;10913:12;;;;10820;;10787:148;;10969:662;11020:5;11073:3;11066:4;11058:6;11054:17;11050:27;11040:55;;11091:1;11088;11081:12;11040:55;11127:6;11114:20;11153:4;11177:60;11193:43;11233:2;11193:43;:::i;11177:60::-;11271:15;;;11357:1;11353:10;;;;11341:23;;11337:32;;;11302:12;;;;11381:15;;;11378:35;;;11409:1;11406;11399:12;11378:35;11445:2;11437:6;11433:15;11457:145;11473:6;11468:3;11465:15;11457:145;;;11539:20;11555:3;11539:20;:::i;:::-;11527:33;;11580:12;;;;11490;;11457:145;;11636:1276;11862:6;11870;11878;11886;11894;11947:3;11935:9;11926:7;11922:23;11918:33;11915:53;;;11964:1;11961;11954:12;11915:53;12004:9;11991:23;-1:-1:-1;;;;;12074:2:202;12066:6;12063:14;12060:34;;;12090:1;12087;12080:12;12060:34;12113:61;12166:7;12157:6;12146:9;12142:22;12113:61;:::i;:::-;12103:71;;12227:2;12216:9;12212:18;12199:32;12183:48;;12256:2;12246:8;12243:16;12240:36;;;12272:1;12269;12262:12;12240:36;12295:63;12350:7;12339:8;12328:9;12324:24;12295:63;:::i;:::-;12285:73;;12411:2;12400:9;12396:18;12383:32;12367:48;;12440:2;12430:8;12427:16;12424:36;;;12456:1;12453;12446:12;12424:36;12479:63;12534:7;12523:8;12512:9;12508:24;12479:63;:::i;:::-;12469:73;;12595:2;12584:9;12580:18;12567:32;12551:48;;12624:2;12614:8;12611:16;12608:36;;;12640:1;12637;12630:12;12608:36;12663:60;12715:7;12704:8;12693:9;12689:24;12663:60;:::i;:::-;12653:70;;12776:3;12765:9;12761:19;12748:33;12732:49;;12806:2;12796:8;12793:16;12790:36;;;12822:1;12819;12812:12;12790:36;;12845:61;12898:7;12887:8;12876:9;12872:24;12845:61;:::i;12917:388::-;12994:6;13002;13055:2;13043:9;13034:7;13030:23;13026:32;13023:52;;;13071:1;13068;13061:12;13023:52;13107:9;13094:23;13084:33;;13168:2;13157:9;13153:18;13140:32;-1:-1:-1;;;;;13187:6:202;13184:30;13181:50;;;13227:1;13224;13217:12;13181:50;13250:49;13291:7;13282:6;13271:9;13267:22;13250:49;:::i;13310:347::-;13361:8;13371:6;13425:3;13418:4;13410:6;13406:17;13402:27;13392:55;;13443:1;13440;13433:12;13392:55;-1:-1:-1;13466:20:202;;-1:-1:-1;;;;;13498:30:202;;13495:50;;;13541:1;13538;13531:12;13495:50;13578:4;13570:6;13566:17;13554:29;;13630:3;13623:4;13614:6;13606;13602:19;13598:30;13595:39;13592:59;;;13647:1;13644;13637:12;13592:59;13310:347;;;;;:::o;13662:551::-;13750:6;13758;13766;13774;13827:2;13815:9;13806:7;13802:23;13798:32;13795:52;;;13843:1;13840;13833:12;13795:52;13866:29;13885:9;13866:29;:::i;:::-;13856:39;;13942:2;13931:9;13927:18;13914:32;13904:42;;13997:2;13986:9;13982:18;13969:32;-1:-1:-1;;;;;14016:6:202;14013:30;14010:50;;;14056:1;14053;14046:12;14010:50;14095:58;14145:7;14136:6;14125:9;14121:22;14095:58;:::i;:::-;13662:551;;;;-1:-1:-1;14172:8:202;-1:-1:-1;;;;13662:551:202:o;14218:254::-;14283:6;14291;14344:2;14332:9;14323:7;14319:23;14315:32;14312:52;;;14360:1;14357;14350:12;14312:52;14383:29;14402:9;14383:29;:::i;:::-;14373:39;;14431:35;14462:2;14451:9;14447:18;14431:35;:::i;:::-;14421:45;;14218:254;;;;;:::o;14477:632::-;14648:2;14700:21;;;14770:13;;14673:18;;;14792:22;;;14619:4;;14648:2;14871:15;;;;14845:2;14830:18;;;14619:4;14914:169;14928:6;14925:1;14922:13;14914:169;;;14989:13;;14977:26;;15058:15;;;;15023:12;;;;14950:1;14943:9;14914:169;;15114:537;15209:6;15217;15225;15233;15286:3;15274:9;15265:7;15261:23;15257:33;15254:53;;;15303:1;15300;15293:12;15254:53;15326:29;15345:9;15326:29;:::i;:::-;15316:39;;15374:38;15408:2;15397:9;15393:18;15374:38;:::i;:::-;15364:48;;15459:2;15448:9;15444:18;15431:32;15421:42;;15514:2;15503:9;15499:18;15486:32;-1:-1:-1;;;;;15533:6:202;15530:30;15527:50;;;15573:1;15570;15563:12;15527:50;15596:49;15637:7;15628:6;15617:9;15613:22;15596:49;:::i;15656:260::-;15724:6;15732;15785:2;15773:9;15764:7;15760:23;15756:32;15753:52;;;15801:1;15798;15791:12;15753:52;15824:29;15843:9;15824:29;:::i;:::-;15814:39;;15872:38;15906:2;15895:9;15891:18;15872:38;:::i;15921:477::-;16000:6;16008;16016;16069:2;16057:9;16048:7;16044:23;16040:32;16037:52;;;16085:1;16082;16075:12;16037:52;16121:9;16108:23;16098:33;;16182:2;16171:9;16167:18;16154:32;-1:-1:-1;;;;;16201:6:202;16198:30;16195:50;;;16241:1;16238;16231:12;16195:50;16280:58;16330:7;16321:6;16310:9;16306:22;16280:58;:::i;:::-;15921:477;;16357:8;;-1:-1:-1;16254:84:202;;-1:-1:-1;;;;15921:477:202:o;16403:127::-;16464:10;16459:3;16455:20;16452:1;16445:31;16495:4;16492:1;16485:15;16519:4;16516:1;16509:15;16535:128;16602:9;;;16623:11;;;16620:37;;;16637:18;;:::i;17301:127::-;17362:10;17357:3;17353:20;17350:1;17343:31;17393:4;17390:1;17383:15;17417:4;17414:1;17407:15;18915:380;18994:1;18990:12;;;;19037;;;19058:61;;19112:4;19104:6;19100:17;19090:27;;19058:61;19165:2;19157:6;19154:14;19134:18;19131:38;19128:161;;19211:10;19206:3;19202:20;19199:1;19192:31;19246:4;19243:1;19236:15;19274:4;19271:1;19264:15;19940:407;20142:2;20124:21;;;20181:2;20161:18;;;20154:30;20220:34;20215:2;20200:18;;20193:62;-1:-1:-1;;;20286:2:202;20271:18;;20264:41;20337:3;20322:19;;19940:407::o;20760:125::-;20825:9;;;20846:10;;;20843:36;;;20859:18;;:::i;21704:544::-;21805:2;21800:3;21797:11;21794:448;;;21841:1;21866:5;21862:2;21855:17;21911:4;21907:2;21897:19;21981:2;21969:10;21965:19;21962:1;21958:27;21952:4;21948:38;22017:4;22005:10;22002:20;21999:47;;;-1:-1:-1;22040:4:202;21999:47;22095:2;22090:3;22086:12;22083:1;22079:20;22073:4;22069:31;22059:41;;22150:82;22168:2;22161:5;22158:13;22150:82;;;22213:17;;;22194:1;22183:13;22150:82;;22424:1348;22548:3;22542:10;-1:-1:-1;;;;;22567:6:202;22564:30;22561:56;;;22597:18;;:::i;:::-;22626:96;22715:6;22675:38;22707:4;22701:11;22675:38;:::i;:::-;22669:4;22626:96;:::i;:::-;22777:4;;22841:2;22830:14;;22858:1;22853:662;;;;23559:1;23576:6;23573:89;;;-1:-1:-1;23628:19:202;;;23622:26;23573:89;-1:-1:-1;;22381:1:202;22377:11;;;22373:24;22369:29;22359:40;22405:1;22401:11;;;22356:57;23675:81;;22823:943;;22853:662;21651:1;21644:14;;;21688:4;21675:18;;-1:-1:-1;;22889:20:202;;;23006:236;23020:7;23017:1;23014:14;23006:236;;;23109:19;;;23103:26;23088:42;;23201:27;;;;23169:1;23157:14;;;;23036:19;;23006:236;;;23010:3;23270:6;23261:7;23258:19;23255:201;;;23331:19;;;23325:26;-1:-1:-1;;23414:1:202;23410:14;;;23426:3;23406:24;23402:37;23398:42;23383:58;23368:74;;23255:201;-1:-1:-1;;;;;23502:1:202;23486:14;;;23482:22;23469:36;;-1:-1:-1;22424:1348:202:o;23777:396::-;-1:-1:-1;;;;;23974:32:202;;23956:51;;24050:14;;24043:22;24038:2;24023:18;;24016:50;24102:2;24097;24082:18;;24075:30;;;-1:-1:-1;;24122:45:202;;24148:18;;24140:6;24122:45;:::i;24178:127::-;24239:10;24234:3;24230:20;24227:1;24220:31;24270:4;24267:1;24260:15;24294:4;24291:1;24284:15;24310:577;24523:3;24555:26;24551:31;24624:2;24615:6;24611:2;24607:15;24603:24;24598:3;24591:37;24679:2;24670:6;24666:2;24662:15;24658:24;24653:2;24648:3;24644:12;24637:46;;24713:6;24708:2;24703:3;24699:12;24692:28;24749:6;24743:13;24765:75;24833:6;24828:2;24823:3;24819:12;24812:4;24804:6;24800:17;24765:75;:::i;:::-;24860:16;;;;24878:2;24856:25;;24310:577;-1:-1:-1;;;;;24310:577:202:o;24892:289::-;25067:6;25056:9;25049:25;25110:2;25105;25094:9;25090:18;25083:30;25030:4;25130:45;25171:2;25160:9;25156:18;25148:6;25130:45;:::i;25186:647::-;25265:6;25318:2;25306:9;25297:7;25293:23;25289:32;25286:52;;;25334:1;25331;25324:12;25286:52;25367:9;25361:16;-1:-1:-1;;;;;25392:6:202;25389:30;25386:50;;;25432:1;25429;25422:12;25386:50;25455:22;;25508:4;25500:13;;25496:27;-1:-1:-1;25486:55:202;;25537:1;25534;25527:12;25486:55;25566:2;25560:9;25591:48;25607:31;25635:2;25607:31;:::i;25591:48::-;25662:2;25655:5;25648:17;25702:7;25697:2;25692;25688;25684:11;25680:20;25677:33;25674:53;;;25723:1;25720;25713:12;25674:53;25736:67;25800:2;25795;25788:5;25784:14;25779:2;25775;25771:11;25736:67;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "getApproved(uint256)": "081812fc",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "initialize(string,string,address,bytes)": "1eb40e21",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,uint256,bytes)": "94d008ef",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"tokenURIValue\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Compatible with ERC721 approve.\",\"params\":{\"operator\":\"The address to approve for `tokenId`\",\"tokenId\":\"The tokenId to approve\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"constructor\":{\"details\":\"initialize (= lock) base implementation contract on deployment\"},\"getApproved(uint256)\":{\"details\":\"Compatible with ERC721 getApproved.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address of the operator for `tokenId`\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"name()\":{\"details\":\"Returns the name of the token.\",\"returns\":{\"_0\":\"The name of the token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Compatible with ERC721 ownerOf.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The owner of the tokenId\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Compatible with ERC721 safeTransferFrom. Using force=false so that no EOA and only contracts supporting LSP1 interface may receive the tokenId.\",\"params\":{\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Compatible with ERC721 safeTransferFrom.\",\"params\":{\"data\":\"The data to be sent with the transfer\",\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\",\"returns\":{\"_0\":\"The symbol of the token\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Compatible with ERC721 transferFrom. Using force=true so that EOA and any contract may receive the tokenId.\",\"params\":{\"from\":\"The sending address\",\"to\":\"The receiving address\",\"tokenId\":\"The tokenId to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"To provide compatibility with indexing ERC721 events.\"},\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"},\"Transfer(address,address,uint256)\":{\"notice\":\"To provide compatibility with indexing ERC721 events.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/Tokens/LSP8CompatibleERC721TesterInit.sol\":\"LSP8CompatibleERC721InitTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/ILSP4Compatibility.sol\":{\"keccak256\":\"0xb75cd25d17cca0c09be8a2f5122ac47f8ec2846006faf357e81bb730bcd929a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://097258f718d8ce024699b2866c20c4627ee139dd419eb1ab8155ee28dd1511b6\",\"dweb:/ipfs/QmbFXPazAHPpEutFrYfVadCXW2tCbQAXmW7MB5eQuFW5Xa\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Compatibility.sol\":{\"keccak256\":\"0xfa8b7b6c2b8823582be57f824a91af769c04669dee6c24876b936b23e57a0fe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1df074acad92ab54dcaedf31c5841803599ace132cf3ab0106eb6f815d2ce921\",\"dweb:/ipfs/QmRNTB7WK8YfHUBLui4sppnKJV11sGRCTzfHMT3gCH1SPh\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d\",\"dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol\":{\"keccak256\":\"0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2\",\"dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5\",\"dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol\":{\"keccak256\":\"0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338\",\"dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/ILSP8CompatibleERC721.sol\":{\"keccak256\":\"0x5d4dfd7c62220f7dc4240c115f5f71301001d3791add5f0468d845ff0de163aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137cbe272708a38e196611e28452cfa61e75005b5050800475ea51397a3e5680\",\"dweb:/ipfs/QmWtmpnFyfVfw3W2X841GKoy2gQcM1DPHHRLymc8112UG7\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol\":{\"keccak256\":\"0x3850bd08bd66a5f79d905827991f5bed9f34325a2435b74e53c726d079e57e6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b43b615ff66cfa94f97c3a46d6cebe7769143c5fdd4db1727a69ff5259ff8a6\",\"dweb:/ipfs/QmYidLQ77X7T1q4BaQgsw9gVd5mRiSqzxgysQqkfMaSB7u\"]},\"contracts/Mocks/Tokens/LSP8CompatibleERC721TesterInit.sol\":{\"keccak256\":\"0x0ace9a635208b020979c87fefef521e928a80e9a1f4e763e36bf4e7d3d4b0c96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://765b9a6d19b1cce918f78dfa736ccdb7eb2885f36c317581d8ea5819e0ba0b76\",\"dweb:/ipfs/QmURndyGvBmyUZvKW9BfCAnoF3fPXtsVRLfrrBGfmTq1Sy\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol\":{\"keccak256\":\"0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551\",\"dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "tokenURIValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Compatible with ERC721 approve.",
            "params": {
              "operator": "The address to approve for `tokenId`",
              "tokenId": "The tokenId to approve"
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "constructor": {
            "details": "initialize (= lock) base implementation contract on deployment"
          },
          "getApproved(uint256)": {
            "details": "Compatible with ERC721 getApproved.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address of the operator for `tokenId`"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "name()": {
            "details": "Returns the name of the token.",
            "returns": {
              "_0": "The name of the token"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "Compatible with ERC721 ownerOf.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The owner of the tokenId"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Compatible with ERC721 safeTransferFrom. Using force=false so that no EOA and only contracts supporting LSP1 interface may receive the tokenId.",
            "params": {
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Compatible with ERC721 safeTransferFrom.",
            "params": {
              "data": "The data to be sent with the transfer",
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name.",
            "returns": {
              "_0": "The symbol of the token"
            }
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Compatible with ERC721 transferFrom. Using force=true so that EOA and any contract may receive the tokenId.",
            "params": {
              "from": "The sending address",
              "to": "The receiving address",
              "tokenId": "The tokenId to transfer"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Mocks/Tokens/LSP8CompatibleERC721TesterInit.sol": "LSP8CompatibleERC721InitTester"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/ILSP4Compatibility.sol": {
        "keccak256": "0xb75cd25d17cca0c09be8a2f5122ac47f8ec2846006faf357e81bb730bcd929a9",
        "urls": [
          "bzz-raw://097258f718d8ce024699b2866c20c4627ee139dd419eb1ab8155ee28dd1511b6",
          "dweb:/ipfs/QmbFXPazAHPpEutFrYfVadCXW2tCbQAXmW7MB5eQuFW5Xa"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Compatibility.sol": {
        "keccak256": "0xfa8b7b6c2b8823582be57f824a91af769c04669dee6c24876b936b23e57a0fe8",
        "urls": [
          "bzz-raw://1df074acad92ab54dcaedf31c5841803599ace132cf3ab0106eb6f815d2ce921",
          "dweb:/ipfs/QmRNTB7WK8YfHUBLui4sppnKJV11sGRCTzfHMT3gCH1SPh"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol": {
        "keccak256": "0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274",
        "urls": [
          "bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d",
          "dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataInitAbstract.sol": {
        "keccak256": "0xa1b98b0a256ab3a3214e13625173ca7fad90f51ddd5e9df99f07e1553ff3f792",
        "urls": [
          "bzz-raw://5455401ee7832c5dd6e9a4591656940900efb22db672773442e6fbbfd21dcdb2",
          "dweb:/ipfs/QmWiE5dSSSiCEpLbeUCju9eonePETV6C7kn1VoYtb4g8Ed"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552",
        "urls": [
          "bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5",
          "dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetInitAbstract.sol": {
        "keccak256": "0x931e21b7ee26991bf2fa1662f3ed6cf6bf9c63d4eae736f45351a42bae6aa968",
        "urls": [
          "bzz-raw://7c37dca762bbbde08b3eb8ebcd2c5472aacd1421f58871b239466d1f6f384338",
          "dweb:/ipfs/QmZatCnuZaaRrC6gbCyzioNRrGgGmE2k7CCRJXG9BBhURB"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/ILSP8CompatibleERC721.sol": {
        "keccak256": "0x5d4dfd7c62220f7dc4240c115f5f71301001d3791add5f0468d845ff0de163aa",
        "urls": [
          "bzz-raw://137cbe272708a38e196611e28452cfa61e75005b5050800475ea51397a3e5680",
          "dweb:/ipfs/QmWtmpnFyfVfw3W2X841GKoy2gQcM1DPHHRLymc8112UG7"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol": {
        "keccak256": "0x3850bd08bd66a5f79d905827991f5bed9f34325a2435b74e53c726d079e57e6e",
        "urls": [
          "bzz-raw://6b43b615ff66cfa94f97c3a46d6cebe7769143c5fdd4db1727a69ff5259ff8a6",
          "dweb:/ipfs/QmYidLQ77X7T1q4BaQgsw9gVd5mRiSqzxgysQqkfMaSB7u"
        ],
        "license": "MIT"
      },
      "contracts/Mocks/Tokens/LSP8CompatibleERC721TesterInit.sol": {
        "keccak256": "0x0ace9a635208b020979c87fefef521e928a80e9a1f4e763e36bf4e7d3d4b0c96",
        "urls": [
          "bzz-raw://765b9a6d19b1cce918f78dfa736ccdb7eb2885f36c317581d8ea5819e0ba0b76",
          "dweb:/ipfs/QmURndyGvBmyUZvKW9BfCAnoF3fPXtsVRLfrrBGfmTq1Sy"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YInitAbstract.sol": {
        "keccak256": "0xeb799b937bfcc2765a044d40492d875d3db137647dc7002f81b18f0f9eb48c45",
        "urls": [
          "bzz-raw://07e20f8e1baaee505948ec7e338b558262d0e90f22e73c80fd254e7e16f52551",
          "dweb:/ipfs/QmTK2V2eBMeWfPkqJbMJLiLsvPXohTSfUyp8osgB63bWfw"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Mocks/Tokens/LSP8CompatibleERC721TesterInit.sol",
    "id": 16907,
    "exportedSymbols": {
      "LSP8CompatibleERC721InitAbstract": [
        12470
      ],
      "LSP8CompatibleERC721InitTester": [
        16906
      ],
      "LSP8IdentifiableDigitalAsset": [
        10104
      ],
      "_LSP4_METADATA_KEY": [
        4082
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1274:137",
    "nodes": [
      {
        "id": 16826,
        "nodeType": "PragmaDirective",
        "src": "33:23:137",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16828,
        "nodeType": "ImportDirective",
        "src": "69:119:137",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16907,
        "sourceUnit": 10105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16827,
              "name": "LSP8IdentifiableDigitalAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10104,
              "src": "82:28:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16830,
        "nodeType": "ImportDirective",
        "src": "189:138:137",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/extensions/LSP8CompatibleERC721InitAbstract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16907,
        "sourceUnit": 12471,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16829,
              "name": "LSP8CompatibleERC721InitAbstract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12470,
              "src": "202:32:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16832,
        "nodeType": "ImportDirective",
        "src": "342:84:137",
        "nodes": [],
        "absolutePath": "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol",
        "file": "../../LSP4DigitalAssetMetadata/LSP4Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16907,
        "sourceUnit": 4083,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16831,
              "name": "_LSP4_METADATA_KEY",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4082,
              "src": "350:18:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16906,
        "nodeType": "ContractDefinition",
        "src": "428:878:137",
        "nodes": [
          {
            "id": 16842,
            "nodeType": "FunctionDefinition",
            "src": "601:53:137",
            "nodes": [],
            "body": {
              "id": 16841,
              "nodeType": "Block",
              "src": "615:39:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16838,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43990,
                      "src": "625:20:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 16839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "625:22:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16840,
                  "nodeType": "ExpressionStatement",
                  "src": "625:22:137"
                }
              ]
            },
            "documentation": {
              "id": 16835,
              "nodeType": "StructuredDocumentation",
              "src": "510:86:137",
              "text": " @dev initialize (= lock) base implementation contract on deployment"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "612:2:137"
            },
            "returnParameters": {
              "id": 16837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "615:0:137"
            },
            "scope": 16906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16869,
            "nodeType": "FunctionDefinition",
            "src": "660:312:137",
            "nodes": [],
            "body": {
              "id": 16868,
              "nodeType": "Block",
              "src": "833:139:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16858,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16844,
                        "src": "888:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 16859,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16846,
                        "src": "894:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 16860,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16848,
                        "src": "902:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16855,
                        "name": "LSP8CompatibleERC721InitAbstract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12470,
                        "src": "843:32:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSP8CompatibleERC721InitAbstract_$12470_$",
                          "typeString": "type(contract LSP8CompatibleERC721InitAbstract)"
                        }
                      },
                      "id": 16857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "876:11:137",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12009,
                      "src": "843:44:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address)"
                      }
                    },
                    "id": 16861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "843:68:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16862,
                  "nodeType": "ExpressionStatement",
                  "src": "843:68:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16864,
                        "name": "_LSP4_METADATA_KEY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4082,
                        "src": "931:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16865,
                        "name": "tokenURIValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16850,
                        "src": "951:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16863,
                      "name": "_setData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12469
                      ],
                      "referencedDeclaration": 12469,
                      "src": "922:8:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory)"
                      }
                    },
                    "id": 16866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:43:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16867,
                  "nodeType": "ExpressionStatement",
                  "src": "922:43:137"
                }
              ]
            },
            "functionSelector": "1eb40e21",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16853,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16852,
                  "name": "initializer",
                  "nameLocations": [
                    "821:11:137"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43911,
                  "src": "821:11:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "821:11:137"
              }
            ],
            "name": "initialize",
            "nameLocation": "669:10:137",
            "parameters": {
              "id": 16851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16844,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "703:4:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16869,
                  "src": "689:18:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16843,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16846,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "731:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16869,
                  "src": "717:20:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16845,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16848,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "755:8:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16869,
                  "src": "747:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16850,
                  "mutability": "mutable",
                  "name": "tokenURIValue",
                  "nameLocation": "786:13:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16869,
                  "src": "773:26:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16849,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:126:137"
            },
            "returnParameters": {
              "id": 16854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "833:0:137"
            },
            "scope": 16906,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 16889,
            "nodeType": "FunctionDefinition",
            "src": "978:215:137",
            "nodes": [],
            "body": {
              "id": 16888,
              "nodeType": "Block",
              "src": "1079:114:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16879,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16871,
                        "src": "1153:2:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 16882,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16873,
                            "src": "1165:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1157:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 16880,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1157:7:137",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1157:16:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1175:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 16885,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16875,
                        "src": "1181:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 16878,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12385
                      ],
                      "referencedDeclaration": 12385,
                      "src": "1147:5:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 16886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1147:39:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16887,
                  "nodeType": "ExpressionStatement",
                  "src": "1147:39:137"
                }
              ]
            },
            "functionSelector": "94d008ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "987:4:137",
            "parameters": {
              "id": 16876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16871,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1009:2:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16889,
                  "src": "1001:10:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16873,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1029:7:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16889,
                  "src": "1021:15:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16875,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1061:4:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16889,
                  "src": "1046:19:137",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16874,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:80:137"
            },
            "returnParameters": {
              "id": 16877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:0:137"
            },
            "scope": 16906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16905,
            "nodeType": "FunctionDefinition",
            "src": "1199:105:137",
            "nodes": [],
            "body": {
              "id": 16904,
              "nodeType": "Block",
              "src": "1258:46:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 16899,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16891,
                            "src": "1282:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1274:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 16897,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1274:7:137",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1274:16:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16901,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16893,
                        "src": "1292:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 16896,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12419
                      ],
                      "referencedDeclaration": 12419,
                      "src": "1268:5:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory)"
                      }
                    },
                    "id": 16902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:29:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16903,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:29:137"
                }
              ]
            },
            "functionSelector": "fe9d9303",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1208:4:137",
            "parameters": {
              "id": 16894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16891,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1221:7:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16905,
                  "src": "1213:15:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16893,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1245:4:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 16905,
                  "src": "1230:19:137",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16892,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:38:137"
            },
            "returnParameters": {
              "id": 16895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:137"
            },
            "scope": 16906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16833,
              "name": "LSP8CompatibleERC721InitAbstract",
              "nameLocations": [
                "471:32:137"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12470,
              "src": "471:32:137"
            },
            "id": 16834,
            "nodeType": "InheritanceSpecifier",
            "src": "471:32:137"
          }
        ],
        "canonicalName": "LSP8CompatibleERC721InitTester",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16906,
          12470,
          4059,
          11104,
          11044,
          11225,
          9968,
          4296,
          43546,
          43508,
          4008,
          43840,
          46531,
          46594,
          43687,
          43991
        ],
        "name": "LSP8CompatibleERC721InitTester",
        "nameLocation": "437:30:137",
        "scope": 16907,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 137
}