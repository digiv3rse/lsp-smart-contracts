{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dataKeysLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataValuesLength",
          "type": "uint256"
        }
      ],
      "name": "ERC725Y_DataKeysValuesLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenNameNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP4TokenSymbolNotEditable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotSendToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8CannotUseAddressZeroAsOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LSP8InvalidTransferBatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistentTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8NonExistingOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "LSP8NotTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "LSP8NotifyTokenReceiverIsEOA",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8OperatorAlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "LSP8TokenIdAlreadyMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "DataChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getOperatorsOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "dataKeys",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataValues",
          "type": "bytes[]"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dataValue",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenAt",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "to",
          "type": "address[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "tokenId",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool[]",
          "name": "force",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620026cd380380620026cd833981016040819052620000349162000322565b828282828282806001600160a01b038116620000a55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840160405180910390fd5b620000bb816200019560201b6200097b1760201c565b50620001127feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b815250620001fc60201b620009e01760201c565b6200014c7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b84620001fc60201b620009e01760201c565b620001867f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b83620001fc60201b620009e01760201c565b5050505050505050506200053f565b6000546001600160a01b03828116911614620001f957600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505b50565b60008281526001602052604090206200021682826200043e565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516200024991906200050a565b60405180910390a25050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002885781810151838201526020016200026e565b50506000910152565b600082601f830112620002a357600080fd5b81516001600160401b0380821115620002c057620002c062000255565b604051601f8301601f19908116603f01168101908282118183101715620002eb57620002eb62000255565b816040528381528660208588010111156200030557600080fd5b620003188460208301602089016200026b565b9695505050505050565b6000806000606084860312156200033857600080fd5b83516001600160401b03808211156200035057600080fd5b6200035e8783880162000291565b945060208601519150808211156200037557600080fd5b50620003848682870162000291565b604086015190935090506001600160a01b0381168114620003a457600080fd5b809150509250925092565b600181811c90821680620003c457607f821691505b602082108103620003e557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200043957600081815260208120601f850160051c81016020861015620004145750805b601f850160051c820191505b81811015620004355782815560010162000420565b5050505b505050565b81516001600160401b038111156200045a576200045a62000255565b62000472816200046b8454620003af565b84620003eb565b602080601f831160018114620004aa5760008415620004915750858301515b600019600386901b1c1916600185901b17855562000435565b600085815260208120601f198616915b82811015620004db57888601518255948401946001909101908401620004ba565b5085821015620004fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200052b8160408501602087016200026b565b601f01601f19169190910160400192915050565b61217e806200054f6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063511b6952116100b85780637f23690c1161007c5780637f23690c146102a35780638da5cb5b146102b657806392a91a3a146102c7578063a3b261f2146102e7578063cf5182ba14610307578063f2fde38b1461031a57600080fd5b8063511b69521461024257806354f6127f1461025557806370a0823114610275578063715018a6146102885780637e87632c1461029057600080fd5b8063217b2270116100ff578063217b2270146101b15780632a3654a4146101dc5780632cfd3005146101ef57806349a6078d146102025780634e3e6e9c1461022257600080fd5b806301ffc9a71461013c57806308a1eee1146101645780630b0c6d821461017957806314a6e2931461018c57806318160ddd1461019f575b600080fd5b61014f61014a3660046117f8565b61032d565b60405190151581526020015b60405180910390f35b610177610172366004611822565b610358565b005b610177610187366004611857565b61038a565b61017761019a366004611a50565b610437565b6002545b60405190815260200161015b565b6101c46101bf366004611822565b6104c3565b6040516001600160a01b03909116815260200161015b565b61014f6101ea366004611857565b6104fc565b6101776101fd366004611857565b610518565b610215610210366004611822565b610556565b60405161015b9190611ab4565b610235610230366004611b01565b610578565b60405161015b9190611b86565b610177610250366004611bf8565b61062c565b610268610263366004611822565b61067b565b60405161015b9190611c71565b6101a3610283366004611c84565b610686565b6101776106a7565b61017761029e366004611d63565b6106bb565b6101776102b1366004611e28565b6107aa565b6000546001600160a01b03166101c4565b6101a36102d5366004611822565b60009081526007602052604090205490565b6102fa6102f5366004611c84565b6107bc565b60405161015b9190611e65565b610177610315366004611857565b6107e0565b610177610328366004611c84565b610909565b60006001600160e01b0319821663622e7a0160e01b1480610352575061035282610a35565b92915050565b610387816040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610a6a565b50565b6000610395826104c3565b9050336001600160a01b03821681146103e057604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661040757604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036104265750505050565b610431848385610b3c565b50505050565b61043f610bcd565b805182511461046e57815181516040516321d1e13360e11b8152600481019290925260248201526044016103d7565b60005b82518110156104be576104b683828151811061048f5761048f611e9d565b60200260200101518383815181106104a9576104a9611e9d565b6020026020010151610c36565b600101610471565b505050565b6000818152600360205260408120546001600160a01b03168061035257604051635747cd1b60e11b8152600481018490526024016103d7565b600061050782610d1e565b6105118383610d56565b9392505050565b61055282826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610d9f565b5050565b606061056182610d1e565b600082815260056020526040902061035290610ec5565b6060815167ffffffffffffffff81111561059457610594611881565b6040519080825280602002602001820160405280156105c757816020015b60608152602001906001900390816105b25790505b50905060005b8251811015610626576105f88382815181106105eb576105eb611e9d565b6020026020010151610ed2565b82828151811061060a5761060a611e9d565b602002602001018190525061061f8160010190565b90506105cd565b50919050565b336106378185610d56565b61066657604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016103d7565b6106738686868686610f74565b505050505050565b606061035282610ed2565b6001600160a01b038116600090815260046020526040812061035290611109565b6106af610bcd565b6106b9600061097b565b565b84518451811415806106ce575083518114155b806106da575082518114155b806106e6575081518114155b15610704576040516393a8311960e01b815260040160405180910390fd5b60005b818110156107a15761079987828151811061072457610724611e9d565b602002602001015187838151811061073e5761073e611e9d565b602002602001015187848151811061075857610758611e9d565b602002602001015187858151811061077257610772611e9d565b602002602001015187868151811061078c5761078c611e9d565b602002602001015161062c565b600101610707565b50505050505050565b6107b2610bcd565b6105528282610c36565b6001600160a01b038116600090815260046020526040902060609061035290611113565b60006107eb826104c3565b9050336001600160a01b038216811461083157604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103d7565b6001600160a01b03841661085857604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036108775750505050565b600083815260056020526040812061088f908661111e565b9050806108c1576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016103d7565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b610911610bcd565b6001600160a01b0381166109765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d7565b610387815b6000546001600160a01b0382811691161461038757600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008281526001602052604090206109f88282611f2d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610a299190611c71565b60405180910390a25050565b60006001600160e01b03198216631c537ddf60e21b148061035257506301ffc9a760e01b6001600160e01b0319831614610352565b6000610a75836104c3565b905033610a8482600086611133565b600160026000828254610a979190612003565b90915550610aa7905082856111ed565b6001600160a01b0382166000908152600460205260409020610ac99085611234565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610b2790869085908a90612016565b60405180910390a46104318260008686611240565b6000818152600560205260408120610b549085611314565b905080610b86576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016103d7565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b33610be06000546001600160a01b031690565b6001600160a01b0316146106b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d7565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610c76576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610cb657604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610cce8282611f2d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610d0f57610d0a836000610100611329565b610d11565b825b604051610a299190611c71565b6000818152600360205260409020546001600160a01b031661038757604051635747cd1b60e11b8152600481018290526024016103d7565b600080610d62836104c3565b9050806001600160a01b0316846001600160a01b03161480610d9757506000838152600560205260409020610d979085611436565b949350505050565b6001600160a01b038416610dc6576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b031615610dff576040516334c7b51160e01b8152600481018490526024016103d7565b33610e0c60008686611133565b600160026000828254610e1f919061204b565b90915550506001600160a01b0385166000908152600460205260409020610e469085611458565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610ea890869089908990612016565b60405180910390a4610ebe600086868686611464565b5050505050565b606060006105118361159c565b6000818152600160205260409020805460609190610eef90611eb3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1b90611eb3565b8015610f685780601f10610f3d57610100808354040283529160200191610f68565b820191906000526020600020905b815481529060010190602001808311610f4b57829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610fa657604051635d67d6c160e01b815260040160405180910390fd5b6000610fb1846104c3565b9050856001600160a01b0316816001600160a01b031614610fff57604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016103d7565b6001600160a01b038516611026576040516324ecef4d60e01b815260040160405180910390fd5b33611032878787611133565b61103c87866111ed565b6001600160a01b038716600090815260046020526040902061105e9086611234565b506001600160a01b03861660009081526004602052604090206110819086611458565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906110e89086908a908a90612016565b60405180910390a46110fc87878786611240565b6107a18787878787611464565b6000610352825490565b60606103528261159c565b6000610511836001600160a01b0384166115f7565b6001600160a01b0383166111685760025460008181526007602090815260408083208590558483526008909152902055505050565b6001600160a01b0382166104be57600060016002546111879190612003565b600083815260086020526040902054909150818110156111c9576000828152600760209081526040808320548484528184208190558352600890915290208190555b50600090815260076020908152604080832083905592825260089052908120555050565b60008181526005602052604081209061120582611109565b905060005b81811015610ebe57600061121e8482611646565b905061122b818787610b3c565b5060010161120a565b60006105118383611652565b61125184631aed5a8560e21b611745565b156104315760008484848460405160200161126f949392919061205e565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906112cd907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab009085906004016120ab565b6000604051808303816000875af11580156112ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067391908101906120c4565b6000610511836001600160a01b038416611652565b60608161133781601f61204b565b10156113765760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103d7565b611380828461204b565b845110156113c45760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103d7565b6060821580156113e3576040519150600082526020820160405261142d565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561141c578051835260209283019201611404565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b03811660009081526001830160205260408120541515610511565b600061051183836115f7565b61147584631aed5a8560e21b611745565b1561153f57600085858584604051602001611493949392919061205e565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906114f1907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d9085906004016120ab565b6000604051808303816000875af1158015611510573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261153891908101906120c4565b5050610ebe565b81610ebe576001600160a01b0384163b1561157857604051634349776d60e01b81526001600160a01b03851660048201526024016103d7565b604051630317313760e01b81526001600160a01b03851660048201526024016103d7565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f6857602002820191906000526020600020905b8154815260200190600101908083116115d85750505050509050919050565b600081815260018301602052604081205461163e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610352565b506000610352565b600061051183836117ce565b6000818152600183016020526040812054801561173b576000611676600183612003565b855490915060009061168a90600190612003565b90508181146116ef5760008660000182815481106116aa576116aa611e9d565b90600052602060002001549050808760000184815481106116cd576116cd611e9d565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061170057611700612132565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610352565b6000915050610352565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156117b7575060208210155b80156117c35750600081115b979650505050505050565b60008260000182815481106117e5576117e5611e9d565b9060005260206000200154905092915050565b60006020828403121561180a57600080fd5b81356001600160e01b03198116811461051157600080fd5b60006020828403121561183457600080fd5b5035919050565b80356001600160a01b038116811461185257600080fd5b919050565b6000806040838503121561186a57600080fd5b6118738361183b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118c0576118c0611881565b604052919050565b600067ffffffffffffffff8211156118e2576118e2611881565b5060051b60200190565b600082601f8301126118fd57600080fd5b8135602061191261190d836118c8565b611897565b82815260059290921b8401810191818101908684111561193157600080fd5b8286015b8481101561194c5780358352918301918301611935565b509695505050505050565b600067ffffffffffffffff82111561197157611971611881565b50601f01601f191660200190565b600082601f83011261199057600080fd5b813561199e61190d82611957565b8181528460208386010111156119b357600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126119e157600080fd5b813560206119f161190d836118c8565b82815260059290921b84018101918181019086841115611a1057600080fd5b8286015b8481101561194c57803567ffffffffffffffff811115611a345760008081fd5b611a428986838b010161197f565b845250918301918301611a14565b60008060408385031215611a6357600080fd5b823567ffffffffffffffff80821115611a7b57600080fd5b611a87868387016118ec565b93506020850135915080821115611a9d57600080fd5b50611aaa858286016119d0565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611af55783516001600160a01b031683529284019291840191600101611ad0565b50909695505050505050565b600060208284031215611b1357600080fd5b813567ffffffffffffffff811115611b2a57600080fd5b610d97848285016118ec565b60005b83811015611b51578181015183820152602001611b39565b50506000910152565b60008151808452611b72816020860160208601611b36565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611bdb57603f19888603018452611bc9858351611b5a565b94509285019290850190600101611bad565b5092979650505050505050565b8035801515811461185257600080fd5b600080600080600060a08688031215611c1057600080fd5b611c198661183b565b9450611c276020870161183b565b935060408601359250611c3c60608701611be8565b9150608086013567ffffffffffffffff811115611c5857600080fd5b611c648882890161197f565b9150509295509295909350565b6020815260006105116020830184611b5a565b600060208284031215611c9657600080fd5b6105118261183b565b600082601f830112611cb057600080fd5b81356020611cc061190d836118c8565b82815260059290921b84018101918181019086841115611cdf57600080fd5b8286015b8481101561194c57611cf48161183b565b8352918301918301611ce3565b600082601f830112611d1257600080fd5b81356020611d2261190d836118c8565b82815260059290921b84018101918181019086841115611d4157600080fd5b8286015b8481101561194c57611d5681611be8565b8352918301918301611d45565b600080600080600060a08688031215611d7b57600080fd5b853567ffffffffffffffff80821115611d9357600080fd5b611d9f89838a01611c9f565b96506020880135915080821115611db557600080fd5b611dc189838a01611c9f565b95506040880135915080821115611dd757600080fd5b611de389838a016118ec565b94506060880135915080821115611df957600080fd5b611e0589838a01611d01565b93506080880135915080821115611e1b57600080fd5b50611c64888289016119d0565b60008060408385031215611e3b57600080fd5b82359150602083013567ffffffffffffffff811115611e5957600080fd5b611aaa8582860161197f565b6020808252825182820181905260009190848201906040850190845b81811015611af557835183529284019291840191600101611e81565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611ec757607f821691505b60208210810361062657634e487b7160e01b600052602260045260246000fd5b601f8211156104be57600081815260208120601f850160051c81016020861015611f0e5750805b601f850160051c820191505b8181101561067357828155600101611f1a565b815167ffffffffffffffff811115611f4757611f47611881565b611f5b81611f558454611eb3565b84611ee7565b602080601f831160018114611f905760008415611f785750858301515b600019600386901b1c1916600185901b178555610673565b600085815260208120601f198616915b82811015611fbf57888601518255948401946001909101908401611fa0565b5085821015611fdd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8181038181111561035257610352611fed565b6001600160a01b0384168152821515602082015260606040820181905260009061204290830184611b5a565b95945050505050565b8082018082111561035257610352611fed565b60006bffffffffffffffffffffffff19808760601b168352808660601b16601484015250836028830152825161209b816048850160208701611b36565b9190910160480195945050505050565b828152604060208201526000610d976040830184611b5a565b6000602082840312156120d657600080fd5b815167ffffffffffffffff8111156120ed57600080fd5b8201601f810184136120fe57600080fd5b805161210c61190d82611957565b81815285602083850101111561212157600080fd5b612042826020830160208601611b36565b634e487b7160e01b600052603160045260246000fdfea264697066735822122022991c92df8207e6bb03a177a4996b0c43afbb27e13e78bd5f2d98f993e0c8f264736f6c63430008110033",
    "sourceMap": "287:427:139:-:0;;;341:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;472:4;478:6;486:8;472:4;478:6;486:8;;-1:-1:-1;;;;;812:22:173;;804:73;;;;-1:-1:-1;;;804:73:173;;2041:2:202;804:73:173;;;2023:21:202;2080:2;2060:18;;;2053:30;2119:34;2099:18;;;2092:62;-1:-1:-1;;;2170:18:202;;;2163:36;2216:19;;804:73:173;;;;;;;;887:32;910:8;887:22;;;;;:32;;:::i;:::-;764:162;1016:78:30::1;231:66:29;1031:29:30;;1062:31;;;;;;;;;;;;;-1:-1:-1::0;;;1062:31:30::1;;::::0;1016:14:::1;;;;;:78;;:::i;:::-;1105:50;476:66:29;1120:20:30;;1148:5;1105:14;;;;;:50;;:::i;:::-;1165:54;619:66:29;1180:22:30;;1210:7;1165:14;;;;;:54;;:::i;:::-;827:399:::0;;;967:159:65;;;341:157:139;;;287:427;;1948:235:177;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;2012:165;1948:235;:::o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;14:127:202:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:202;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:202;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:202;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:202:o;1105:729::-;1213:6;1221;1229;1282:2;1270:9;1261:7;1257:23;1253:32;1250:52;;;1298:1;1295;1288:12;1250:52;1325:16;;-1:-1:-1;;;;;1390:14:202;;;1387:34;;;1417:1;1414;1407:12;1387:34;1440:61;1493:7;1484:6;1473:9;1469:22;1440:61;:::i;:::-;1430:71;;1547:2;1536:9;1532:18;1526:25;1510:41;;1576:2;1566:8;1563:16;1560:36;;;1592:1;1589;1582:12;1560:36;;1615:63;1670:7;1659:8;1648:9;1644:24;1615:63;:::i;:::-;1721:2;1706:18;;1700:25;1605:73;;-1:-1:-1;1700:25:202;-1:-1:-1;;;;;;1754:31:202;;1744:42;;1734:70;;1800:1;1797;1790:12;1734:70;1823:5;1813:15;;;1105:729;;;;;:::o;2246:380::-;2325:1;2321:12;;;;2368;;;2389:61;;2443:4;2435:6;2431:17;2421:27;;2389:61;2496:2;2488:6;2485:14;2465:18;2462:38;2459:161;;2542:10;2537:3;2533:20;2530:1;2523:31;2577:4;2574:1;2567:15;2605:4;2602:1;2595:15;2459:161;;2246:380;;;:::o;2756:544::-;2857:2;2852:3;2849:11;2846:448;;;2893:1;2918:5;2914:2;2907:17;2963:4;2959:2;2949:19;3033:2;3021:10;3017:19;3014:1;3010:27;3004:4;3000:38;3069:4;3057:10;3054:20;3051:47;;;-1:-1:-1;3092:4:202;3051:47;3147:2;3142:3;3138:12;3135:1;3131:20;3125:4;3121:31;3111:41;;3202:82;3220:2;3213:5;3210:13;3202:82;;;3265:17;;;3246:1;3235:13;3202:82;;;3206:3;;;2846:448;2756:544;;;:::o;3476:1348::-;3594:10;;-1:-1:-1;;;;;3616:30:202;;3613:56;;;3649:18;;:::i;:::-;3678:96;3767:6;3727:38;3759:4;3753:11;3727:38;:::i;:::-;3721:4;3678:96;:::i;:::-;3829:4;;3893:2;3882:14;;3910:1;3905:662;;;;4611:1;4628:6;4625:89;;;-1:-1:-1;4680:19:202;;;4674:26;4625:89;-1:-1:-1;;3433:1:202;3429:11;;;3425:24;3421:29;3411:40;3457:1;3453:11;;;3408:57;4727:81;;3875:943;;3905:662;2703:1;2696:14;;;2740:4;2727:18;;-1:-1:-1;;3941:20:202;;;4058:236;4072:7;4069:1;4066:14;4058:236;;;4161:19;;;4155:26;4140:42;;4253:27;;;;4221:1;4209:14;;;;4088:19;;4058:236;;;4062:3;4322:6;4313:7;4310:19;4307:201;;;4383:19;;;4377:26;-1:-1:-1;;4466:1:202;4462:14;;;4478:3;4458:24;4454:37;4450:42;4435:58;4420:74;;4307:201;-1:-1:-1;;;;;4554:1:202;4538:14;;;4534:22;4521:36;;-1:-1:-1;3476:1348:202:o;4829:394::-;4976:2;4965:9;4958:21;4939:4;5008:6;5002:13;5051:6;5046:2;5035:9;5031:18;5024:34;5067:79;5139:6;5134:2;5123:9;5119:18;5114:2;5106:6;5102:15;5067:79;:::i;:::-;5207:2;5186:15;-1:-1:-1;;5182:29:202;5167:45;;;;5214:2;5163:54;;4829:394;-1:-1:-1;;4829:394:202:o;:::-;287:427:139;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c8063511b6952116100b85780637f23690c1161007c5780637f23690c146102a35780638da5cb5b146102b657806392a91a3a146102c7578063a3b261f2146102e7578063cf5182ba14610307578063f2fde38b1461031a57600080fd5b8063511b69521461024257806354f6127f1461025557806370a0823114610275578063715018a6146102885780637e87632c1461029057600080fd5b8063217b2270116100ff578063217b2270146101b15780632a3654a4146101dc5780632cfd3005146101ef57806349a6078d146102025780634e3e6e9c1461022257600080fd5b806301ffc9a71461013c57806308a1eee1146101645780630b0c6d821461017957806314a6e2931461018c57806318160ddd1461019f575b600080fd5b61014f61014a3660046117f8565b61032d565b60405190151581526020015b60405180910390f35b610177610172366004611822565b610358565b005b610177610187366004611857565b61038a565b61017761019a366004611a50565b610437565b6002545b60405190815260200161015b565b6101c46101bf366004611822565b6104c3565b6040516001600160a01b03909116815260200161015b565b61014f6101ea366004611857565b6104fc565b6101776101fd366004611857565b610518565b610215610210366004611822565b610556565b60405161015b9190611ab4565b610235610230366004611b01565b610578565b60405161015b9190611b86565b610177610250366004611bf8565b61062c565b610268610263366004611822565b61067b565b60405161015b9190611c71565b6101a3610283366004611c84565b610686565b6101776106a7565b61017761029e366004611d63565b6106bb565b6101776102b1366004611e28565b6107aa565b6000546001600160a01b03166101c4565b6101a36102d5366004611822565b60009081526007602052604090205490565b6102fa6102f5366004611c84565b6107bc565b60405161015b9190611e65565b610177610315366004611857565b6107e0565b610177610328366004611c84565b610909565b60006001600160e01b0319821663622e7a0160e01b1480610352575061035282610a35565b92915050565b610387816040518060400160405280600d81526020016c3332b2b6103a343290313ab93760991b815250610a6a565b50565b6000610395826104c3565b9050336001600160a01b03821681146103e057604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064015b60405180910390fd5b6001600160a01b03841661040757604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036104265750505050565b610431848385610b3c565b50505050565b61043f610bcd565b805182511461046e57815181516040516321d1e13360e11b8152600481019290925260248201526044016103d7565b60005b82518110156104be576104b683828151811061048f5761048f611e9d565b60200260200101518383815181106104a9576104a9611e9d565b6020026020010151610c36565b600101610471565b505050565b6000818152600360205260408120546001600160a01b03168061035257604051635747cd1b60e11b8152600481018490526024016103d7565b600061050782610d1e565b6105118383610d56565b9392505050565b61055282826001604051806040016040528060158152602001743a37b5b2b710383934b73a32b91033b7903139393960591b815250610d9f565b5050565b606061056182610d1e565b600082815260056020526040902061035290610ec5565b6060815167ffffffffffffffff81111561059457610594611881565b6040519080825280602002602001820160405280156105c757816020015b60608152602001906001900390816105b25790505b50905060005b8251811015610626576105f88382815181106105eb576105eb611e9d565b6020026020010151610ed2565b82828151811061060a5761060a611e9d565b602002602001018190525061061f8160010190565b90506105cd565b50919050565b336106378185610d56565b61066657604051631294d2a960e01b8152600481018590526001600160a01b03821660248201526044016103d7565b6106738686868686610f74565b505050505050565b606061035282610ed2565b6001600160a01b038116600090815260046020526040812061035290611109565b6106af610bcd565b6106b9600061097b565b565b84518451811415806106ce575083518114155b806106da575082518114155b806106e6575081518114155b15610704576040516393a8311960e01b815260040160405180910390fd5b60005b818110156107a15761079987828151811061072457610724611e9d565b602002602001015187838151811061073e5761073e611e9d565b602002602001015187848151811061075857610758611e9d565b602002602001015187858151811061077257610772611e9d565b602002602001015187868151811061078c5761078c611e9d565b602002602001015161062c565b600101610707565b50505050505050565b6107b2610bcd565b6105528282610c36565b6001600160a01b038116600090815260046020526040902060609061035290611113565b60006107eb826104c3565b9050336001600160a01b038216811461083157604051632d938f5160e11b81526001600160a01b03808416600483015260248201859052821660448201526064016103d7565b6001600160a01b03841661085857604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316826001600160a01b0316036108775750505050565b600083815260056020526040812061088f908661111e565b9050806108c1576040516314ec4d6d60e31b81526001600160a01b0386166004820152602481018590526044016103d7565b83836001600160a01b0316866001600160a01b03167f34b797fc5a526f7bf1d2b5de25f6564fd85ae364e3ee939aee7c1ac27871a98860405160405180910390a45050505050565b610911610bcd565b6001600160a01b0381166109765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d7565b610387815b6000546001600160a01b0382811691161461038757600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008281526001602052604090206109f88282611f2d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610a299190611c71565b60405180910390a25050565b60006001600160e01b03198216631c537ddf60e21b148061035257506301ffc9a760e01b6001600160e01b0319831614610352565b6000610a75836104c3565b905033610a8482600086611133565b600160026000828254610a979190612003565b90915550610aa7905082856111ed565b6001600160a01b0382166000908152600460205260409020610ac99085611234565b5060008481526003602052604080822080546001600160a01b0319169055518591906001600160a01b038516907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610b2790869085908a90612016565b60405180910390a46104318260008686611240565b6000818152600560205260408120610b549085611314565b905080610b86576040516312a8c6a360e21b81526001600160a01b0385166004820152602481018390526044016103d7565b81836001600160a01b0316856001600160a01b03167f17d5389f6ab6adb2647dfa0aa365c323d37adacc30b33a65310b6158ce1373d560405160405180910390a450505050565b33610be06000546001600160a01b031690565b6001600160a01b0316146106b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d7565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201610c76576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201610cb657604051630eceab6760e31b815260040160405180910390fd5b6000828152600160205260409020610cce8282611f2d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b261010083511115610d0f57610d0a836000610100611329565b610d11565b825b604051610a299190611c71565b6000818152600360205260409020546001600160a01b031661038757604051635747cd1b60e11b8152600481018290526024016103d7565b600080610d62836104c3565b9050806001600160a01b0316846001600160a01b03161480610d9757506000838152600560205260409020610d979085611436565b949350505050565b6001600160a01b038416610dc6576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b031615610dff576040516334c7b51160e01b8152600481018490526024016103d7565b33610e0c60008686611133565b600160026000828254610e1f919061204b565b90915550506001600160a01b0385166000908152600460205260409020610e469085611458565b5060008481526003602052604080822080546001600160a01b0319166001600160a01b03891690811790915590518692907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf90610ea890869089908990612016565b60405180910390a4610ebe600086868686611464565b5050505050565b606060006105118361159c565b6000818152600160205260409020805460609190610eef90611eb3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1b90611eb3565b8015610f685780601f10610f3d57610100808354040283529160200191610f68565b820191906000526020600020905b815481529060010190602001808311610f4b57829003601f168201915b50505050509050919050565b836001600160a01b0316856001600160a01b031603610fa657604051635d67d6c160e01b815260040160405180910390fd5b6000610fb1846104c3565b9050856001600160a01b0316816001600160a01b031614610fff57604051632d938f5160e11b81526001600160a01b03808316600483015260248201869052871660448201526064016103d7565b6001600160a01b038516611026576040516324ecef4d60e01b815260040160405180910390fd5b33611032878787611133565b61103c87866111ed565b6001600160a01b038716600090815260046020526040902061105e9086611234565b506001600160a01b03861660009081526004602052604090206110819086611458565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf906110e89086908a908a90612016565b60405180910390a46110fc87878786611240565b6107a18787878787611464565b6000610352825490565b60606103528261159c565b6000610511836001600160a01b0384166115f7565b6001600160a01b0383166111685760025460008181526007602090815260408083208590558483526008909152902055505050565b6001600160a01b0382166104be57600060016002546111879190612003565b600083815260086020526040902054909150818110156111c9576000828152600760209081526040808320548484528184208190558352600890915290208190555b50600090815260076020908152604080832083905592825260089052908120555050565b60008181526005602052604081209061120582611109565b905060005b81811015610ebe57600061121e8482611646565b905061122b818787610b3c565b5060010161120a565b60006105118383611652565b61125184631aed5a8560e21b611745565b156104315760008484848460405160200161126f949392919061205e565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906112cd907fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab009085906004016120ab565b6000604051808303816000875af11580156112ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067391908101906120c4565b6000610511836001600160a01b038416611652565b60608161133781601f61204b565b10156113765760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103d7565b611380828461204b565b845110156113c45760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103d7565b6060821580156113e3576040519150600082526020820160405261142d565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561141c578051835260209283019201611404565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b03811660009081526001830160205260408120541515610511565b600061051183836115f7565b61147584631aed5a8560e21b611745565b1561153f57600085858584604051602001611493949392919061205e565b60408051601f1981840301815290829052631aed5a8560e21b825291506001600160a01b03861690636bb56a14906114f1907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d9085906004016120ab565b6000604051808303816000875af1158015611510573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261153891908101906120c4565b5050610ebe565b81610ebe576001600160a01b0384163b1561157857604051634349776d60e01b81526001600160a01b03851660048201526024016103d7565b604051630317313760e01b81526001600160a01b03851660048201526024016103d7565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f6857602002820191906000526020600020905b8154815260200190600101908083116115d85750505050509050919050565b600081815260018301602052604081205461163e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610352565b506000610352565b600061051183836117ce565b6000818152600183016020526040812054801561173b576000611676600183612003565b855490915060009061168a90600190612003565b90508181146116ef5760008660000182815481106116aa576116aa611e9d565b90600052602060002001549050808760000184815481106116cd576116cd611e9d565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061170057611700612132565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610352565b6000915050610352565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156117b7575060208210155b80156117c35750600081115b979650505050505050565b60008260000182815481106117e5576117e5611e9d565b9060005260206000200154905092915050565b60006020828403121561180a57600080fd5b81356001600160e01b03198116811461051157600080fd5b60006020828403121561183457600080fd5b5035919050565b80356001600160a01b038116811461185257600080fd5b919050565b6000806040838503121561186a57600080fd5b6118738361183b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118c0576118c0611881565b604052919050565b600067ffffffffffffffff8211156118e2576118e2611881565b5060051b60200190565b600082601f8301126118fd57600080fd5b8135602061191261190d836118c8565b611897565b82815260059290921b8401810191818101908684111561193157600080fd5b8286015b8481101561194c5780358352918301918301611935565b509695505050505050565b600067ffffffffffffffff82111561197157611971611881565b50601f01601f191660200190565b600082601f83011261199057600080fd5b813561199e61190d82611957565b8181528460208386010111156119b357600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126119e157600080fd5b813560206119f161190d836118c8565b82815260059290921b84018101918181019086841115611a1057600080fd5b8286015b8481101561194c57803567ffffffffffffffff811115611a345760008081fd5b611a428986838b010161197f565b845250918301918301611a14565b60008060408385031215611a6357600080fd5b823567ffffffffffffffff80821115611a7b57600080fd5b611a87868387016118ec565b93506020850135915080821115611a9d57600080fd5b50611aaa858286016119d0565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611af55783516001600160a01b031683529284019291840191600101611ad0565b50909695505050505050565b600060208284031215611b1357600080fd5b813567ffffffffffffffff811115611b2a57600080fd5b610d97848285016118ec565b60005b83811015611b51578181015183820152602001611b39565b50506000910152565b60008151808452611b72816020860160208601611b36565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611bdb57603f19888603018452611bc9858351611b5a565b94509285019290850190600101611bad565b5092979650505050505050565b8035801515811461185257600080fd5b600080600080600060a08688031215611c1057600080fd5b611c198661183b565b9450611c276020870161183b565b935060408601359250611c3c60608701611be8565b9150608086013567ffffffffffffffff811115611c5857600080fd5b611c648882890161197f565b9150509295509295909350565b6020815260006105116020830184611b5a565b600060208284031215611c9657600080fd5b6105118261183b565b600082601f830112611cb057600080fd5b81356020611cc061190d836118c8565b82815260059290921b84018101918181019086841115611cdf57600080fd5b8286015b8481101561194c57611cf48161183b565b8352918301918301611ce3565b600082601f830112611d1257600080fd5b81356020611d2261190d836118c8565b82815260059290921b84018101918181019086841115611d4157600080fd5b8286015b8481101561194c57611d5681611be8565b8352918301918301611d45565b600080600080600060a08688031215611d7b57600080fd5b853567ffffffffffffffff80821115611d9357600080fd5b611d9f89838a01611c9f565b96506020880135915080821115611db557600080fd5b611dc189838a01611c9f565b95506040880135915080821115611dd757600080fd5b611de389838a016118ec565b94506060880135915080821115611df957600080fd5b611e0589838a01611d01565b93506080880135915080821115611e1b57600080fd5b50611c64888289016119d0565b60008060408385031215611e3b57600080fd5b82359150602083013567ffffffffffffffff811115611e5957600080fd5b611aaa8582860161197f565b6020808252825182820181905260009190848201906040850190845b81811015611af557835183529284019291840191600101611e81565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611ec757607f821691505b60208210810361062657634e487b7160e01b600052602260045260246000fd5b601f8211156104be57600081815260208120601f850160051c81016020861015611f0e5750805b601f850160051c820191505b8181101561067357828155600101611f1a565b815167ffffffffffffffff811115611f4757611f47611881565b611f5b81611f558454611eb3565b84611ee7565b602080601f831160018114611f905760008415611f785750858301515b600019600386901b1c1916600185901b178555610673565b600085815260208120601f198616915b82811015611fbf57888601518255948401946001909101908401611fa0565b5085821015611fdd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8181038181111561035257610352611fed565b6001600160a01b0384168152821515602082015260606040820181905260009061204290830184611b5a565b95945050505050565b8082018082111561035257610352611fed565b60006bffffffffffffffffffffffff19808760601b168352808660601b16601484015250836028830152825161209b816048850160208701611b36565b9190910160480195945050505050565b828152604060208201526000610d976040830184611b5a565b6000602082840312156120d657600080fd5b815167ffffffffffffffff8111156120ed57600080fd5b8201601f810184136120fe57600080fd5b805161210c61190d82611957565b81815285602083850101111561212157600080fd5b612042826020830160208601611b36565b634e487b7160e01b600052603160045260246000fdfea264697066735822122022991c92df8207e6bb03a177a4996b0c43afbb27e13e78bd5f2d98f993e0c8f264736f6c63430008110033",
    "sourceMap": "287:427:139:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:253:65;;;;;;:::i;:::-;;:::i;:::-;;;470:14:202;;463:22;445:41;;433:2;418:18;1193:253:65;;;;;;;;626:86:139;;;;;;:::i;:::-;;:::i;:::-;;3461:587:66;;;;;;:::i;:::-;;:::i;1839:433:174:-;;;;;;:::i;:::-;;:::i;1690:92:66:-;1760:15;;1690:92;;;4688:25:202;;;4676:2;4661:18;1690:92:66;4542:177:202;2082:259:66;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4888:32:202;;;4870:51;;4858:2;4843:18;2082:259:66;4724:203:202;4119:188:66;;;;;;:::i;:::-;;:::i;504:116:139:-;;;;;;:::i;:::-;;:::i;4378:174:66:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1241:370:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5089:376:66:-;;;;;;:::i;:::-;;:::i;1058:133:174:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1885:126:66:-;;;;;;:::i;:::-;;:::i;1178:92:177:-;;;:::i;5536:650:66:-;;;;;;:::i;:::-;;:::i;1661:128:174:-;;;;;;:::i;:::-;;:::i;601:85:177:-;647:7;673:6;-1:-1:-1;;;;;673:6:177;601:85;;718:104:74;;;;;;:::i;:::-;771:7;797:18;;;:11;:18;;;;;;;718:104;2412:136:66;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2654:736::-;;;;;;:::i;:::-;;:::i;1419:189:177:-;;;;;;:::i;:::-;;:::i;1193:253:65:-;1340:4;-1:-1:-1;;;;;;1367:32:65;;-1:-1:-1;;;1367:32:65;;:72;;;1403:36;1427:11;1403:23;:36::i;:::-;1360:79;1193:253;-1:-1:-1;;1193:253:65:o;626:86:139:-;674:31;680:7;674:31;;;;;;;;;;;;;-1:-1:-1;;;674:31:139;;;:5;:31::i;:::-;626:86;:::o;3461:587:66:-;3545:18;3566:21;3579:7;3566:12;:21::i;:::-;3545:42;-1:-1:-1;3614:10:66;-1:-1:-1;;;;;3639:20:66;;;;3635:104;;3682:46;;-1:-1:-1;;;3682:46:66;;-1:-1:-1;;;;;12748:15:202;;;3682:46:66;;;12730:34:202;12780:18;;;12773:34;;;12843:15;;12823:18;;;12816:43;12665:18;;3682:46:66;;;;;;;;3635:104;-1:-1:-1;;;;;3753:22:66;;3749:96;;3798:36;;-1:-1:-1;;;3798:36:66;;;;;;;;;;;3749:96;3944:8;-1:-1:-1;;;;;3930:22:66;:10;-1:-1:-1;;;;;3930:22:66;;3926:59;;3968:7;;3461:587;;:::o;3926:59::-;3995:46;4011:8;4021:10;4033:7;3995:15;:46::i;:::-;3535:513;;3461:587;;:::o;1839:433:174:-;805:13:177;:11;:13::i;:::-;1996:10:174::1;:17;1977:8;:15;:36;1973:146;;2073:15:::0;;2090:17;;2036:72:::1;::::0;-1:-1:-1;;;2036:72:174;;::::1;::::0;::::1;13044:25:202::0;;;;13085:18;;;13078:34;13017:18;;2036:72:174::1;12870:248:202::0;1973:146:174::1;2134:9;2129:137;2153:8;:15;2149:1;:19;2129:137;;;2219:36;2228:8;2237:1;2228:11;;;;;;;;:::i;:::-;;;;;;;2241:10;2252:1;2241:13;;;;;;;;:::i;:::-;;;;;;;2219:8;:36::i;:::-;2841:1:::0;2837:5;2129:137:::1;;;;1839:433:::0;;:::o;2082:259:66:-;2142:7;2182:21;;;:12;:21;;;;;;-1:-1:-1;;;;;2182:21:66;;2214:93;;2265:31;;-1:-1:-1;;;2265:31:66;;;;;4688:25:202;;;4661:18;;2265:31:66;4542:177:202;4119:188:66;4206:4;4222:23;4237:7;4222:14;:23::i;:::-;4263:37;4282:8;4292:7;4263:18;:37::i;:::-;4256:44;4119:188;-1:-1:-1;;;4119:188:66:o;504:116:139:-;564:49;570:2;574:7;583:4;564:49;;;;;;;;;;;;;-1:-1:-1;;;564:49:139;;;:5;:49::i;:::-;504:116;;:::o;4378:174:66:-;4448:16;4476:23;4491:7;4476:14;:23::i;:::-;4517:19;;;;:10;:19;;;;;:28;;:26;:28::i;1241:370:174:-;1346:25;1412:8;:15;1400:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:41;;1444:9;1439:138;1463:8;:15;1459:1;:19;1439:138;;;1545:21;1554:8;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;1545:8;:21::i;:::-;1529:10;1540:1;1529:13;;;;;;;;:::i;:::-;;;;;;:37;;;;1484:29;1511:1;2841;2837:5;;2717:142;1484:29;1480:33;;1439:138;;;;1241:370;;;:::o;5089:376:66:-;5271:10;5297:37;5271:10;5326:7;5297:18;:37::i;:::-;5292:115;;5357:39;;-1:-1:-1;;;5357:39:66;;;;;13429:25:202;;;-1:-1:-1;;;;;13490:32:202;;13470:18;;;13463:60;13402:18;;5357:39:66;13255:274:202;5292:115:66;5417:41;5427:4;5433:2;5437:7;5446:5;5453:4;5417:9;:41::i;:::-;5242:223;5089:376;;;;;:::o;1058:133:174:-;1121:22;1167:17;1176:7;1167:8;:17::i;1885:126:66:-;-1:-1:-1;;;;;1971:24:66;;1945:7;1971:24;;;:12;:24;;;;;:33;;:31;:33::i;1178:92:177:-;805:13;:11;:13::i;:::-;1242:21:::1;1260:1;1242:9;:21::i;:::-;1178:92::o:0;5536:650:66:-;5763:11;;5815:9;;5801:23;;;;:67;;;5854:7;:14;5840:10;:28;;5801:67;:109;;;;5898:5;:12;5884:10;:26;;5801:109;:150;;;;5940:4;:11;5926:10;:25;;5801:150;5784:236;;;5983:26;;-1:-1:-1;;;5983:26:66;;;;;;;;;;;5784:236;6035:9;6030:150;6054:10;6050:1;:14;6030:150;;;6114:55;6123:4;6128:1;6123:7;;;;;;;;:::i;:::-;;;;;;;6132:2;6135:1;6132:5;;;;;;;;:::i;:::-;;;;;;;6139:7;6147:1;6139:10;;;;;;;;:::i;:::-;;;;;;;6151:5;6157:1;6151:8;;;;;;;;:::i;:::-;;;;;;;6161:4;6166:1;6161:7;;;;;;;;:::i;:::-;;;;;;;6114:8;:55::i;:::-;2841:1:174;2837:5;6030:150:66;;;;5732:454;5536:650;;;;;:::o;1661:128:174:-;805:13:177;:11;:13::i;:::-;1754:28:174::1;1763:7;1772:9;1754:8;:28::i;2412:136:66:-:0;-1:-1:-1;;;;;2508:24:66;;;;;;:12;:24;;;;;2473:16;;2508:33;;:31;:33::i;2654:736::-;2741:18;2762:21;2775:7;2762:12;:21::i;:::-;2741:42;-1:-1:-1;2810:10:66;-1:-1:-1;;;;;2835:20:66;;;;2831:104;;2878:46;;-1:-1:-1;;;2878:46:66;;-1:-1:-1;;;;;12748:15:202;;;2878:46:66;;;12730:34:202;12780:18;;;12773:34;;;12843:15;;12823:18;;;12816:43;12665:18;;2878:46:66;12490:375:202;2831:104:66;-1:-1:-1;;;;;2949:22:66;;2945:96;;2994:36;;-1:-1:-1;;;2994:36:66;;;;;;;;;;;2945:96;3140:8;-1:-1:-1;;;;;3126:22:66;:10;-1:-1:-1;;;;;3126:22:66;;3122:59;;3164:7;;2654:736;;:::o;3122:59::-;3191:12;3206:19;;;:10;:19;;;;;:33;;3230:8;3206:23;:33::i;:::-;3191:48;;3254:7;3249:69;;3270:48;;-1:-1:-1;;;3270:48:66;;-1:-1:-1;;;;;13726:32:202;;3270:48:66;;;13708:51:202;13775:18;;;13768:34;;;13681:18;;3270:48:66;13534:274:202;3249:69:66;3375:7;3363:10;-1:-1:-1;;;;;3334:49:66;3353:8;-1:-1:-1;;;;;3334:49:66;;;;;;;;;;;2731:659;;;2654:736;;:::o;1419:189:177:-;805:13;:11;:13::i;:::-;-1:-1:-1;;;;;1507:22:177;::::1;1499:73;;;::::0;-1:-1:-1;;;1499:73:177;;14015:2:202;1499:73:177::1;::::0;::::1;13997:21:202::0;14054:2;14034:18;;;14027:30;14093:34;14073:18;;;14066:62;-1:-1:-1;;;14144:18:202;;;14137:36;14190:19;;1499:73:177::1;13813:402:202::0;1499:73:177::1;1582:19;1592:8;1948:235:::0;647:7;673:6;-1:-1:-1;;;;;2016:19:177;;;673:6;;2016:19;2012:165;;2051:16;2070:6;;-1:-1:-1;;;;;2090:17:177;;;-1:-1:-1;;;;;;2090:17:177;;;;;;2126:40;;2070:6;;;;;;;2126:40;;2051:16;2126:40;2037:140;1948:235;:::o;2413:166:174:-;2499:15;;;;:6;:15;;;;;:27;2517:9;2499:15;:27;:::i;:::-;;2553:7;2541:31;2562:9;2541:31;;;;;;:::i;:::-;;;;;;;;2413:166;;:::o;2907:251::-;3049:4;-1:-1:-1;;;;;;3076:35:174;;-1:-1:-1;;;3076:35:174;;:75;;-1:-1:-1;;;;;;;;;;937:40:196;;;3115:36:174;829:155:196;9316:575:66;9394:18;9415:21;9428:7;9415:12;:21::i;:::-;9394:42;-1:-1:-1;9465:10:66;9486:53;9394:42;9446:16;9531:7;9486:20;:53::i;:::-;9599:1;9580:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;9611:36:66;;-1:-1:-1;9627:10:66;9639:7;9611:15;:36::i;:::-;-1:-1:-1;;;;;9658:24:66;;;;;;:12;:24;;;;;:40;;9690:7;9658:31;:40::i;:::-;-1:-1:-1;9715:21:66;;;;:12;:21;;;;;;9708:28;;-1:-1:-1;;;;;;9708:28:66;;;9752:64;9728:7;;9715:21;-1:-1:-1;;;;;9752:64:66;;;;;;;9761:8;;9715:21;;9811:4;;9752:64;:::i;:::-;;;;;;;;9827:57;9846:10;9866:1;9870:7;9879:4;9827:18;:57::i;6284:333::-;6421:14;6438:19;;;:10;:19;;;;;:36;;6465:8;6438:26;:36::i;:::-;6421:53;;6489:9;6484:65;;6507:42;;-1:-1:-1;;;6507:42:66;;-1:-1:-1;;;;;13726:32:202;;6507:42:66;;;13708:51:202;13775:18;;;13768:34;;;13681:18;;6507:42:66;13534:274:202;6484:65:66;6602:7;6590:10;-1:-1:-1;;;;;6564:46:66;6580:8;-1:-1:-1;;;;;6564:46:66;;;;;;;;;;;6411:206;6284:333;;;:::o;1681:128:177:-;1755:10;1744:7;647;673:6;-1:-1:-1;;;;;673:6:177;;601:85;1744:7;-1:-1:-1;;;;;1744:21:177;;1736:66;;;;-1:-1:-1;;;1736:66:177;;17670:2:202;1736:66:177;;;17652:21:202;;;17689:18;;;17682:30;17748:34;17728:18;;;17721:62;17800:18;;1736:66:177;17468:356:202;1524:517:30;1623:31;;;1619:416;;1677:26;;-1:-1:-1;;;1677:26:30;;;;;;;;;;;1619:416;1724:33;;;1720:315;;1780:28;;-1:-1:-1;;;1780:28:30;;;;;;;;;;;1720:315;1839:15;;;;:6;:15;;;;;:27;1857:9;1839:15;:27;:::i;:::-;;1914:7;1885:139;1959:3;1939:9;:16;:23;;:71;;1977:33;1992:9;2003:1;2006:3;1977:14;:33::i;:::-;1939:71;;;1965:9;1939:71;1885:139;;;;;;:::i;8040:157:66:-;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;8105:86;;8149:31;;-1:-1:-1;;;8149:31:66;;;;;4688:25:202;;;4661:18;;8149:31:66;4542:177:202;4710:273:66;4834:4;4854:18;4875:21;4888:7;4875:12;:21::i;:::-;4854:42;;4925:10;-1:-1:-1;;;;;4915:20:66;:6;-1:-1:-1;;;;;4915:20:66;;:60;;;-1:-1:-1;4939:19:66;;;;:10;:19;;;;;:36;;4968:6;4939:28;:36::i;:::-;4907:69;4710:273;-1:-1:-1;;;;4710:273:66:o;8425:700::-;-1:-1:-1;;;;;8569:16:66;;8565:83;;8608:29;;-1:-1:-1;;;8608:29:66;;;;;;;;;;;8565:83;7884:4;7907:21;;;:12;:21;;;;;;-1:-1:-1;;;;;7907:21:66;:35;8658:87;;8701:33;;-1:-1:-1;;;8701:33:66;;;;;4688:25:202;;;4661:18;;8701:33:66;4542:177:202;8658:87:66;8774:10;8795:45;8755:16;8828:2;8832:7;8795:20;:45::i;:::-;8900:1;8881:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8912:16:66;;;;;;:12;:16;;;;;:29;;8933:7;8912:20;:29::i;:::-;-1:-1:-1;8951:21:66;;;;:12;:21;;;;;;:26;;-1:-1:-1;;;;;;8951:26:66;-1:-1:-1;;;;;8951:26:66;;;;;;;;8993:56;;8951:21;;;8993:56;;;;9002:8;;9037:5;;9044:4;;8993:56;:::i;:::-;;;;;;;;9060:58;9089:1;9093:2;9097:7;9106:5;9113:4;9060:20;:58::i;:::-;8555:570;8425:700;;;;:::o;9982:300:199:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;2278:129:174:-;2385:15;;;;:6;:15;;;;;2378:22;;2344;;2385:15;2378:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:129;;;:::o;10133:930:66:-;10311:2;-1:-1:-1;;;;;10303:10:66;:4;-1:-1:-1;;;;;10303:10:66;;10299:70;;10336:22;;-1:-1:-1;;;10336:22:66;;;;;;;;;;;10299:70;10379:18;10400:21;10413:7;10400:12;:21::i;:::-;10379:42;;10449:4;-1:-1:-1;;;;;10435:18:66;:10;-1:-1:-1;;;;;10435:18:66;;10431:100;;10476:44;;-1:-1:-1;;;10476:44:66;;-1:-1:-1;;;;;12748:15:202;;;10476:44:66;;;12730:34:202;12780:18;;;12773:34;;;12843:15;;12823:18;;;12816:43;12665:18;;10476:44:66;12490:375:202;10431:100:66;-1:-1:-1;;;;;10545:16:66;;10541:83;;10584:29;;-1:-1:-1;;;10584:29:66;;;;;;;;;;;10541:83;10653:10;10674:39;10695:4;10701:2;10705:7;10674:20;:39::i;:::-;10724:30;10740:4;10746:7;10724:15;:30::i;:::-;-1:-1:-1;;;;;10765:18:66;;;;;;:12;:18;;;;;:34;;10791:7;10765:25;:34::i;:::-;-1:-1:-1;;;;;;10809:16:66;;;;;;:12;:16;;;;;:29;;10830:7;10809:20;:29::i;:::-;-1:-1:-1;10848:21:66;;;;:12;:21;;;;;;;:26;;-1:-1:-1;;;;;;10848:26:66;-1:-1:-1;;;;;10848:26:66;;;;;;;;;10890:50;;10848:21;;:26;10890:50;;;;;;;10899:8;;10928:5;;10935:4;;10890:50;:::i;:::-;;;;;;;;10951:43;10970:4;10976:2;10980:7;10989:4;10951:18;:43::i;:::-;11004:52;11025:4;11031:2;11035:7;11044:5;11051:4;11004:20;:52::i;6538:115:199:-;6601:7;6627:19;6635:3;4444:18;;4362:107;7664:124;7727:16;7762:19;7770:3;7762:7;:19::i;8028:150::-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:199;;8121:4;:50::i;828:837:74:-;-1:-1:-1;;;;;1005:18:74;;1001:603;;1055:15;;1039:13;1084:18;;;:11;:18;;;;;;;;:28;;;1126:20;;;:11;:20;;;;;:28;2129:137:174::1;1839:433:::0;;:::o;1001:603:74:-;-1:-1:-1;;;;;1175:16:74;;1171:433;;1207:17;1245:1;1227:15;;:19;;;;:::i;:::-;1260:13;1276:20;;;:11;:20;;;;;;1207:39;;-1:-1:-1;1314:17:74;;;1310:200;;;1351:19;1373:22;;;:11;:22;;;;;;;;;1413:18;;;;;;:32;;;1463:24;;:11;:24;;;;;:32;;;1310:200;-1:-1:-1;1530:22:74;;;;:11;:22;;;;;;;;1523:29;;;1573:20;;;:11;:20;;;;;1566:27;-1:-1:-1;;1839:433:174:o;6693:933:66:-;7193:52;7248:19;;;:10;:19;;;;;;7307:28;7248:19;7307:26;:28::i;:::-;7278:57;;7350:9;7345:275;7369:18;7365:1;:22;7345:275;;;7505:16;7524:25;:19;7505:16;7524:22;:25::i;:::-;7505:44;;7563:46;7579:8;7589:10;7601:7;7563:15;:46::i;:::-;-1:-1:-1;2841:1:174;2837:5;7345:275:66;;6109:129:199;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;11776:420:66:-;11935:62;11973:4;-1:-1:-1;;;11935:37:66;:62::i;:::-;11931:259;;;12013:23;12056:4;12062:2;12066:7;12075:4;12039:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12039:41:66;;;;;;;;;;-1:-1:-1;;;12094:85:66;;12039:41;-1:-1:-1;;;;;;12094:46:66;;;;;:85;;547:66:63;;12039:41:66;;12094:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12094:85:66;;;;;;;;;;;;:::i;8346:156:199:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:199;;8442:7;:53::i;9457:2804:200:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:200;;19688:2:202;9631:50:200;;;19670:21:202;19727:2;19707:18;;;19700:30;-1:-1:-1;;;19746:18:202;;;19739:44;19800:18;;9631:50:200;19486:338:202;9631:50:200;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:200;;20031:2:202;9691:63:200;;;20013:21:202;20070:2;20050:18;;;20043:30;-1:-1:-1;;;20089:18:202;;;20082:47;20146:18;;9691:63:200;19829:341:202;9691:63:200;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:200;;;11804:2;11787:11;-1:-1:-1;;11783:25:200;11777:4;11770:39;-1:-1:-1;9821:2397:200;-1:-1:-1;12245:9:200;9457:2804;-1:-1:-1;;;;9457:2804:200:o;8583:165:199:-;-1:-1:-1;;;;;8716:23:199;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;5818:123;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;12480:681:66:-;12661:60;12699:2;-1:-1:-1;;;12661:37:66;:60::i;:::-;12657:498;;;12737:23;12780:4;12786:2;12790:7;12799:4;12763:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12763:41:66;;;;;;;;;;-1:-1:-1;;;12818:86:66;;12763:41;-1:-1:-1;;;;;;12818:44:66;;;;;:86;;713:66:63;;12763:41:66;;12818:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12818:86:66;;;;;;;;;;;;:::i;:::-;;12723:192;12657:498;;;12926:5;12921:234;;-1:-1:-1;;;;;12951:14:66;;;:19;12947:198;;12997:55;;-1:-1:-1;;;12997:55:66;;-1:-1:-1;;;;;4888:32:202;;12997:55:66;;;4870:51:202;4843:18;;12997:55:66;4724:203:202;12947:198:66;13098:32;;-1:-1:-1;;;13098:32:66;;-1:-1:-1;;;;;4888:32:202;;13098::66;;;4870:51:202;4843:18;;13098:32:66;4724:203:202;5469:109:199;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:199;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:199;2488:12;;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:199;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;4680:811:1;4846:105;;;-1:-1:-1;;;;;;20469:33:202;;4846:105:1;;;;20451:52:202;;;;4846:105:1;;;;;;;;;;20424:18:202;;;;4846:105:1;;;;;;;;;-1:-1:-1;;;;;4846:105:1;-1:-1:-1;;;4846:105:1;;;5250:20;;4797:4;;4846:105;4797:4;;;;;;4846:105;4797:4;;5250:20;5183:7;5160:5;5132:196;5121:207;;5355:16;5341:30;;5405:4;5399:11;5384:26;;5436:7;:29;;;;;5461:4;5447:10;:18;;5436:29;:48;;;;;5483:1;5469:11;:15;5436:48;5429:55;4680:811;-1:-1:-1;;;;;;;4680:811:1:o;4811:118:199:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;14:286:202:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:202;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:202;;497:180;-1:-1:-1;497:180:202:o;682:173::-;750:20;;-1:-1:-1;;;;;799:31:202;;789:42;;779:70;;845:1;842;835:12;779:70;682:173;;;:::o;860:254::-;928:6;936;989:2;977:9;968:7;964:23;960:32;957:52;;;1005:1;1002;995:12;957:52;1028:29;1047:9;1028:29;:::i;:::-;1018:39;1104:2;1089:18;;;;1076:32;;-1:-1:-1;;;860:254:202:o;1119:127::-;1180:10;1175:3;1171:20;1168:1;1161:31;1211:4;1208:1;1201:15;1235:4;1232:1;1225:15;1251:275;1322:2;1316:9;1387:2;1368:13;;-1:-1:-1;;1364:27:202;1352:40;;1422:18;1407:34;;1443:22;;;1404:62;1401:88;;;1469:18;;:::i;:::-;1505:2;1498:22;1251:275;;-1:-1:-1;1251:275:202:o;1531:183::-;1591:4;1624:18;1616:6;1613:30;1610:56;;;1646:18;;:::i;:::-;-1:-1:-1;1691:1:202;1687:14;1703:4;1683:25;;1531:183::o;1719:662::-;1773:5;1826:3;1819:4;1811:6;1807:17;1803:27;1793:55;;1844:1;1841;1834:12;1793:55;1880:6;1867:20;1906:4;1930:60;1946:43;1986:2;1946:43;:::i;:::-;1930:60;:::i;:::-;2024:15;;;2110:1;2106:10;;;;2094:23;;2090:32;;;2055:12;;;;2134:15;;;2131:35;;;2162:1;2159;2152:12;2131:35;2198:2;2190:6;2186:15;2210:142;2226:6;2221:3;2218:15;2210:142;;;2292:17;;2280:30;;2330:12;;;;2243;;2210:142;;;-1:-1:-1;2370:5:202;1719:662;-1:-1:-1;;;;;;1719:662:202:o;2386:186::-;2434:4;2467:18;2459:6;2456:30;2453:56;;;2489:18;;:::i;:::-;-1:-1:-1;2555:2:202;2534:15;-1:-1:-1;;2530:29:202;2561:4;2526:40;;2386:186::o;2577:462::-;2619:5;2672:3;2665:4;2657:6;2653:17;2649:27;2639:55;;2690:1;2687;2680:12;2639:55;2726:6;2713:20;2757:48;2773:31;2801:2;2773:31;:::i;2757:48::-;2830:2;2821:7;2814:19;2876:3;2869:4;2864:2;2856:6;2852:15;2848:26;2845:35;2842:55;;;2893:1;2890;2883:12;2842:55;2958:2;2951:4;2943:6;2939:17;2932:4;2923:7;2919:18;2906:55;3006:1;2981:16;;;2999:4;2977:27;2970:38;;;;2985:7;2577:462;-1:-1:-1;;;2577:462:202:o;3044:886::-;3096:5;3149:3;3142:4;3134:6;3130:17;3126:27;3116:55;;3167:1;3164;3157:12;3116:55;3203:6;3190:20;3229:4;3253:60;3269:43;3309:2;3269:43;:::i;3253:60::-;3347:15;;;3433:1;3429:10;;;;3417:23;;3413:32;;;3378:12;;;;3457:15;;;3454:35;;;3485:1;3482;3475:12;3454:35;3521:2;3513:6;3509:15;3533:368;3549:6;3544:3;3541:15;3533:368;;;3635:3;3622:17;3671:18;3658:11;3655:35;3652:125;;;3731:1;3760:2;3756;3749:14;3652:125;3802:56;3854:3;3849:2;3835:11;3827:6;3823:24;3819:33;3802:56;:::i;:::-;3790:69;;-1:-1:-1;3879:12:202;;;;3566;;3533:368;;3935:602;4062:6;4070;4123:2;4111:9;4102:7;4098:23;4094:32;4091:52;;;4139:1;4136;4129:12;4091:52;4179:9;4166:23;4208:18;4249:2;4241:6;4238:14;4235:34;;;4265:1;4262;4255:12;4235:34;4288:61;4341:7;4332:6;4321:9;4317:22;4288:61;:::i;:::-;4278:71;;4402:2;4391:9;4387:18;4374:32;4358:48;;4431:2;4421:8;4418:16;4415:36;;;4447:1;4444;4437:12;4415:36;;4470:61;4523:7;4512:8;4501:9;4497:24;4470:61;:::i;:::-;4460:71;;;3935:602;;;;;:::o;4932:658::-;5103:2;5155:21;;;5225:13;;5128:18;;;5247:22;;;5074:4;;5103:2;5326:15;;;;5300:2;5285:18;;;5074:4;5369:195;5383:6;5380:1;5377:13;5369:195;;;5448:13;;-1:-1:-1;;;;;5444:39:202;5432:52;;5539:15;;;;5504:12;;;;5480:1;5398:9;5369:195;;;-1:-1:-1;5581:3:202;;4932:658;-1:-1:-1;;;;;;4932:658:202:o;5595:348::-;5679:6;5732:2;5720:9;5711:7;5707:23;5703:32;5700:52;;;5748:1;5745;5738:12;5700:52;5788:9;5775:23;5821:18;5813:6;5810:30;5807:50;;;5853:1;5850;5843:12;5807:50;5876:61;5929:7;5920:6;5909:9;5905:22;5876:61;:::i;5948:250::-;6033:1;6043:113;6057:6;6054:1;6051:13;6043:113;;;6133:11;;;6127:18;6114:11;;;6107:39;6079:2;6072:10;6043:113;;;-1:-1:-1;;6190:1:202;6172:16;;6165:27;5948:250::o;6203:270::-;6244:3;6282:5;6276:12;6309:6;6304:3;6297:19;6325:76;6394:6;6387:4;6382:3;6378:14;6371:4;6364:5;6360:16;6325:76;:::i;:::-;6455:2;6434:15;-1:-1:-1;;6430:29:202;6421:39;;;;6462:4;6417:50;;6203:270;-1:-1:-1;;6203:270:202:o;6478:800::-;6638:4;6667:2;6707;6696:9;6692:18;6737:2;6726:9;6719:21;6760:6;6795;6789:13;6826:6;6818;6811:22;6864:2;6853:9;6849:18;6842:25;;6926:2;6916:6;6913:1;6909:14;6898:9;6894:30;6890:39;6876:53;;6964:2;6956:6;6952:15;6985:1;6995:254;7009:6;7006:1;7003:13;6995:254;;;7102:2;7098:7;7086:9;7078:6;7074:22;7070:36;7065:3;7058:49;7130:39;7162:6;7153;7147:13;7130:39;:::i;:::-;7120:49;-1:-1:-1;7227:12:202;;;;7192:15;;;;7031:1;7024:9;6995:254;;;-1:-1:-1;7266:6:202;;6478:800;-1:-1:-1;;;;;;;6478:800:202:o;7283:160::-;7348:20;;7404:13;;7397:21;7387:32;;7377:60;;7433:1;7430;7423:12;7448:606;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7830:35;7861:2;7850:9;7846:18;7830:35;:::i;:::-;7820:45;;7916:3;7905:9;7901:19;7888:33;7944:18;7936:6;7933:30;7930:50;;;7976:1;7973;7966:12;7930:50;7999:49;8040:7;8031:6;8020:9;8016:22;7999:49;:::i;:::-;7989:59;;;7448:606;;;;;;;;:::o;8059:217::-;8206:2;8195:9;8188:21;8169:4;8226:44;8266:2;8255:9;8251:18;8243:6;8226:44;:::i;8281:186::-;8340:6;8393:2;8381:9;8372:7;8368:23;8364:32;8361:52;;;8409:1;8406;8399:12;8361:52;8432:29;8451:9;8432:29;:::i;8472:668::-;8526:5;8579:3;8572:4;8564:6;8560:17;8556:27;8546:55;;8597:1;8594;8587:12;8546:55;8633:6;8620:20;8659:4;8683:60;8699:43;8739:2;8699:43;:::i;8683:60::-;8777:15;;;8863:1;8859:10;;;;8847:23;;8843:32;;;8808:12;;;;8887:15;;;8884:35;;;8915:1;8912;8905:12;8884:35;8951:2;8943:6;8939:15;8963:148;8979:6;8974:3;8971:15;8963:148;;;9045:23;9064:3;9045:23;:::i;:::-;9033:36;;9089:12;;;;8996;;8963:148;;9145:662;9196:5;9249:3;9242:4;9234:6;9230:17;9226:27;9216:55;;9267:1;9264;9257:12;9216:55;9303:6;9290:20;9329:4;9353:60;9369:43;9409:2;9369:43;:::i;9353:60::-;9447:15;;;9533:1;9529:10;;;;9517:23;;9513:32;;;9478:12;;;;9557:15;;;9554:35;;;9585:1;9582;9575:12;9554:35;9621:2;9613:6;9609:15;9633:145;9649:6;9644:3;9641:15;9633:145;;;9715:20;9731:3;9715:20;:::i;:::-;9703:33;;9756:12;;;;9666;;9633:145;;9812:1276;10038:6;10046;10054;10062;10070;10123:3;10111:9;10102:7;10098:23;10094:33;10091:53;;;10140:1;10137;10130:12;10091:53;10180:9;10167:23;10209:18;10250:2;10242:6;10239:14;10236:34;;;10266:1;10263;10256:12;10236:34;10289:61;10342:7;10333:6;10322:9;10318:22;10289:61;:::i;:::-;10279:71;;10403:2;10392:9;10388:18;10375:32;10359:48;;10432:2;10422:8;10419:16;10416:36;;;10448:1;10445;10438:12;10416:36;10471:63;10526:7;10515:8;10504:9;10500:24;10471:63;:::i;:::-;10461:73;;10587:2;10576:9;10572:18;10559:32;10543:48;;10616:2;10606:8;10603:16;10600:36;;;10632:1;10629;10622:12;10600:36;10655:63;10710:7;10699:8;10688:9;10684:24;10655:63;:::i;:::-;10645:73;;10771:2;10760:9;10756:18;10743:32;10727:48;;10800:2;10790:8;10787:16;10784:36;;;10816:1;10813;10806:12;10784:36;10839:60;10891:7;10880:8;10869:9;10865:24;10839:60;:::i;:::-;10829:70;;10952:3;10941:9;10937:19;10924:33;10908:49;;10982:2;10972:8;10969:16;10966:36;;;10998:1;10995;10988:12;10966:36;;11021:61;11074:7;11063:8;11052:9;11048:24;11021:61;:::i;11093:388::-;11170:6;11178;11231:2;11219:9;11210:7;11206:23;11202:32;11199:52;;;11247:1;11244;11237:12;11199:52;11283:9;11270:23;11260:33;;11344:2;11333:9;11329:18;11316:32;11371:18;11363:6;11360:30;11357:50;;;11403:1;11400;11393:12;11357:50;11426:49;11467:7;11458:6;11447:9;11443:22;11426:49;:::i;11853:632::-;12024:2;12076:21;;;12146:13;;12049:18;;;12168:22;;;11995:4;;12024:2;12247:15;;;;12221:2;12206:18;;;11995:4;12290:169;12304:6;12301:1;12298:13;12290:169;;;12365:13;;12353:26;;12434:15;;;;12399:12;;;;12326:1;12319:9;12290:169;;13123:127;13184:10;13179:3;13175:20;13172:1;13165:31;13215:4;13212:1;13205:15;13239:4;13236:1;13229:15;14220:380;14299:1;14295:12;;;;14342;;;14363:61;;14417:4;14409:6;14405:17;14395:27;;14363:61;14470:2;14462:6;14459:14;14439:18;14436:38;14433:161;;14516:10;14511:3;14507:20;14504:1;14497:31;14551:4;14548:1;14541:15;14579:4;14576:1;14569:15;14730:544;14831:2;14826:3;14823:11;14820:448;;;14867:1;14892:5;14888:2;14881:17;14937:4;14933:2;14923:19;15007:2;14995:10;14991:19;14988:1;14984:27;14978:4;14974:38;15043:4;15031:10;15028:20;15025:47;;;-1:-1:-1;15066:4:202;15025:47;15121:2;15116:3;15112:12;15109:1;15105:20;15099:4;15095:31;15085:41;;15176:82;15194:2;15187:5;15184:13;15176:82;;;15239:17;;;15220:1;15209:13;15176:82;;15450:1348;15574:3;15568:10;15601:18;15593:6;15590:30;15587:56;;;15623:18;;:::i;:::-;15652:96;15741:6;15701:38;15733:4;15727:11;15701:38;:::i;:::-;15695:4;15652:96;:::i;:::-;15803:4;;15867:2;15856:14;;15884:1;15879:662;;;;16585:1;16602:6;16599:89;;;-1:-1:-1;16654:19:202;;;16648:26;16599:89;-1:-1:-1;;15407:1:202;15403:11;;;15399:24;15395:29;15385:40;15431:1;15427:11;;;15382:57;16701:81;;15849:943;;15879:662;14677:1;14670:14;;;14714:4;14701:18;;-1:-1:-1;;15915:20:202;;;16032:236;16046:7;16043:1;16040:14;16032:236;;;16135:19;;;16129:26;16114:42;;16227:27;;;;16195:1;16183:14;;;;16062:19;;16032:236;;;16036:3;16296:6;16287:7;16284:19;16281:201;;;16357:19;;;16351:26;-1:-1:-1;;16440:1:202;16436:14;;;16452:3;16432:24;16428:37;16424:42;16409:58;16394:74;;16281:201;-1:-1:-1;;;;;16528:1:202;16512:14;;;16508:22;16495:36;;-1:-1:-1;15450:1348:202:o;16803:127::-;16864:10;16859:3;16855:20;16852:1;16845:31;16895:4;16892:1;16885:15;16919:4;16916:1;16909:15;16935:128;17002:9;;;17023:11;;;17020:37;;;17037:18;;:::i;17068:395::-;-1:-1:-1;;;;;17265:32:202;;17247:51;;17341:14;;17334:22;17329:2;17314:18;;17307:50;17393:2;17388;17373:18;;17366:30;;;-1:-1:-1;;17413:44:202;;17438:18;;17430:6;17413:44;:::i;:::-;17405:52;17068:395;-1:-1:-1;;;;;17068:395:202:o;17829:125::-;17894:9;;;17915:10;;;17912:36;;;17928:18;;:::i;17959:577::-;18172:3;18204:26;18200:31;18273:2;18264:6;18260:2;18256:15;18252:24;18247:3;18240:37;18328:2;18319:6;18315:2;18311:15;18307:24;18302:2;18297:3;18293:12;18286:46;;18362:6;18357:2;18352:3;18348:12;18341:28;18398:6;18392:13;18414:75;18482:6;18477:2;18472:3;18468:12;18461:4;18453:6;18449:17;18414:75;:::i;:::-;18509:16;;;;18527:2;18505:25;;17959:577;-1:-1:-1;;;;;17959:577:202:o;18541:288::-;18716:6;18705:9;18698:25;18759:2;18754;18743:9;18739:18;18732:30;18679:4;18779:44;18819:2;18808:9;18804:18;18796:6;18779:44;:::i;18834:647::-;18913:6;18966:2;18954:9;18945:7;18941:23;18937:32;18934:52;;;18982:1;18979;18972:12;18934:52;19015:9;19009:16;19048:18;19040:6;19037:30;19034:50;;;19080:1;19077;19070:12;19034:50;19103:22;;19156:4;19148:13;;19144:27;-1:-1:-1;19134:55:202;;19185:1;19182;19175:12;19134:55;19214:2;19208:9;19239:48;19255:31;19283:2;19255:31;:::i;19239:48::-;19310:2;19303:5;19296:17;19350:7;19345:2;19340;19336;19332:11;19328:20;19325:33;19322:53;;;19371:1;19368;19361:12;19322:53;19384:67;19448:2;19443;19436:5;19432:14;19427:2;19423;19419:11;19384:67;:::i;20175:127::-;20236:10;20231:3;20227:20;20224:1;20217:31;20267:4;20264:1;20257:15;20291:4;20288:1;20281:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeOperator(address,bytes32)": "cf5182ba",
    "balanceOf(address)": "70a08231",
    "burn(bytes32)": "08a1eee1",
    "getData(bytes32)": "54f6127f",
    "getData(bytes32[])": "4e3e6e9c",
    "getOperatorsOf(bytes32)": "49a6078d",
    "isOperatorFor(address,bytes32)": "2a3654a4",
    "mint(address,bytes32)": "2cfd3005",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "revokeOperator(address,bytes32)": "0b0c6d82",
    "setData(bytes32,bytes)": "7f23690c",
    "setData(bytes32[],bytes[])": "14a6e293",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenAt(uint256)": "92a91a3a",
    "tokenIdsOf(address)": "a3b261f2",
    "tokenOwnerOf(bytes32)": "217b2270",
    "totalSupply()": "18160ddd",
    "transfer(address,address,bytes32,bool,bytes)": "511b6952",
    "transferBatch(address[],address[],bytes32[],bool[],bytes[])": "7e87632c",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dataKeysLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataValuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesLengthMismatch(uint256,uint256)\":[{\"details\":\"reverts when there is not the same number of elements in the lists of data keys and data values when calling setData(bytes32[],bytes[]).\",\"params\":{\"dataKeysLength\":\"the number of data keys in the bytes32[] dataKeys\",\"dataValuesLength\":\"the number of data value in the bytes[] dataValue\"}}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed.      The `LSP4TokenName` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed.      The `LSP4TokenSymbol` data key is located inside the ERC725Y Data key-value store of the digital asset contract.      It can be set only once inside the constructor/initializer when the digital asset contract is being deployed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"reverts when `tokenId` has already been minted.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32)\":{\"details\":\"Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"tokenId\":\"The tokenId operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query\"},\"returns\":{\"_0\":\"The number of tokens owned by this address\"}},\"getData(bytes32)\":{\"params\":{\"dataKey\":\"The key which value to retrieve\"},\"returns\":{\"dataValue\":\"The data stored at the key\"}},\"getData(bytes32[])\":{\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The list of operators for the `tokenId`\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.\",\"params\":{\"operator\":\"The address to query\",\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"True if the owner of `tokenId` is `operator` address, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32)\":{\"details\":\"Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.\",\"params\":{\"operator\":\"The address to revoke as an operator.\",\"tokenId\":\"The tokenId `operator` is revoked from operating\"}},\"setData(bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key to retrieve stored value\",\"dataValue\":\"The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\"}},\"setData(bytes32[],bytes[])\":{\"details\":\"Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.\",\"params\":{\"dataKeys\":\"The array of data keys for values to set\",\"dataValues\":\"The array of values to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenAt(uint256)\":{\"details\":\"Returns a token id at index. See totalSupply() to get total number of minted tokens.\",\"returns\":{\"_0\":\"TokenId or 0x00 if no token exist at the index `index`\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenOwner\":\"The address to query owned tokens\"},\"returns\":{\"_0\":\"List of owned tokens by `tokenOwner` address\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.\",\"params\":{\"tokenId\":\"The tokenId to query\"},\"returns\":{\"_0\":\"The address owning the `tokenId`\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens.\",\"returns\":{\"_0\":\"The number of existing tokens\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The sending address.\",\"to\":\"The receiving address.\",\"tokenId\":\"The tokenId to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"from\":\"The list of sending addresses.\",\"to\":\"The list of receiving addresses.\",\"tokenId\":\"The list of tokenId to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"Emitted when data at a key is changed\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Gets singular data at a given `dataKey`\"},\"getData(bytes32[])\":{\"notice\":\"Gets array of data for multiple given keys\"},\"setData(bytes32,bytes)\":{\"notice\":\"Sets singular data for a given `dataKey`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/Tokens/LSP8EnumerableTester.sol\":\"LSP8EnumerableTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549\",\"dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB\"]},\"contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c\",\"dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B\"]},\"contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2\",\"dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0\",\"dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d\",\"dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET\"]},\"contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808\",\"dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q\"]},\"contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8\",\"dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a\",\"dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d\",\"dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5\",\"dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g\"]},\"contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805\",\"dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv\"]},\"contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Enumerable.sol\":{\"keccak256\":\"0x7ac00e5eb61998289b131836c19041576e7ce3c90507db104b20782f50ae92a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c7362fc6bb1ddc4fcdd2803d03e635c3b0b9bcfeabfa11e2ae1bf7fd05284af\",\"dweb:/ipfs/QmSdgerswxCc99wt4ghZR5M4FbyRe1Tvsiw4gFmCxeWTYk\"]},\"contracts/Mocks/Tokens/LSP8EnumerableTester.sol\":{\"keccak256\":\"0xa30afc04f9aeb1fcf8871fcacf77009bd0333aead5af78401dbf62d866d8df16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6983c913dbae29d64b8221217e5e7444ea1c3a8d0167550785891b8273e67a3\",\"dweb:/ipfs/QmXwMQJsU3G71hznL5ZdiZoSLWUWDsfvJ9VMpMRxmEWD2q\"]},\"contracts/Utils/GasLib.sol\":{\"keccak256\":\"0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9\",\"dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244\",\"dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL\"]},\"node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b\",\"dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C\"]},\"node_modules/@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834\",\"dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD\"]},\"node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e\",\"dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP\"]},\"node_modules/@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089\",\"dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ\"]},\"node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6\",\"dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"node_modules/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dataKeysLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataValuesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC725Y_DataKeysValuesLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenNameNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP4TokenSymbolNotEditable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotSendToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8CannotUseAddressZeroAsOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LSP8InvalidTransferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistentTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8NonExistingOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotTokenOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverContractMissingLSP1Interface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LSP8NotifyTokenReceiverIsEOA"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8OperatorAlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "LSP8TokenIdAlreadyMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DataChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorsOf",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "dataKeys",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes[]",
              "name": "dataValues",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dataValue",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenAt",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdsOf",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "force",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "from",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "tokenId",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool[]",
              "name": "force",
              "type": "bool[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeOperator(address,bytes32)": {
            "details": "Makes `operator` address an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits an {AuthorizedOperator} event.",
            "params": {
              "operator": "The address to authorize as an operator.",
              "tokenId": "The tokenId operator has access to."
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens owned by `tokenOwner`.",
            "params": {
              "tokenOwner": "The address to query"
            },
            "returns": {
              "_0": "The number of tokens owned by this address"
            }
          },
          "getData(bytes32)": {
            "params": {
              "dataKey": "The key which value to retrieve"
            },
            "returns": {
              "dataValue": "The data stored at the key"
            }
          },
          "getData(bytes32[])": {
            "params": {
              "dataKeys": "The array of keys which values to retrieve"
            },
            "returns": {
              "dataValues": "The array of data stored at multiple keys"
            }
          },
          "getOperatorsOf(bytes32)": {
            "details": "Returns all `operator` addresses of `tokenId`. Requirements - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The list of operators for the `tokenId`"
            }
          },
          "isOperatorFor(address,bytes32)": {
            "details": "Returns whether `operator` address is an operator of `tokenId`. Operators can send and burn tokens on behalf of their owners. The tokenOwner is their own operator. Requirements - `tokenId` must exist.",
            "params": {
              "operator": "The address to query",
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "True if the owner of `tokenId` is `operator` address, false otherwise"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revokeOperator(address,bytes32)": {
            "details": "Removes `operator` address as an operator of `tokenId`. See {isOperatorFor}. Requirements - `tokenId` must exist. - caller must be current `tokenOwner` of `tokenId`. - `operator` cannot be the zero address. Emits a {RevokedOperator} event.",
            "params": {
              "operator": "The address to revoke as an operator.",
              "tokenId": "The tokenId `operator` is revoked from operating"
            }
          },
          "setData(bytes32,bytes)": {
            "params": {
              "dataKey": "The key to retrieve stored value",
              "dataValue": "The value to set SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event."
            }
          },
          "setData(bytes32[],bytes[])": {
            "details": "Sets array of data for multiple given `dataKeys` SHOULD only be callable by the owner of the contract set via ERC173 Emits a {DataChanged} event.",
            "params": {
              "dataKeys": "The array of data keys for values to set",
              "dataValues": "The array of values to set"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenAt(uint256)": {
            "details": "Returns a token id at index. See totalSupply() to get total number of minted tokens.",
            "returns": {
              "_0": "TokenId or 0x00 if no token exist at the index `index`"
            }
          },
          "tokenIdsOf(address)": {
            "details": "Returns the list of `tokenIds` for the `tokenOwner` address.",
            "params": {
              "tokenOwner": "The address to query owned tokens"
            },
            "returns": {
              "_0": "List of owned tokens by `tokenOwner` address"
            }
          },
          "tokenOwnerOf(bytes32)": {
            "details": "Returns the `tokenOwner` address of the `tokenId` token. Requirements: - `tokenId` must exist.",
            "params": {
              "tokenId": "The tokenId to query"
            },
            "returns": {
              "_0": "The address owning the `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "Returns the number of existing tokens.",
            "returns": {
              "_0": "The number of existing tokens"
            }
          },
          "transfer(address,address,bytes32,bool,bytes)": {
            "details": "Transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of `tokenId`. Emits a {Transfer} event.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The sending address.",
              "to": "The receiving address.",
              "tokenId": "The tokenId to transfer."
            }
          },
          "transferBatch(address[],address[],bytes32[],bool[],bytes[])": {
            "details": "Transfers many tokens based on the list `from`, `to`, `tokenId`. If any transfer fails the call will revert. Requirements: - `from`, `to`, `tokenId` lists are the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - `from` and `to` cannot be the same address at the same index of each lists. - each `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`. Emits {Transfer} events.",
            "params": {
              "data": "Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
              "force": "When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver",
              "from": "The list of sending addresses.",
              "to": "The list of receiving addresses.",
              "tokenId": "The list of tokenId to transfer."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getData(bytes32)": {
            "notice": "Gets singular data at a given `dataKey`"
          },
          "getData(bytes32[])": {
            "notice": "Gets array of data for multiple given keys"
          },
          "setData(bytes32,bytes)": {
            "notice": "Sets singular data for a given `dataKey`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc725/=node_modules/@erc725/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Mocks/Tokens/LSP8EnumerableTester.sol": "LSP8EnumerableTester"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Custom/ERC165Checker.sol": {
        "keccak256": "0x08d1d2d4108eb4964940e619106e146f15a7cff65998f6d80795d3aa94c1374e",
        "urls": [
          "bzz-raw://9843f7fa3c2743ae7dfeaa6df92295f6cbd30ce243728a2185bb3ec15244f549",
          "dweb:/ipfs/QmYTLjbcMYHAxSSMHCW81YTSySGXGo2TGwNQQaCjEMmowB"
        ],
        "license": "MIT"
      },
      "contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol": {
        "keccak256": "0x7fc821e27ddd75a0d0df28c3cd186a208f482ca378339750b8d3205fdb8f0cd8",
        "urls": [
          "bzz-raw://75fab000a36459e01d5d83e8c7e52b887bcd073d93549544ca7b686378c8324c",
          "dweb:/ipfs/QmP6ygJifegRcA1oT54u8gPtTfF8fnMetTk33djzGq4f6B"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP1UniversalReceiver/LSP1Constants.sol": {
        "keccak256": "0xa6d5ec0a6825237692feeb924e1b04a806fd4bb60ff9ad0b0cc095273b6fcd26",
        "urls": [
          "bzz-raw://2e26916a74b5f241dd37d34d0ffdb68b1cbea094cadfbfe293558fffa09df9a2",
          "dweb:/ipfs/QmVbu6qdyf24s9ZSbXXkxDnqqnSwxCR31v8XrxmtdLggP7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol": {
        "keccak256": "0x0fc0aac5c1b6042d9144718de00ee1e3bbbe2baa33d9e325f8fb56aca63c5f55",
        "urls": [
          "bzz-raw://66089951845b83dd168552442fbcd2a1b1988a18fb67642c5178d48f12b6c8c0",
          "dweb:/ipfs/QmXany3a7AwkFddTqo2xskSUBVX5NEghbEjqS8PR4FevpD"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol": {
        "keccak256": "0xebf5921d079aa92892b6c0dbb9cae91c071ab7208c360906dcc081ca63cab274",
        "urls": [
          "bzz-raw://a2f3a1dfd18a5281be10f786d791108830a4aa17d65e1dc7224a12144564171d",
          "dweb:/ipfs/QmX57fWCXceJfNHeUgYr1d24fM7vKU6xcZhCnwu4rW4CET"
        ],
        "license": "MIT"
      },
      "contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol": {
        "keccak256": "0x348c24d162a700a2fb5d24c28ab7a3cda6cb606fb3c32114c19ed21f0e8dd050",
        "urls": [
          "bzz-raw://3524d11ad729e6455ed473194d9f2fd1bd582295b0f175f1a6f3c67c67e1c808",
          "dweb:/ipfs/QmPtXxZRRM9evje4W59PWbEKAqmRGjPuyEz9zs5ehbhY9q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0xe0cf42411d03fb2861f0236e0349a1946aeee8ec1e1f128b121849117d4ed268",
        "urls": [
          "bzz-raw://beddc62135666014e00b3f66dc703b4af13bd3e8f3560d579497460df6b6c4b8",
          "dweb:/ipfs/QmYa1ntMMJySRpvCakwkWy86pdWpf8WtUYEb4Vjq2KLHLU"
        ],
        "license": "MIT"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol": {
        "keccak256": "0x90a52f418af3823bf068b440edfc98e5302047c30626ebb9bb224b53bf05e7c2",
        "urls": [
          "bzz-raw://ad13e39c23c4dbd0c095084a3105b5a5331a4aaeed255836c20d775231d52f6a",
          "dweb:/ipfs/QmNusjgxqvk87vbvejCAtqnv83gnkJxkK1DqgiGb74Jgqp"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol": {
        "keccak256": "0x028f0ab8726e7ba67f7154ea24002241a69b7135df4be2d4f632f82a135871a4",
        "urls": [
          "bzz-raw://55a7108b3d9859e4fdfa6a079d287169a5c6f22c76e3fff3f8d4f28bd99ca96d",
          "dweb:/ipfs/QmfF9diUxU57r6SXR722A95MCYczzJYEbLagZHCtbAPwre"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol": {
        "keccak256": "0x90b5be038ce20aef66c56143e874044bdd6604561c34e353b51a34176e126552",
        "urls": [
          "bzz-raw://a406898ec06050f2df7c09b9071a21c055537ea70184aedd42c646afba0451e5",
          "dweb:/ipfs/QmV7JvcxtwityCdwwFbsTtFX5fKYZ2v4EENk9UfqDrie8g"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol": {
        "keccak256": "0x4a0b8b6799b775a9dd651c695c710982c29145a2877eb36c149755c5dfc38b72",
        "urls": [
          "bzz-raw://e016ecd28dcd1f5fb856ac47b201162063275ca2e2a01b31e38864c8cfb8c805",
          "dweb:/ipfs/QmU1yCX1mfYx4ZSSWPnyK7RCV9xJKsaDw7VdquKVXumTXv"
        ],
        "license": "CC0-1.0"
      },
      "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Enumerable.sol": {
        "keccak256": "0x7ac00e5eb61998289b131836c19041576e7ce3c90507db104b20782f50ae92a4",
        "urls": [
          "bzz-raw://8c7362fc6bb1ddc4fcdd2803d03e635c3b0b9bcfeabfa11e2ae1bf7fd05284af",
          "dweb:/ipfs/QmSdgerswxCc99wt4ghZR5M4FbyRe1Tvsiw4gFmCxeWTYk"
        ],
        "license": "MIT"
      },
      "contracts/Mocks/Tokens/LSP8EnumerableTester.sol": {
        "keccak256": "0xa30afc04f9aeb1fcf8871fcacf77009bd0333aead5af78401dbf62d866d8df16",
        "urls": [
          "bzz-raw://a6983c913dbae29d64b8221217e5e7444ea1c3a8d0167550785891b8273e67a3",
          "dweb:/ipfs/QmXwMQJsU3G71hznL5ZdiZoSLWUWDsfvJ9VMpMRxmEWD2q"
        ],
        "license": "MIT"
      },
      "contracts/Utils/GasLib.sol": {
        "keccak256": "0x6c1b726ea33e120c819f54f1262631365ab32b88fa7b3c48e71f3353548f4845",
        "urls": [
          "bzz-raw://185ffff25266a0f595a18c42f9b6db23d9e9a884f3878a7292d051b2e7fc0bf9",
          "dweb:/ipfs/QmRNgNTUJBxyJ9VwSZy754R4t9B27rJuE8VJ56dSCaUB31"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725Y.sol": {
        "keccak256": "0xf912f29507fa1f3b1521a0b6d94dfcfc8ece8747ecf5d0427b8b19e60a8c3dde",
        "urls": [
          "bzz-raw://9ed01859cec769ed52240e4557787e06a8e0e41c07d1c5877e5d9309da3b5244",
          "dweb:/ipfs/QmeEmiY1Qjmka1py6JWBvKBiDt23RZPF3U3qHVmqheWsJL"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/ERC725YCore.sol": {
        "keccak256": "0xc02f97a3a08b659e4c2d00735b0cbb6d8ab3759693b893fcc3f1213e8f5b2ca6",
        "urls": [
          "bzz-raw://7d66151e33557a89dcb19c2088b3d6a263d4678b3a3aa2f9b2b336739b506f7b",
          "dweb:/ipfs/QmZQByTDXFXQyAbXHRN592YiggdZc1JvzBG3eXLVNfaW6C"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/constants.sol": {
        "keccak256": "0x3f5b99fbe4cfb947060d3fe735cbe49aa485123417c3a1a425f3bc19ff2da3cb",
        "urls": [
          "bzz-raw://8403c8f3fe0ffb697a9eb170db340ed2873a7a98cbbd913dcb20cabf67327834",
          "dweb:/ipfs/QmXvmrVMGaNbdS1VdLgKB1RNiPLWCtcUXqfXHz3i9C5XUD"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/custom/OwnableUnset.sol": {
        "keccak256": "0xe77afcd7d2496c79578ff7f219c0fad901fa4e0421f9ba389eb5f5eb7d9f1dcf",
        "urls": [
          "bzz-raw://bc4186cf3bffd2b00017463ead8dfdef4c09e47fa943788beec42c4b66253f9e",
          "dweb:/ipfs/QmXvQwkdxHjUJzfs8P86JJbS3aqSgXhxKt4zYSkjW3hnqP"
        ],
        "license": "MIT"
      },
      "node_modules/@erc725/smart-contracts/contracts/errors.sol": {
        "keccak256": "0x2f317b1e5f3caa2ffaa26fa6abf483b310c92d7a579207c6febde37422913548",
        "urls": [
          "bzz-raw://440d47addc1cc1cd991c2be80522e3086c8470d3f739387dc81c2920df905089",
          "dweb:/ipfs/QmW64dnj9LAutsgc5sjm35tkgjVWVF236Dy1UXvWczoXFZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
        "keccak256": "0x61689c193b68a7f29a9a4cef38d82c6ec5e2b0036e3d8d4cabd6d68ee1eb0142",
        "urls": [
          "bzz-raw://c48adc3fe4b11578339f0fa75839917948e657cdb925956e5b2b01612dfed1c6",
          "dweb:/ipfs/QmcgEaUqFWW3ygbNEKQ9xtfk9SXEAen9eGTXVTieExm5JV"
        ],
        "license": "CC0-1.0"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "node_modules/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Mocks/Tokens/LSP8EnumerableTester.sol",
    "id": 17012,
    "exportedSymbols": {
      "LSP8Enumerable": [
        12598
      ],
      "LSP8EnumerableTester": [
        17011
      ],
      "LSP8IdentifiableDigitalAsset": [
        10104
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:682:139",
    "nodes": [
      {
        "id": 16963,
        "nodeType": "PragmaDirective",
        "src": "33:23:139",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16965,
        "nodeType": "ImportDirective",
        "src": "69:119:139",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17012,
        "sourceUnit": 10105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16964,
              "name": "LSP8IdentifiableDigitalAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10104,
              "src": "82:28:139",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16967,
        "nodeType": "ImportDirective",
        "src": "189:96:139",
        "nodes": [],
        "absolutePath": "contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Enumerable.sol",
        "file": "../../LSP8IdentifiableDigitalAsset/extensions/LSP8Enumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17012,
        "sourceUnit": 12599,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16966,
              "name": "LSP8Enumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12598,
              "src": "197:14:139",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17011,
        "nodeType": "ContractDefinition",
        "src": "287:427:139",
        "nodes": [
          {
            "id": 16984,
            "nodeType": "FunctionDefinition",
            "src": "341:157:139",
            "nodes": [],
            "body": {
              "id": 16983,
              "nodeType": "Block",
              "src": "496:2:139",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 16978,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16971,
                    "src": "472:4:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16979,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16973,
                    "src": "478:6:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16980,
                    "name": "newOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16975,
                    "src": "486:8:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 16981,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 16977,
                  "name": "LSP8IdentifiableDigitalAsset",
                  "nameLocations": [
                    "443:28:139"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10104,
                  "src": "443:28:139"
                },
                "nodeType": "ModifierInvocation",
                "src": "443:52:139"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16971,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "376:4:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 16984,
                  "src": "362:18:139",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16970,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:6:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16973,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "404:6:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 16984,
                  "src": "390:20:139",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16972,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:6:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16975,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "428:8:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 16984,
                  "src": "420:16:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:139",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:90:139"
            },
            "returnParameters": {
              "id": 16982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:139"
            },
            "scope": 17011,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16999,
            "nodeType": "FunctionDefinition",
            "src": "504:116:139",
            "nodes": [],
            "body": {
              "id": 16998,
              "nodeType": "Block",
              "src": "554:66:139",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16992,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16986,
                        "src": "570:2:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16993,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16988,
                        "src": "574:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 16994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "583:4:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "746f6b656e207072696e74657220676f2062727272",
                        "id": 16995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "589:23:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        },
                        "value": "token printer go brrr"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_238b9ff26bb75ea029045fb59351bb3eccd856598645f476ca084f694b5f5a24",
                          "typeString": "literal_string \"token printer go brrr\""
                        }
                      ],
                      "id": 16991,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10751,
                      "src": "564:5:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bool,bytes memory)"
                      }
                    },
                    "id": 16996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:49:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16997,
                  "nodeType": "ExpressionStatement",
                  "src": "564:49:139"
                }
              ]
            },
            "functionSelector": "2cfd3005",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "513:4:139",
            "parameters": {
              "id": 16989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16986,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "526:2:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 16999,
                  "src": "518:10:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:139",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16988,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "538:7:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 16999,
                  "src": "530:15:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16987,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:29:139"
            },
            "returnParameters": {
              "id": 16990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:0:139"
            },
            "scope": 17011,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17010,
            "nodeType": "FunctionDefinition",
            "src": "626:86:139",
            "nodes": [],
            "body": {
              "id": 17009,
              "nodeType": "Block",
              "src": "664:48:139",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17005,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17001,
                        "src": "680:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6665656c20746865206275726e",
                        "id": 17006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "689:15:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        },
                        "value": "feel the burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19d0a12f91f1ca5f5dab20312a4193fd399a4b78c1ee2cbc351cb4e7f92ce6b",
                          "typeString": "literal_string \"feel the burn\""
                        }
                      ],
                      "id": 17004,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10823,
                      "src": "674:5:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory)"
                      }
                    },
                    "id": 17007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "674:31:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17008,
                  "nodeType": "ExpressionStatement",
                  "src": "674:31:139"
                }
              ]
            },
            "functionSelector": "08a1eee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "635:4:139",
            "parameters": {
              "id": 17002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17001,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "648:7:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 17010,
                  "src": "640:15:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17000,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "639:17:139"
            },
            "returnParameters": {
              "id": 17003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:139"
            },
            "scope": 17011,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16968,
              "name": "LSP8Enumerable",
              "nameLocations": [
                "320:14:139"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12598,
              "src": "320:14:139"
            },
            "id": 16969,
            "nodeType": "InheritanceSpecifier",
            "src": "320:14:139"
          }
        ],
        "canonicalName": "LSP8EnumerableTester",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          17011,
          12598,
          10104,
          11044,
          9968,
          4186,
          43285,
          43508,
          43840,
          46531,
          46594,
          43687
        ],
        "name": "LSP8EnumerableTester",
        "nameLocation": "296:20:139",
        "scope": 17012,
        "usedErrors": [
          4301,
          4304,
          9992,
          10001,
          10008,
          10015,
          10018,
          10021,
          10024,
          10031,
          10036,
          10039,
          10044,
          10049,
          43726
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 139
}